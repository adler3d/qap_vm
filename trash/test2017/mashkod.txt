/*
1273,6833,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,3,4,3
1282,4,2,0
1417,3,0,0
1273,8,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
140,0,64,0
255,0,7,0
140,1,1024,0
299,1,0,0
153,4,-1,1
1448,4,-2,0
1282,4,-1,0
1277,1,0,0
255,5,2,0
157,3,4,2
1282,4,-2,0
1417,3,0,0
1273,32,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
140,0,64,0
255,0,7,0
140,1,1024,0
299,1,0,0
255,1,8,0
153,4,-1,1
1448,4,-2,0
1282,4,-1,0
1277,1,0,0
255,5,2,0
157,3,4,2
1282,4,-2,0
1417,3,0,0
1273,57,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
140,0,64,0
255,0,7,0
140,1,1024,0
299,1,0,0
255,1,16,0
153,4,-1,1
1448,4,-2,0
1282,4,-1,0
1277,1,0,0
255,5,2,0
157,3,4,2
1282,4,-2,0
1417,3,0,0
1273,82,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
140,0,64,0
255,0,7,0
140,1,1024,0
299,1,0,0
255,1,512,0
153,4,-1,1
1448,4,-2,0
1282,4,-1,0
1277,1,0,0
255,5,2,0
157,3,4,2
1282,4,-2,0
1417,3,0,0
1273,107,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
140,0,64,0
255,0,8,0
140,1,1024,0
299,1,0,0
153,4,-1,1
1448,4,-2,0
1282,4,-1,0
1277,1,0,0
255,5,2,0
157,3,4,2
1282,4,-2,0
1417,3,0,0
1273,131,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
157,0,4,6
153,4,-1,0
1421,5,0,0
157,0,4,5
295,0,4,7
153,4,-2,0
1421,5,0,0
140,0,2,0
318,0,4,7
1279,0,0,0
140,0,5,0
318,0,4,6
1415,1,0,0
276,1,0,0
1279,1,0,0
140,0,4,0
318,0,4,5
1415,1,0,0
253,1,0,0
295,1,4,4
153,4,-3,1
1421,5,0,0
157,0,4,6
295,0,4,5
140,1,3,0
299,1,0,0
272,1,4,4
295,1,4,7
153,4,-4,1
1279,0,0,0
157,0,4,-4
318,0,4,3
341,0,4,2
138,1,0,0
1415,0,0,0
153,4,-4,1
157,1,4,-3
268,4,-4,1
1279,0,0,0
157,0,4,-4
318,0,4,3
341,0,4,2
138,1,0,0
1415,0,0,0
153,4,-4,1
157,1,4,-2
268,4,-4,1
1279,0,0,0
157,0,4,-4
318,0,4,3
341,0,4,2
138,1,0,0
1415,0,0,0
153,4,-4,1
157,0,4,-4
324,0,2,0
157,1,4,-1
253,1,0,0
157,3,4,8
153,3,0,1
1273,204,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
1282,4,11,0
1282,4,10,0
1417,4,-2,0
1417,4,-1,0
278,5,2,0
1282,4,5,0
1282,4,4,0
1417,4,-4,0
1417,4,-3,0
1421,5,0,0
278,5,2,0
1421,5,0,0
1448,4,-7,0
1282,4,9,0
1282,4,8,0
1282,4,7,0
1282,4,6,0
1277,542,0,0
255,5,5,0
1448,4,-8,0
1282,4,-6,0
1282,4,-7,0
1277,524,0,0
255,5,3,0
157,0,4,-8
153,4,-5,0
1418,5,0,0
255,5,2,0
278,5,2,0
278,5,2,0
1448,4,-9,0
1282,4,-1,0
1282,4,-2,0
1282,4,9,0
1282,4,8,0
1277,542,0,0
255,5,5,0
1282,4,-8,0
1282,4,-9,0
1417,4,-7,0
1417,4,-6,0
255,5,2,0
1421,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-6,0
1282,4,-7,0
1277,524,0,0
255,5,3,0
157,0,4,-9
153,4,-8,0
1418,5,0,0
113,295,4,-8
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-10,0
1282,4,-6,0
1282,4,-7,0
1282,4,-5,0
1277,602,0,0
255,5,4,0
1448,4,-12,0
1282,4,-9,0
1282,4,-10,0
1282,4,-8,0
1277,632,0,0
255,5,4,0
1448,4,-14,0
1282,4,9,0
1282,4,8,0
1282,4,-11,0
1282,4,-12,0
1277,572,0,0
255,5,5,0
1282,4,-13,0
1282,4,-14,0
1417,4,-2,0
1417,4,-1,0
255,5,2,0
255,5,2,0
255,5,2,0
1273,295,0,0
1432,0,0,0
1418,5,0,0
255,5,2,0
278,5,2,0
278,5,2,0
1448,4,-9,0
1282,4,-3,0
1282,4,-4,0
1282,4,7,0
1282,4,6,0
1277,542,0,0
255,5,5,0
1282,4,-8,0
1282,4,-9,0
1417,4,-7,0
1417,4,-6,0
255,5,2,0
1421,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-6,0
1282,4,-7,0
1277,524,0,0
255,5,3,0
157,0,4,-9
153,4,-8,0
1418,5,0,0
113,353,4,-8
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-10,0
1282,4,-6,0
1282,4,-7,0
1282,4,-5,0
1277,602,0,0
255,5,4,0
1448,4,-12,0
1282,4,-9,0
1282,4,-10,0
1282,4,-8,0
1277,632,0,0
255,5,4,0
1448,4,-14,0
1282,4,7,0
1282,4,6,0
1282,4,-11,0
1282,4,-12,0
1277,572,0,0
255,5,5,0
1282,4,-13,0
1282,4,-14,0
1417,4,-4,0
1417,4,-3,0
255,5,2,0
255,5,2,0
255,5,2,0
1273,353,0,0
1432,0,0,0
1418,5,0,0
255,5,2,0
1421,5,0,0
1421,5,0,0
278,5,2,0
1448,4,-6,0
1282,4,-2,0
1282,4,8,0
1282,4,6,0
1282,4,-4,0
1282,4,3,0
1282,4,2,0
1277,135,0,0
255,5,7,0
1448,4,-7,0
1282,4,-1,0
1282,4,9,0
1282,4,7,0
1282,4,-3,0
1282,4,3,0
1282,4,2,0
1277,135,0,0
255,5,7,0
1448,4,-9,0
1282,4,-6,0
1282,4,-7,0
1277,485,0,0
255,5,3,0
157,3,4,12
1282,4,-8,0
1282,4,-9,0
1417,3,0,0
1417,3,1,0
1273,394,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
255,5,2,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
1448,4,-2,0
1277,12,0,0
255,5,1,0
157,0,4,-2
153,4,-1,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1282,4,-1,0
1277,662,0,0
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
180,0,4,-2
98,428,0,0
1421,5,0,0
1448,4,-3,0
1277,111,0,0
255,5,1,0
157,1,4,-3
153,4,-2,1
1418,5,0,0
1273,428,0,0
1432,0,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-2
272,0,4,2
153,4,-3,0
1448,4,-4,0
1282,4,-1,0
1282,4,-3,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,3,4,3
1282,4,-2,0
1417,3,0,0
1273,447,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,0,0
1282,2,1,0
1277,703,0,0
157,2,4,-1
255,5,3,0
157,3,4,2
1282,4,-2,0
1417,3,0,0
1273,469,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
1447,2,4,-2
1277,473,0,0
157,1,4,3
153,4,-2,1
157,1,4,2
153,4,-1,1
157,3,4,4
1282,4,-1,0
1282,4,-2,0
1417,3,0,0
1417,3,1,0
1273,502,0,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1448,4,-1,0
1282,4,3,0
1282,4,2,0
1277,678,0,0
255,5,3,0
157,3,4,4
1282,4,-1,0
1417,3,0,0
1273,520,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1448,4,-1,0
1282,4,2,0
1282,4,3,0
1277,703,0,0
255,5,3,0
157,3,4,4
1282,4,-1,0
1417,3,0,0
1273,538,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,4
295,0,4,2
153,4,-1,0
157,0,4,5
295,0,4,3
153,4,-2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-2,0
1277,485,0,0
255,5,3,0
157,3,4,6
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1273,568,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,4
272,0,4,2
153,4,-1,0
157,0,4,5
272,0,4,3
153,4,-2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-2,0
1277,485,0,0
255,5,3,0
157,3,4,6
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1273,598,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,3
318,0,4,2
153,4,-1,0
157,0,4,4
318,0,4,2
153,4,-2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-2,0
1277,485,0,0
255,5,3,0
157,3,4,5
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1273,628,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,3
341,0,4,2
153,4,-1,0
157,0,4,4
341,0,4,2
153,4,-2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-2,0
1277,485,0,0
255,5,3,0
157,3,4,5
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1273,658,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
155,4,-1,0
157,0,4,2
156,4,-1,0
157,3,4,3
1282,4,-1,0
1417,3,0,0
1273,674,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,3
160,0,4,2
157,0,4,3
255,0,1,0
157,3,4,4
153,3,0,0
1273,688,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,1,4,2
157,3,4,3
155,3,0,0
1273,699,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
155,4,-1,0
157,0,4,3
157,1,4,2
230,0,1,0
153,4,-1,0
157,3,4,4
1282,4,-1,0
1417,3,0,0
1273,717,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
155,4,-1,0
226,0,4,2
153,4,-1,0
157,3,4,3
1282,4,-1,0
1417,3,0,0
1273,733,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
180,0,4,2
98,745,0,0
1432,0,0,0
140,9,-1,0
1273,745,0,0
1432,0,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,3
410,0,4,2
98,759,0,0
1432,0,0,0
140,9,-1,0
1273,759,0,0
1432,0,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,3
433,0,4,2
98,775,0,0
157,3,4,4
1282,4,3,0
1417,3,0,0
1273,780,0,0
1273,775,0,0
1432,0,0,0
157,3,4,4
1282,4,2,0
1417,3,0,0
1273,780,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,3
456,0,4,2
98,795,0,0
157,3,4,4
1282,4,3,0
1417,3,0,0
1273,800,0,0
1273,795,0,0
1432,0,0,0
157,3,4,4
1282,4,2,0
1417,3,0,0
1273,800,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
1448,4,-1,0
1282,4,4,0
1282,4,2,0
1277,784,0,0
255,5,3,0
1448,4,-2,0
1282,4,-1,0
1282,4,3,0
1277,764,0,0
255,5,3,0
157,3,4,5
1282,4,-2,0
1417,3,0,0
1273,825,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
1447,2,2,1
1277,473,0,0
157,2,4,-1
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,3,0
1447,2,4,-3
1277,829,0,0
157,1,4,4
153,4,-3,1
1282,4,3,0
1282,4,2,0
1417,4,-2,0
1417,4,-1,0
157,3,4,5
1282,4,-1,0
1282,4,-2,0
1282,4,-3,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,864,0,0
255,5,3,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
140,0,1,0
318,0,4,2
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,398,0,0
157,2,4,-1
255,5,2,0
157,1,4,-3
153,2,0,1
1418,5,0,0
1418,5,0,0
155,2,1,0
157,1,4,2
153,2,2,1
157,3,4,3
155,3,0,0
1273,894,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
433,0,2,2
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,2,0,0
1282,4,2,0
1277,678,0,0
157,2,4,-1
255,5,3,0
157,1,4,-2
153,2,0,1
1418,5,0,0
1420,2,1,0
157,3,4,3
1282,2,0,0
1417,3,0,0
1273,931,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,2,0
1277,662,0,0
157,2,4,-1
255,5,2,0
157,3,4,3
1282,4,-2,0
1417,3,0,0
1273,952,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,0
272,0,4,2
295,0,2,1
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
157,2,4,-1
1277,935,0,0
157,2,4,-1
255,5,2,0
157,3,4,3
1282,4,-3,0
1417,3,0,0
1273,980,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
439,0,0,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1281,0,0,0
157,2,4,-1
1277,956,0,0
157,2,4,-1
255,5,2,0
157,3,4,2
1282,4,-2,0
1417,3,0,0
1273,1014,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
439,0,0,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,2,1
278,0,1,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
157,2,4,-1
1277,956,0,0
157,2,4,-1
255,5,2,0
157,3,4,2
1282,4,-3,0
1417,3,0,0
1273,1053,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
157,0,4,2
295,0,2,1
301,0,1,0
157,1,2,0
253,1,0,0
157,3,4,3
153,3,0,1
1273,1071,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
157,0,4,3
295,0,4,4
153,4,-2,0
1421,5,0,0
157,0,4,4
153,4,-3,0
1421,5,0,0
157,0,4,2
153,4,-4,0
1421,5,0,0
157,0,2,0
153,4,-5,0
1273,1096,0,0
1432,0,0,0
1423,4,-3,0
1432,0,0,0
113,1124,4,-3
1421,5,0,0
157,0,4,-2
153,4,-6,0
1421,5,0,0
1448,4,-7,0
1282,4,-6,0
1277,662,0,0
157,2,4,-1
255,5,2,0
157,1,4,-7
153,4,-6,1
1418,5,0,0
157,1,4,-4
268,4,-6,1
1421,5,0,0
1448,4,-7,0
1282,4,-5,0
1282,4,-6,0
1277,678,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1420,4,-5,0
1420,4,-2,0
1418,5,0,0
1273,1094,0,0
1432,0,0,0
157,1,4,4
268,2,1,1
157,1,4,4
268,2,0,1
157,3,4,6
155,3,0,0
1273,1137,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
155,2,2,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
140,0,3,0
318,0,4,2
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,398,0,0
157,2,4,-1
255,5,2,0
157,1,4,-3
153,2,0,1
1418,5,0,0
1418,5,0,0
155,2,1,0
157,1,4,2
153,2,2,1
157,3,4,3
155,3,0,0
1273,1180,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,0,0
1282,4,2,0
1277,678,0,0
157,2,4,-1
255,5,3,0
157,1,4,-2
153,2,0,1
1418,5,0,0
157,3,4,3
1282,2,0,0
1417,3,0,0
1273,1204,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,1184,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,1184,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
157,3,4,4
1282,2,0,0
1417,3,0,0
1273,1234,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
433,0,2,2
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,4,0
157,2,4,-1
1277,1184,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
1282,4,2,0
157,2,4,-1
1277,1208,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1420,2,1,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,1278,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
433,0,2,2
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,1184,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,4,0
1282,4,3,0
157,2,4,-1
1277,1208,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1420,2,1,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,1322,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
1448,4,-2,0
1282,4,2,0
1277,662,0,0
157,2,4,-1
255,5,2,0
157,0,4,2
255,0,1,0
153,4,-3,0
1448,4,-4,0
1282,4,-3,0
1277,662,0,0
157,2,4,-1
255,5,2,0
1448,4,-6,0
1282,4,-2,0
1282,4,-4,0
1277,485,0,0
157,2,4,-1
255,5,3,0
157,3,4,3
1282,4,-5,0
1282,4,-6,0
1417,3,0,0
1417,3,1,0
1273,1365,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
278,5,2,0
278,5,3,0
1448,4,-2,0
1282,4,2,0
1277,662,0,0
157,2,4,-1
255,5,2,0
157,0,4,2
255,0,1,0
153,4,-3,0
1448,4,-5,0
1282,4,-3,0
157,2,4,-1
1277,1326,0,0
157,2,4,-1
255,5,2,0
1448,4,-8,0
1282,4,-2,0
1282,4,-4,0
1282,4,-5,0
1277,843,0,0
157,2,4,-1
255,5,4,0
157,3,4,3
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1412,0,0
255,5,3,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
278,5,3,0
157,0,4,2
295,0,2,1
301,0,3,0
157,1,2,0
253,1,0,0
153,4,-2,1
1448,4,-5,0
1282,4,-2,0
157,2,4,-1
1277,1369,0,0
157,2,4,-1
255,5,2,0
157,3,4,3
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1446,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,3,0
1447,2,4,-4
1277,1141,0,0
157,2,4,-1
157,1,2,0
153,4,-4,1
1279,0,0,0
157,0,2,1
301,0,3,0
138,1,0,0
1415,0,0,0
153,4,-3,1
1279,0,0,0
157,0,2,2
301,0,3,0
138,1,0,0
1415,0,0,0
153,4,-2,1
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1483,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
439,0,0,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
278,5,3,0
1448,4,-4,0
1281,0,0,0
157,2,4,-1
1277,1416,0,0
157,2,4,-1
255,5,2,0
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1521,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,2,1
439,0,0,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
278,5,3,0
157,0,2,1
278,0,1,0
153,4,-2,0
1448,4,-5,0
1282,4,-2,0
157,2,4,-1
1277,1416,0,0
157,2,4,-1
255,5,2,0
157,3,4,2
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1564,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,3,0
1447,2,4,-4
1277,2065,0,0
157,2,4,-1
1421,5,0,0
1448,4,-5,0
1282,2,2,0
1447,2,4,-4
1277,1154,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
155,4,-5,0
1273,1590,0,0
1432,0,0,0
1420,4,-5,0
1432,0,0,0
157,0,4,-5
433,0,2,1
98,1613,0,0
278,5,3,0
1421,5,0,0
1448,4,-8,0
1282,4,-5,0
157,2,4,-1
1277,1416,0,0
157,2,4,-1
255,5,2,0
1448,4,-9,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1447,2,4,-4
1277,1282,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
255,5,3,0
1273,1588,0,0
1432,0,0,0
1418,5,0,0
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,1625,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,3,0
1282,2,1,0
1277,750,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1421,5,0,0
155,4,-2,0
1273,1647,0,0
1432,0,0,0
1420,4,-2,0
1432,0,0,0
157,0,4,-2
433,0,2,1
98,1708,0,0
278,5,3,0
278,5,3,0
1448,4,-8,0
1282,4,-2,0
1447,2,4,2
1277,1416,0,0
157,2,4,-1
255,5,2,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
255,5,3,0
278,5,3,0
278,5,3,0
1448,4,-11,0
1282,4,-2,0
157,2,4,-1
1277,1416,0,0
157,2,4,-1
255,5,2,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1417,4,-8,0
1417,4,-7,0
1417,4,-6,0
255,5,3,0
1421,5,0,0
1448,4,-9,0
1282,4,-5,0
1282,4,-8,0
1277,750,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-4,0
1282,4,-7,0
1277,750,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-3,0
1282,4,-6,0
1277,750,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,3,0
255,5,3,0
1273,1645,0,0
1432,0,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
157,0,4,2
295,0,2,1
301,0,3,0
157,1,2,0
253,1,0,0
157,3,4,3
153,3,0,1
1273,1729,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1282,2,1,0
157,2,4,-1
1277,1715,0,0
157,2,4,-1
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1281,0,0,0
1447,2,4,2
1277,1715,0,0
157,2,4,-1
255,5,2,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
1421,5,0,0
157,0,4,3
301,0,3,0
153,4,-4,0
1421,5,0,0
155,4,-5,0
1273,1769,0,0
1432,0,0,0
1420,4,-5,0
1432,0,0,0
157,0,4,-5
433,0,4,-4
98,1791,0,0
1421,5,0,0
1421,5,0,0
1448,4,-6,0
1282,4,-3,0
1277,662,0,0
157,2,4,-1
255,5,2,0
1448,4,-7,0
1282,4,-2,0
1282,4,-6,0
1277,678,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1420,4,-2,0
1420,4,-3,0
1273,1767,0,0
1432,0,0,0
1418,5,0,0
157,1,4,3
268,2,1,1
1279,0,0,0
157,0,4,3
301,0,3,0
138,1,0,0
1415,0,0,0
268,2,0,1
157,3,4,5
155,3,0,0
1273,1808,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1282,2,1,0
157,2,4,-1
1277,1715,0,0
157,2,4,-1
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1281,0,0,0
1447,2,4,4
1277,1715,0,0
157,2,4,-1
255,5,2,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
1421,5,0,0
157,0,4,2
153,4,-4,0
1421,5,0,0
157,0,4,3
153,4,-5,0
1421,5,0,0
157,0,4,5
153,4,-6,0
1421,5,0,0
155,4,-7,0
1273,1853,0,0
1432,0,0,0
1420,4,-7,0
1432,0,0,0
157,0,4,-7
433,0,4,-6
98,1919,0,0
1421,5,0,0
1421,5,0,0
1448,4,-8,0
1282,4,-3,0
1277,662,0,0
157,2,4,-1
255,5,2,0
1448,4,-9,0
1282,4,-2,0
1282,4,-8,0
1277,678,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1420,4,-2,0
1420,4,-3,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-8,0
1282,4,-3,0
1277,662,0,0
157,2,4,-1
255,5,2,0
157,0,4,-8
272,0,4,-4
153,4,-9,0
1448,4,-10,0
1282,4,-2,0
1282,4,-9,0
1277,678,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1420,4,-2,0
1420,4,-3,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-8,0
1282,4,-3,0
1277,662,0,0
157,2,4,-1
255,5,2,0
157,0,4,-8
272,0,4,-5
153,4,-9,0
1448,4,-10,0
1282,4,-2,0
1282,4,-9,0
1277,678,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1420,4,-2,0
1420,4,-3,0
1273,1851,0,0
1432,0,0,0
1418,5,0,0
157,1,4,5
268,2,1,1
1279,0,0,0
157,0,4,5
301,0,3,0
138,1,0,0
1415,0,0,0
268,2,0,1
157,3,4,7
155,3,0,0
1273,1938,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1282,2,1,0
157,2,4,-1
1277,1715,0,0
157,2,4,-1
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1281,0,0,0
1447,2,4,5
1277,1715,0,0
157,2,4,-1
255,5,2,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
1421,5,0,0
157,0,4,2
153,4,-4,0
1421,5,0,0
157,0,4,3
153,4,-5,0
1421,5,0,0
157,0,4,6
153,4,-6,0
1421,5,0,0
155,4,-7,0
1273,1983,0,0
1432,0,0,0
1420,4,-7,0
1432,0,0,0
157,0,4,-7
433,0,4,-6
98,2042,0,0
1421,5,0,0
1448,4,-8,0
1282,4,-2,0
1282,4,4,0
1277,678,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1420,4,-2,0
1420,4,-3,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-8,0
1282,4,-3,0
1277,662,0,0
157,2,4,-1
255,5,2,0
157,0,4,-8
272,0,4,-4
153,4,-9,0
1448,4,-10,0
1282,4,-2,0
1282,4,-9,0
1277,678,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1420,4,-2,0
1420,4,-3,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-8,0
1282,4,-3,0
1277,662,0,0
157,2,4,-1
255,5,2,0
157,0,4,-8
272,0,4,-5
153,4,-9,0
1448,4,-10,0
1282,4,-2,0
1282,4,-9,0
1277,678,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1420,4,-2,0
1420,4,-3,0
1273,1981,0,0
1432,0,0,0
1418,5,0,0
157,1,4,6
268,2,1,1
1279,0,0,0
157,0,4,6
301,0,3,0
138,1,0,0
1415,0,0,0
268,2,0,1
157,3,4,8
155,3,0,0
1273,2061,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
155,2,2,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,0,0
1282,4,2,0
1277,678,0,0
157,2,4,-1
255,5,3,0
157,1,4,-2
153,2,0,1
1418,5,0,0
157,3,4,3
1282,2,0,0
1417,3,0,0
1273,2098,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,2078,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,2078,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1420,2,1,0
157,3,4,4
1282,2,0,0
1417,3,0,0
1273,2129,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
1448,4,-2,0
1282,4,2,0
1277,662,0,0
157,2,4,-1
255,5,2,0
157,0,4,2
255,0,1,0
153,4,-3,0
1448,4,-4,0
1282,4,-3,0
1277,662,0,0
157,2,4,-1
255,5,2,0
1448,4,-6,0
1282,4,-2,0
1282,4,-4,0
1277,485,0,0
157,2,4,-1
255,5,3,0
157,3,4,3
1282,4,-5,0
1282,4,-6,0
1417,3,0,0
1417,3,1,0
1273,2172,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
157,0,4,2
295,0,2,1
301,0,2,0
157,1,2,0
253,1,0,0
157,3,4,3
153,3,0,1
1273,2190,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
278,5,2,0
157,0,4,2
295,0,2,1
301,0,2,0
157,1,2,0
253,1,0,0
153,4,-2,1
1448,4,-4,0
1282,4,-2,0
157,2,4,-1
1277,2133,0,0
157,2,4,-1
255,5,2,0
157,3,4,3
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1273,2222,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,4,4
462,0,2,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
157,0,4,4
153,4,-2,0
278,5,2,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,-2
278,0,1,0
153,4,-5,0
157,0,4,2
278,0,1,0
153,4,-6,0
1448,4,-7,0
1281,0,0,0
1282,4,-5,0
1282,4,-6,0
1277,804,0,0
157,2,4,-1
255,5,4,0
1448,4,-9,0
1282,4,-7,0
1447,2,4,3
1277,2194,0,0
157,2,4,-1
255,5,2,0
1282,4,-8,0
1282,4,-9,0
1417,4,-4,0
1417,4,-3,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
278,5,2,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,-2
278,0,1,0
153,4,-7,0
157,0,4,2
255,0,0,0
153,4,-8,0
1448,4,-9,0
1281,0,0,0
1282,4,-7,0
1282,4,-8,0
1277,804,0,0
157,2,4,-1
255,5,4,0
1448,4,-11,0
1282,4,-9,0
1447,2,4,3
1277,2194,0,0
157,2,4,-1
255,5,2,0
1282,4,-10,0
1282,4,-11,0
1417,4,-6,0
1417,4,-5,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
278,5,2,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,-2
278,0,1,0
153,4,-9,0
157,0,4,2
255,0,1,0
153,4,-10,0
1448,4,-11,0
1281,0,0,0
1282,4,-9,0
1282,4,-10,0
1277,804,0,0
157,2,4,-1
255,5,4,0
1448,4,-13,0
1282,4,-11,0
1447,2,4,3
1277,2194,0,0
157,2,4,-1
255,5,2,0
1282,4,-12,0
1282,4,-13,0
1417,4,-8,0
1417,4,-7,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
278,5,2,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,2,0
157,0,4,-2
278,0,1,0
153,4,-11,0
157,0,4,2
255,0,2,0
153,4,-12,0
1448,4,-13,0
1281,0,0,0
1282,4,-11,0
1282,4,-12,0
1277,804,0,0
157,2,4,-1
255,5,4,0
1448,4,-15,0
1282,4,-13,0
1447,2,4,3
1277,2194,0,0
157,2,4,-1
255,5,2,0
1282,4,-14,0
1282,4,-15,0
1417,4,-10,0
1417,4,-9,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
278,5,2,0
1421,5,0,0
1448,4,-13,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1277,542,0,0
157,2,4,-1
255,5,5,0
1448,4,-14,0
1282,4,-12,0
1282,4,-13,0
1277,524,0,0
157,2,4,-1
255,5,3,0
157,0,4,-14
324,0,32,0
153,4,-11,0
1418,5,0,0
255,5,2,0
1421,5,0,0
157,0,4,-11
153,4,-12,0
1421,5,0,0
155,4,-13,0
1273,2404,0,0
1432,0,0,0
1420,4,-13,0
1432,0,0,0
157,0,4,-13
433,0,4,-11
98,2440,0,0
1421,5,0,0
157,0,4,-13
318,0,4,-12
341,0,4,-11
153,4,-14,0
278,5,2,0
1421,5,0,0
1448,4,-16,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1282,4,-10,0
1282,4,-14,0
1282,4,-12,0
1277,208,0,0
157,2,4,-1
255,5,11,0
1448,4,-17,0
1282,4,-15,0
1282,4,-16,0
157,2,4,-1
1277,2102,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
1418,5,0,0
1273,2402,0,0
1432,0,0,0
1418,5,0,0
278,5,2,0
1421,5,0,0
1448,4,-14,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1282,4,-10,0
1282,4,-12,0
1282,4,-12,0
1277,208,0,0
157,2,4,-1
255,5,11,0
1448,4,-15,0
1282,4,-13,0
1282,4,-14,0
157,2,4,-1
1277,2102,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,2479,0,0
1418,5,0,0
1418,5,0,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,7,0
1447,2,4,-7
1277,3616,0,0
1279,0,0,0
140,0,255,0
646,0,24,0
138,1,0,0
1415,0,0,0
153,4,-1,1
1421,5,0,0
1421,5,0,0
140,0,4,0
318,0,4,2
153,4,-8,0
1448,4,-9,0
1282,4,-8,0
1447,2,4,-7
1277,1154,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
140,0,6,0
318,0,4,2
153,4,-8,0
1448,4,-9,0
1282,4,-8,0
1447,2,4,-4
1277,868,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
157,3,4,3
1282,4,-1,0
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,2548,0,0
255,5,7,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,4,0
1447,2,2,3
1277,898,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
1447,2,2,3
1277,898,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
1447,2,2,3
1277,898,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
157,3,4,5
155,3,0,0
1273,2585,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,1282,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,3,4,5
155,3,0,0
1273,2608,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,2,0
1421,5,0,0
1448,4,-3,0
1282,4,3,0
1282,4,2,0
1277,485,0,0
157,2,4,-1
255,5,3,0
1448,4,-4,0
1282,2,6,0
1282,4,-2,0
1282,4,-3,0
1447,2,2,0
1277,1238,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
255,5,2,0
157,3,4,4
155,3,0,0
1273,2639,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,6,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,1238,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,3,4,4
155,3,0,0
1273,2662,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,6,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,1238,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,0,2,1
278,0,1,0
157,3,4,4
153,3,0,0
1273,2687,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,4,6
347,0,3,0
140,1,0,0
368,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,7,0
1282,4,6,0
1282,4,5,0
1282,2,1,0
1447,2,2,3
1277,1075,0,0
157,2,4,-1
255,5,5,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,1733,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,3,4,9
155,3,0,0
1273,2735,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,4,8
347,0,3,0
140,1,0,0
368,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
157,0,2,1
153,4,-2,0
1421,5,0,0
155,4,-3,0
1273,2766,0,0
1432,0,0,0
1420,4,-3,0
1432,0,0,0
157,0,4,-3
433,0,4,5
98,2812,0,0
278,5,3,0
278,5,3,0
1448,4,-9,0
1282,4,-3,0
1447,2,4,4
1277,1416,0,0
157,2,4,-1
255,5,2,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
255,5,3,0
278,5,2,0
1448,4,-8,0
1282,4,-4,0
1282,4,-5,0
1282,4,3,0
1282,4,2,0
157,2,4,-1
1277,572,0,0
157,2,4,-1
255,5,5,0
1282,4,-7,0
1282,4,-8,0
1417,4,-5,0
1417,4,-4,0
255,5,2,0
1421,5,0,0
1448,4,-7,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1447,2,2,0
1277,1282,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
255,5,3,0
1273,2764,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
155,4,-3,0
1273,2819,0,0
1432,0,0,0
1420,4,-3,0
1432,0,0,0
157,0,4,-3
433,0,4,8
98,2845,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1282,4,-3,0
1447,2,4,7
1277,956,0,0
157,2,4,-1
255,5,2,0
157,0,4,-2
272,0,4,-4
153,4,-5,0
1448,4,-6,0
1282,4,-5,0
1447,2,2,3
1277,898,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1273,2817,0,0
1432,0,0,0
1418,5,0,0
157,3,4,11
155,3,0,0
1273,2852,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
140,0,1024,0
301,0,16,0
301,0,4,0
157,1,2,1
414,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,8
347,0,3,0
140,1,0,0
368,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,9,0
1282,4,8,0
1282,4,7,0
1282,2,1,0
1447,2,2,3
1277,1075,0,0
157,2,4,-1
255,5,5,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,6,0
1282,4,5,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,1812,0,0
157,2,4,-1
255,5,6,0
1418,5,0,0
157,3,4,11
155,3,0,0
1273,2917,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
140,0,1024,0
301,0,16,0
301,0,4,0
157,1,2,1
414,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,8
347,0,3,0
140,1,0,0
368,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,9,0
1282,4,8,0
1282,4,7,0
1282,2,1,0
1447,2,2,3
1277,1075,0,0
157,2,4,-1
255,5,5,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,6,0
1282,4,5,0
1282,4,4,0
1282,2,6,0
1282,4,3,0
1282,4,2,0
1447,2,2,0
1277,1942,0,0
157,2,4,-1
255,5,7,0
1418,5,0,0
157,3,4,11
155,3,0,0
1273,2983,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
157,0,4,8
347,0,3,0
140,1,0,0
368,1,0,0
153,4,-2,1
1448,4,-3,0
1282,4,-2,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
157,0,2,1
153,4,-2,0
1421,5,0,0
155,4,-3,0
1273,3014,0,0
1432,0,0,0
1420,4,-3,0
1432,0,0,0
157,0,4,-3
433,0,4,5
98,3062,0,0
278,5,3,0
278,5,3,0
1448,4,-9,0
1282,4,-3,0
1447,2,4,4
1277,1416,0,0
157,2,4,-1
255,5,2,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
255,5,3,0
157,1,2,6
153,4,-6,1
278,5,2,0
1448,4,-8,0
1282,4,-4,0
1282,4,-5,0
1282,4,3,0
1282,4,2,0
157,2,4,-1
1277,572,0,0
157,2,4,-1
255,5,5,0
1282,4,-7,0
1282,4,-8,0
1417,4,-5,0
1417,4,-4,0
255,5,2,0
1421,5,0,0
1448,4,-7,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1447,2,2,0
1277,1282,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
255,5,3,0
1273,3012,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
155,4,-3,0
1273,3069,0,0
1432,0,0,0
1420,4,-3,0
1432,0,0,0
157,0,4,-3
433,0,4,8
98,3095,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1282,4,-3,0
1447,2,4,7
1277,956,0,0
157,2,4,-1
255,5,2,0
157,0,4,-2
272,0,4,-4
153,4,-5,0
1448,4,-6,0
1282,4,-5,0
1447,2,2,3
1277,898,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1273,3067,0,0
1432,0,0,0
1418,5,0,0
157,3,4,11
155,3,0,0
1273,3102,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,7,0
1448,4,-8,0
1281,0,0,0
1281,0,0,0
1282,4,3,0
1282,4,2,0
157,2,4,-1
1277,3180,0,0
157,2,4,-1
255,5,5,0
157,3,4,4
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,3139,0,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,7,0
1448,4,-8,0
1282,4,4,0
1282,4,5,0
1282,4,3,0
1282,4,2,0
157,2,4,-1
1277,3180,0,0
157,2,4,-1
255,5,5,0
157,3,4,6
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,3176,0,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,7,0
278,5,7,0
1448,4,-15,0
1281,1,0,0
1277,2495,0,0
157,2,4,-1
255,5,2,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1282,4,-14,0
1282,4,-15,0
1417,4,-8,0
1417,4,-7,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
1417,4,-2,0
255,5,7,0
157,1,2,6
153,4,-2,1
1421,5,0,0
157,0,4,3
324,0,2,0
153,4,-9,0
1421,5,0,0
157,0,4,2
324,0,2,0
153,4,-10,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,5
295,0,4,-9
153,4,-11,0
157,0,4,4
295,0,4,-10
153,4,-12,0
1448,4,-13,0
1282,4,-11,0
1282,4,-12,0
1447,2,4,-8
1277,2612,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,5
272,0,4,-9
153,4,-11,0
157,0,4,4
295,0,4,-10
153,4,-12,0
1448,4,-13,0
1282,4,-11,0
1282,4,-12,0
1447,2,4,-8
1277,2612,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,5
272,0,4,-9
153,4,-11,0
157,0,4,4
272,0,4,-10
153,4,-12,0
1448,4,-13,0
1282,4,-11,0
1282,4,-12,0
1447,2,4,-8
1277,2612,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,5
295,0,4,-9
153,4,-11,0
157,0,4,4
272,0,4,-10
153,4,-12,0
1448,4,-13,0
1282,4,-11,0
1282,4,-12,0
1447,2,4,-8
1277,2612,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-11,0
1281,1,0,0
1281,0,0,0
1281,3,0,0
1447,2,4,-8
1277,2552,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
1421,5,0,0
1448,4,-11,0
1281,3,0,0
1281,2,0,0
1281,1,0,0
1447,2,4,-8
1277,2552,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,3,4,6
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,3333,0,0
1418,5,0,0
1418,5,0,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,7,0
278,5,7,0
1448,4,-15,0
1281,1,0,0
1277,2495,0,0
157,2,4,-1
255,5,2,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1282,4,-14,0
1282,4,-15,0
1417,4,-8,0
1417,4,-7,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
1417,4,-2,0
255,5,7,0
157,1,2,6
153,4,-2,1
278,5,2,0
278,5,2,0
1448,4,-12,0
1282,4,4,0
1282,4,3,0
1282,4,6,0
1282,4,5,0
1277,542,0,0
157,2,4,-1
255,5,5,0
1282,4,-11,0
1282,4,-12,0
1417,4,-10,0
1417,4,-9,0
255,5,2,0
1421,5,0,0
1448,4,-11,0
1447,2,4,-10
1277,451,0,0
157,2,4,-1
255,5,1,0
157,0,4,-11
370,0,0,0
98,3407,0,0
157,3,4,7
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,3612,0,0
1273,3407,0,0
1432,0,0,0
1418,5,0,0
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-14,0
1282,4,-9,0
1282,4,-10,0
1277,3633,0,0
157,2,4,-1
255,5,3,0
1448,4,-16,0
1282,4,-13,0
1282,4,-14,0
1282,4,2,0
1277,3657,0,0
157,2,4,-1
255,5,4,0
1282,4,-15,0
1282,4,-16,0
1417,4,-12,0
1417,4,-11,0
255,5,2,0
255,5,2,0
278,5,2,0
278,5,2,0
1448,4,-16,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1282,4,-12,0
157,2,4,-1
1277,572,0,0
157,2,4,-1
255,5,5,0
1282,4,-15,0
1282,4,-16,0
1417,4,-14,0
1417,4,-13,0
255,5,2,0
278,5,2,0
278,5,2,0
1421,5,0,0
1448,4,-16,0
1282,4,-11,0
1282,4,-12,0
1281,1,0,0
1277,602,0,0
157,2,4,-1
255,5,4,0
1448,4,-18,0
1282,4,6,0
1282,4,5,0
1282,4,-15,0
1282,4,-16,0
157,2,4,-1
1277,572,0,0
157,2,4,-1
255,5,5,0
1448,4,-19,0
1282,4,-17,0
1282,4,-18,0
1447,2,4,-8
1277,2643,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
255,5,2,0
1421,5,0,0
278,5,2,0
278,5,2,0
1421,5,0,0
186,0,1,0
153,4,-15,0
1448,4,-17,0
1282,4,-11,0
1282,4,-12,0
1282,4,-15,0
1277,602,0,0
157,2,4,-1
255,5,4,0
1448,4,-19,0
1282,4,6,0
1282,4,5,0
1282,4,-16,0
1282,4,-17,0
157,2,4,-1
1277,572,0,0
157,2,4,-1
255,5,5,0
1448,4,-20,0
1282,4,-18,0
1282,4,-19,0
1447,2,4,-8
1277,2643,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
255,5,2,0
1418,5,0,0
1421,5,0,0
278,5,2,0
278,5,2,0
1421,5,0,0
186,0,1,0
153,4,-15,0
1448,4,-17,0
1282,4,-11,0
1282,4,-12,0
1282,4,-15,0
1277,602,0,0
157,2,4,-1
255,5,4,0
1448,4,-19,0
1282,4,4,0
1282,4,3,0
1282,4,-16,0
1282,4,-17,0
157,2,4,-1
1277,572,0,0
157,2,4,-1
255,5,5,0
1448,4,-20,0
1282,4,-18,0
1282,4,-19,0
1447,2,4,-8
1277,2643,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
255,5,2,0
1418,5,0,0
278,5,2,0
278,5,2,0
1421,5,0,0
1448,4,-16,0
1282,4,-11,0
1282,4,-12,0
1281,1,0,0
1277,602,0,0
157,2,4,-1
255,5,4,0
1448,4,-18,0
1282,4,4,0
1282,4,3,0
1282,4,-15,0
1282,4,-16,0
157,2,4,-1
1277,572,0,0
157,2,4,-1
255,5,5,0
1448,4,-19,0
1282,4,-17,0
1282,4,-18,0
1447,2,4,-8
1277,2643,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
255,5,2,0
255,5,2,0
1421,5,0,0
1448,4,-15,0
1281,1,0,0
1281,0,0,0
1281,3,0,0
1447,2,4,-8
1277,2552,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
1421,5,0,0
1448,4,-15,0
1281,3,0,0
1281,2,0,0
1281,1,0,0
1447,2,4,-8
1277,2552,0,0
157,2,4,-1
255,5,4,0
1418,5,0,0
157,3,4,7
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,3612,0,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1447,2,2,0
1277,2065,0,0
157,2,4,-1
1447,2,2,3
1277,1141,0,0
157,2,4,-1
155,2,6,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
278,5,2,0
203,0,4,2
153,4,-1,0
1448,4,-3,0
1282,4,3,0
1282,4,-1,0
1277,485,0,0
255,5,3,0
157,3,4,4
1282,4,-2,0
1282,4,-3,0
1417,3,0,0
1417,3,1,0
1273,3653,0,0
255,5,2,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
1421,5,0,0
278,5,2,0
1448,4,-2,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1277,602,0,0
255,5,4,0
1448,4,-3,0
1447,2,4,3
1277,451,0,0
255,5,1,0
1448,4,-5,0
1282,4,-1,0
1282,4,-2,0
1282,4,-3,0
1277,632,0,0
255,5,4,0
157,3,4,5
1282,4,-4,0
1282,4,-5,0
1417,3,0,0
1417,3,1,0
1273,3688,0,0
255,5,2,0
1418,5,0,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
1447,2,2,3
1277,956,0,0
157,2,4,-1
255,5,2,0
1448,4,-3,0
1282,4,2,0
1447,2,2,6
1277,956,0,0
157,2,4,-1
255,5,2,0
157,0,4,-2
548,0,4,-3
157,3,4,3
153,3,0,0
1273,3719,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
1447,2,2,3
1277,956,0,0
157,2,4,-1
255,5,2,0
180,0,4,-2
1279,0,0,0
1448,4,-3,0
1282,4,2,0
1447,2,2,6
1277,956,0,0
157,2,4,-1
255,5,2,0
1415,0,0,0
548,0,4,-3
157,3,4,3
153,3,0,0
1273,3752,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1447,2,2,0
1277,473,0,0
157,2,4,-1
155,2,2,0
1447,2,2,3
1277,1141,0,0
157,2,4,-1
1447,2,2,6
1277,1141,0,0
157,2,4,-1
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1282,2,0,0
1277,662,0,0
157,2,4,-1
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
1420,2,0,0
157,3,4,2
1282,4,-2,0
1417,3,0,0
1273,3798,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1421,5,0,0
1448,4,-3,0
157,2,4,-1
1277,3776,0,0
157,2,4,-1
255,5,1,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
157,2,4,-1
1277,3776,0,0
157,2,4,-1
255,5,1,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
278,5,2,0
1448,4,-5,0
1282,4,-2,0
1282,4,-3,0
1277,485,0,0
157,2,4,-1
255,5,3,0
157,3,4,2
1282,4,-4,0
1282,4,-5,0
1417,3,0,0
1417,3,1,0
1273,3844,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,3,0
1447,2,4,-4
1277,1141,0,0
157,2,4,-1
1421,5,0,0
1448,4,-5,0
157,2,4,-1
1277,3776,0,0
157,2,4,-1
255,5,1,0
157,1,4,-5
153,4,-3,1
1418,5,0,0
157,1,4,-3
268,2,0,1
157,1,2,0
153,4,-4,1
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,3880,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,3,0
1448,4,-4,0
157,2,4,-1
1277,3848,0,0
157,2,4,-1
255,5,1,0
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,3905,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,3,0
1447,2,4,-4
1277,2065,0,0
157,2,4,-1
1421,5,0,0
1448,4,-5,0
157,2,4,-1
1277,3776,0,0
157,2,4,-1
255,5,1,0
157,1,4,-5
153,4,-3,1
1418,5,0,0
1279,0,0,0
157,0,4,-3
301,0,3,0
138,1,0,0
1415,0,0,0
268,2,0,1
157,1,2,0
153,4,-4,1
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1273,3945,0,0
255,5,3,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,7,0
1447,2,4,-8
1277,3616,0,0
157,2,4,-1
278,5,3,0
1448,4,-11,0
157,2,4,-1
1277,3909,0,0
157,2,4,-1
255,5,1,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1417,4,-8,0
1417,4,-7,0
1417,4,-6,0
255,5,3,0
278,5,3,0
1448,4,-11,0
157,2,4,-1
1277,3884,0,0
157,2,4,-1
255,5,1,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
255,5,3,0
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,4002,0,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
278,5,2,0
1447,2,4,-3
1277,2483,0,0
157,2,4,-1
1421,5,0,0
1448,4,-4,0
157,2,4,-1
1277,3776,0,0
157,2,4,-1
255,5,1,0
157,1,4,-4
153,4,-2,1
1418,5,0,0
1279,0,0,0
157,0,4,-2
301,0,2,0
138,1,0,0
1415,0,0,0
268,2,0,1
157,1,2,0
153,4,-3,1
157,3,4,2
1282,4,-2,0
1282,4,-3,0
1417,3,0,0
1417,3,1,0
1273,4040,0,0
255,5,2,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,2,0,0
1282,4,2,0
1277,678,0,0
157,2,4,-1
255,5,3,0
157,1,4,-2
153,2,0,1
1418,5,0,0
157,3,4,3
1282,2,0,0
1417,3,0,0
1273,4064,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,4,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,4102,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
157,3,4,4
1282,2,0,0
1417,3,0,0
1273,4132,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,4,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,4170,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,2,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,4,0
1282,4,3,0
157,2,4,-1
1277,4106,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
157,3,4,5
1282,2,0,0
1417,3,0,0
1273,4201,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
157,0,4,3
301,0,2,0
153,4,-2,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1281,0,0,0
1447,2,4,2
1277,2176,0,0
157,2,4,-1
255,5,2,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
1421,5,0,0
157,0,4,-3
153,4,-4,0
1421,5,0,0
157,0,2,0
153,4,-5,0
1421,5,0,0
155,4,-6,0
1273,4244,0,0
1432,0,0,0
1420,4,-6,0
1432,0,0,0
157,0,4,-6
433,0,4,-2
98,4266,0,0
1421,5,0,0
1421,5,0,0
1448,4,-7,0
1282,4,-4,0
1277,662,0,0
157,2,4,-1
255,5,2,0
1448,4,-8,0
1282,4,-5,0
1282,4,-7,0
1277,678,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1420,4,-5,0
1420,4,-4,0
1273,4242,0,0
1432,0,0,0
1418,5,0,0
157,1,4,-2
268,2,0,1
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
157,3,4,4
155,3,0,0
1273,4278,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
1448,4,-2,0
1282,4,3,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
157,0,4,3
301,0,3,0
153,4,-2,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1281,0,0,0
1447,2,4,2
1277,1715,0,0
157,2,4,-1
255,5,2,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
1421,5,0,0
157,0,4,-3
153,4,-4,0
1421,5,0,0
157,0,2,0
153,4,-5,0
1421,5,0,0
155,4,-6,0
1273,4321,0,0
1432,0,0,0
1420,4,-6,0
1432,0,0,0
157,0,4,-6
433,0,4,-2
98,4343,0,0
1421,5,0,0
1421,5,0,0
1448,4,-7,0
1282,4,-4,0
1277,662,0,0
157,2,4,-1
255,5,2,0
1448,4,-8,0
1282,4,-5,0
1282,4,-7,0
1277,678,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1420,4,-5,0
1420,4,-4,0
1273,4319,0,0
1432,0,0,0
1418,5,0,0
1279,0,0,0
157,0,4,3
301,0,3,0
138,1,0,0
1415,0,0,0
268,2,0,1
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,6,0
157,2,4,-1
1277,4044,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-3,0
1281,0,0,0
1447,2,4,5
1277,1057,0,0
157,2,4,-1
255,5,2,0
157,0,4,-3
153,4,-2,0
1418,5,0,0
1421,5,0,0
157,0,4,6
153,4,-3,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
347,0,3,0
140,1,0,0
368,1,0,0
153,4,-4,1
1448,4,-5,0
1282,4,-4,0
1277,737,0,0
157,2,4,-1
255,5,2,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
157,0,4,-2
153,4,-4,0
1421,5,0,0
157,0,2,0
153,4,-5,0
1421,5,0,0
155,4,-6,0
1273,4402,0,0
1432,0,0,0
1420,4,-6,0
1432,0,0,0
157,0,4,-6
433,0,4,-3
98,4424,0,0
1421,5,0,0
1421,5,0,0
1448,4,-7,0
1282,4,-4,0
1277,662,0,0
157,2,4,-1
255,5,2,0
1448,4,-8,0
1282,4,-5,0
1282,4,-7,0
1277,678,0,0
157,2,4,-1
255,5,3,0
1418,5,0,0
1418,5,0,0
1420,4,-5,0
1420,4,-4,0
1273,4400,0,0
1432,0,0,0
1418,5,0,0
157,1,4,6
268,2,0,1
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
157,3,4,9
155,3,0,0
1273,4436,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
1421,5,0,0
278,5,2,0
278,5,2,0
186,0,0,0
153,4,-3,0
1448,4,-5,0
1282,4,-3,0
1281,0,0,0
1277,485,0,0
255,5,3,0
1448,4,-7,0
1282,4,-4,0
1282,4,-5,0
1282,4,2,0
1277,602,0,0
255,5,4,0
1282,4,-6,0
1282,4,-7,0
1417,4,-2,0
1417,4,-1,0
255,5,2,0
255,5,2,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-4,0
1277,86,0,0
255,5,1,0
157,0,4,-4
153,4,-3,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,2,0
153,4,-4,0
1448,4,-5,0
1282,4,-4,0
1277,662,0,0
255,5,2,0
113,4535,4,-5
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,0,0
153,4,-6,0
1448,4,-7,0
1282,4,-6,0
1277,662,0,0
255,5,2,0
157,1,4,-7
153,4,-2,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,1,0
153,4,-6,0
1448,4,-7,0
1282,4,-6,0
1277,662,0,0
255,5,2,0
157,1,4,-7
153,4,-1,1
1418,5,0,0
1418,5,0,0
1273,4548,0,0
1432,0,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,2,0
153,4,-6,0
1448,4,-7,0
1282,4,-6,0
1281,1,0,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
155,4,-4,0
1421,5,0,0
155,4,-5,0
1421,5,0,0
155,4,-6,0
1421,5,0,0
155,4,-7,0
155,4,-4,37
155,4,-5,39
155,4,-6,38
155,4,-7,40
1421,5,0,0
140,0,2,0
318,0,4,2
153,4,-8,0
1421,5,0,0
1448,4,-9,0
1282,4,-4,0
1447,2,4,6
1277,956,0,0
255,5,2,0
113,4577,4,-9
157,1,4,-8
291,4,-2,1
1273,4577,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-5,0
1447,2,4,6
1277,956,0,0
255,5,2,0
113,4589,4,-9
157,1,4,-8
268,4,-2,1
1273,4589,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-6,0
1447,2,4,6
1277,956,0,0
255,5,2,0
113,4601,4,-9
157,1,4,-8
268,4,-1,1
1273,4601,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1448,4,-9,0
1282,4,-7,0
1447,2,4,6
1277,956,0,0
255,5,2,0
113,4613,4,-9
157,1,4,-8
291,4,-1,1
1273,4613,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,0,0
153,4,-9,0
1448,4,-10,0
1282,4,-9,0
1282,4,-2,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
255,0,1,0
153,4,-9,0
1448,4,-10,0
1282,4,-9,0
1282,4,-1,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,3,4,12
1282,4,-1,0
1282,4,-2,0
1417,3,0,0
1417,3,1,0
1273,4652,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1448,4,-1,0
1282,4,4,0
1282,4,2,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,4
255,0,1,0
153,4,-1,0
1448,4,-2,0
1282,4,-1,0
1282,4,3,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,3,4,5
155,3,0,0
1273,4681,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-4,0
1281,450,0,0
1281,50,0,0
1277,485,0,0
255,5,3,0
1448,4,-6,0
1282,4,-3,0
1282,4,-4,0
1282,4,2,0
1277,602,0,0
255,5,4,0
1282,4,-5,0
1282,4,-6,0
1417,4,-2,0
1417,4,-1,0
255,5,2,0
255,5,2,0
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-6,0
1281,650,0,0
1281,150,0,0
1277,485,0,0
255,5,3,0
1448,4,-8,0
1282,4,-5,0
1282,4,-6,0
1282,4,2,0
1277,602,0,0
255,5,4,0
1282,4,-7,0
1282,4,-8,0
1417,4,-4,0
1417,4,-3,0
255,5,2,0
255,5,2,0
157,1,4,4
153,4,-4,1
157,1,4,3
153,4,-3,1
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-8,0
1281,300,0,0
1281,500,0,0
1277,485,0,0
255,5,3,0
1448,4,-10,0
1282,4,-7,0
1282,4,-8,0
1282,4,2,0
1277,602,0,0
255,5,4,0
1282,4,-9,0
1282,4,-10,0
1417,4,-6,0
1417,4,-5,0
255,5,2,0
255,5,2,0
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-10,0
1281,390,0,0
1281,550,0,0
1277,485,0,0
255,5,3,0
1448,4,-12,0
1282,4,-9,0
1282,4,-10,0
1282,4,2,0
1277,602,0,0
255,5,4,0
1282,4,-11,0
1282,4,-12,0
1417,4,-8,0
1417,4,-7,0
255,5,2,0
255,5,2,0
278,5,2,0
1447,2,4,-10
1277,2483,0,0
1421,5,0,0
1448,4,-11,0
1281,1024,0,0
1277,398,0,0
255,5,2,0
157,1,4,-11
153,4,-10,1
1418,5,0,0
155,4,-9,0
100,4856,1,0
278,5,2,0
1421,5,0,0
1448,4,-12,0
1281,0,0,0
1281,0,0,0
1277,485,0,0
255,5,3,0
1448,4,-13,0
1282,4,-11,0
1282,4,-12,0
1447,2,4,-10
1277,2102,0,0
255,5,3,0
1418,5,0,0
255,5,2,0
1421,5,0,0
1448,4,-11,0
1282,4,-1,0
1282,4,-2,0
1447,2,4,-10
1277,2102,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
1448,4,-11,0
1282,4,-3,0
1282,4,-4,0
1447,2,4,-10
1277,2102,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
1448,4,-11,0
1282,4,-5,0
1282,4,-6,0
1447,2,4,-10
1277,2102,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
1448,4,-11,0
1282,4,-7,0
1282,4,-8,0
1447,2,4,-10
1277,2102,0,0
255,5,3,0
1418,5,0,0
278,5,2,0
278,5,2,0
1421,5,0,0
1448,4,-12,0
1281,450,0,0
1281,550,0,0
1277,485,0,0
255,5,3,0
1448,4,-14,0
1282,4,-11,0
1282,4,-12,0
1282,4,2,0
1277,602,0,0
255,5,4,0
1448,4,-15,0
1282,4,-13,0
1282,4,-14,0
1447,2,4,-10
1277,2102,0,0
255,5,3,0
1418,5,0,0
255,5,2,0
255,5,2,0
1273,4856,0,0
1432,0,0,0
278,5,2,0
1447,2,4,-12
1277,473,0,0
1421,5,0,0
155,4,-13,0
1273,4865,0,0
1432,0,0,0
1420,4,-13,0
1432,0,0,0
157,0,4,-13
433,0,4,-9
98,4895,0,0
157,0,4,-13
393,0,2,0
98,4893,0,0
278,5,2,0
278,5,2,0
1448,4,-15,0
1282,4,-13,0
1447,2,4,-10
1277,2194,0,0
255,5,2,0
1448,4,-17,0
1282,4,-11,0
1282,4,-12,0
1282,4,-14,0
1282,4,-15,0
1277,572,0,0
255,5,5,0
1282,4,-16,0
1282,4,-17,0
1417,4,-12,0
1417,4,-11,0
255,5,2,0
255,5,2,0
1273,4893,0,0
1432,0,0,0
1273,4863,0,0
1432,0,0,0
1418,5,0,0
278,5,2,0
1448,4,-14,0
1282,4,-11,0
1282,4,-12,0
1282,4,-9,0
1277,632,0,0
255,5,4,0
1282,4,-13,0
1282,4,-14,0
1417,4,-12,0
1417,4,-11,0
255,5,2,0
1421,5,0,0
155,4,-13,0
1273,4914,0,0
1432,0,0,0
1420,4,-13,0
1432,0,0,0
157,0,4,-13
433,0,4,-9
98,4955,0,0
157,0,4,-13
393,0,2,0
98,4953,0,0
1421,5,0,0
278,5,2,0
278,5,2,0
1421,5,0,0
1448,4,-14,0
1282,4,-13,0
1447,2,4,-10
1277,2176,0,0
255,5,2,0
1448,4,-16,0
1282,4,-13,0
1447,2,4,-10
1277,2194,0,0
255,5,2,0
1448,4,-18,0
1282,4,-15,0
1282,4,-16,0
1282,4,-11,0
1282,4,-12,0
1277,542,0,0
255,5,5,0
1448,4,-19,0
1282,4,-14,0
1282,4,-17,0
1282,4,-18,0
1277,4656,0,0
255,5,4,0
1418,5,0,0
255,5,2,0
255,5,2,0
1418,5,0,0
1273,4953,0,0
1432,0,0,0
1273,4912,0,0
1432,0,0,0
1418,5,0,0
255,5,2,0
157,3,4,5
1282,4,-9,0
1282,4,-10,0
1417,3,0,0
1417,3,1,0
1273,4969,0,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
278,5,2,0
1447,2,4,-2
1277,2483,0,0
1421,5,0,0
1421,5,0,0
140,0,1024,0
301,0,16,0
153,4,-3,0
1448,4,-4,0
1282,4,-3,0
1277,398,0,0
255,5,2,0
157,1,4,-4
153,4,-2,1
1418,5,0,0
1418,5,0,0
155,4,-1,0
1421,5,0,0
155,4,-3,0
1273,4998,0,0
1432,0,0,0
1420,4,-3,0
1432,0,0,0
157,0,4,-3
255,0,1,0
433,0,4,4
98,5013,0,0
1421,5,0,0
1448,4,-4,0
1282,4,4,0
1282,4,3,0
1282,4,-3,0
1447,2,4,-2
1277,2226,0,0
255,5,4,0
1418,5,0,0
1273,4996,0,0
1432,0,0,0
1418,5,0,0
278,5,7,0
1421,5,0,0
278,5,7,0
140,0,1024,0
301,0,4,0
153,4,-10,0
1448,4,-17,0
1282,4,-10,0
1277,2495,0,0
255,5,2,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1282,4,-14,0
1282,4,-15,0
1282,4,-16,0
1282,4,-17,0
1417,4,-9,0
1417,4,-8,0
1417,4,-7,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
255,5,7,0
1418,5,0,0
1421,5,0,0
157,0,4,-1
153,4,-10,0
1421,5,0,0
155,4,-11,1
1273,5049,0,0
1432,0,0,0
1420,4,-11,0
1432,0,0,0
157,0,4,-11
433,0,4,-10
98,5107,0,0
1421,5,0,0
278,5,2,0
1421,5,0,0
278,5,2,0
1421,5,0,0
278,5,7,0
1421,5,0,0
157,0,4,-11
278,0,1,0
153,4,-12,0
1448,4,-14,0
1282,4,-12,0
1447,2,4,-2
1277,2194,0,0
255,5,2,0
157,0,4,-11
278,0,0,0
153,4,-15,0
1448,4,-17,0
1282,4,-15,0
1447,2,4,-2
1277,2194,0,0
255,5,2,0
157,0,4,2
301,0,2,0
153,4,-18,0
1448,4,-25,0
1282,4,-13,0
1282,4,-14,0
1282,4,-16,0
1282,4,-17,0
1282,4,-18,0
1447,2,4,-9
1277,3337,0,0
255,5,6,0
1448,4,-26,0
1282,4,-19,0
1282,4,-20,0
1282,4,-21,0
1282,4,-22,0
1282,4,-23,0
1282,4,-24,0
1282,4,-25,0
1447,2,4,-9
1277,2691,0,0
255,5,8,0
1418,5,0,0
255,5,7,0
1418,5,0,0
255,5,2,0
1418,5,0,0
255,5,2,0
1418,5,0,0
1273,5047,0,0
1432,0,0,0
1418,5,0,0
157,3,4,5
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,5128,0,0
1418,5,0,0
255,5,7,0
255,5,2,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
1448,4,-1,0
1281,255,0,0
1282,4,2,0
1277,764,0,0
255,5,3,0
1448,4,-2,0
1281,0,0,0
1282,4,-1,0
1277,784,0,0
255,5,3,0
157,3,4,3
1282,4,-2,0
1417,3,0,0
1273,5153,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,3
318,0,4,3
1279,0,0,0
157,0,4,2
318,0,4,2
1415,1,0,0
253,1,0,0
157,3,4,4
153,3,0,1
1273,5170,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
157,0,4,2
318,0,4,2
157,3,4,3
153,3,0,0
1273,5182,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
140,0,8,0
318,0,4,2
153,4,-1,0
1421,5,0,0
140,0,255,0
663,0,4,-1
153,4,-2,0
1421,5,0,0
157,0,4,3
617,0,4,-2
153,4,-3,0
1421,5,0,0
1421,5,0,0
157,0,4,4
255,0,1,0
1279,0,0,0
157,0,4,-3
640,0,4,-1
255,0,1,0
1415,1,0,0
299,1,0,0
278,1,1,0
623,1,8,0
153,4,-4,1
1448,4,-5,0
1282,4,-4,0
1277,5132,0,0
255,5,2,0
157,0,4,-5
663,0,4,-1
157,3,4,5
153,3,0,0
1273,5228,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
1448,4,-2,0
1282,4,3,0
1277,5132,0,0
255,5,2,0
157,0,4,-2
153,4,-1,0
1418,5,0,0
1421,5,0,0
155,4,-2,0
1421,5,0,0
1279,0,0,0
1448,4,-3,0
1282,4,-1,0
1282,4,2,0
1281,0,0,0
1277,5186,0,0
255,5,4,0
157,0,4,-2
594,0,4,-3
138,1,0,0
1415,0,0,0
153,4,-2,1
1418,5,0,0
1421,5,0,0
1279,0,0,0
1448,4,-3,0
1282,4,-1,0
1282,4,2,0
1281,1,0,0
1277,5186,0,0
255,5,4,0
157,0,4,-2
594,0,4,-3
138,1,0,0
1415,0,0,0
153,4,-2,1
1418,5,0,0
1421,5,0,0
1279,0,0,0
1448,4,-3,0
1282,4,-1,0
1282,4,2,0
1281,2,0,0
1277,5186,0,0
255,5,4,0
157,0,4,-2
594,0,4,-3
138,1,0,0
1415,0,0,0
153,4,-2,1
1418,5,0,0
157,3,4,4
1282,4,-2,0
1417,3,0,0
1273,5294,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
155,4,-1,16
278,5,7,0
1421,5,0,0
278,5,7,0
157,0,4,-1
318,0,4,-1
301,0,4,0
153,4,-9,0
1448,4,-16,0
1282,4,-9,0
1277,2495,0,0
255,5,2,0
1282,4,-10,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1282,4,-14,0
1282,4,-15,0
1282,4,-16,0
1417,4,-8,0
1417,4,-7,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
1417,4,-3,0
1417,4,-2,0
255,5,7,0
1418,5,0,0
1421,5,0,0
140,0,1,0
318,0,4,3
153,4,-9,0
1421,5,0,0
157,0,4,-1
324,0,2,0
153,4,-10,0
1421,5,0,0
155,4,-11,0
1273,5343,0,0
1432,0,0,0
1420,4,-11,0
1432,0,0,0
157,0,4,-11
433,0,4,-1
98,5517,0,0
1421,5,0,0
155,4,-12,0
1273,5352,0,0
1432,0,0,0
1420,4,-12,0
1432,0,0,0
157,0,4,-12
433,0,4,-1
98,5514,0,0
1421,5,0,0
157,0,4,-12
301,0,255,0
341,0,4,-1
646,0,16,0
1279,0,0,0
157,0,4,-11
301,0,255,0
341,0,4,-1
646,0,8,0
1415,1,0,0
253,1,0,0
153,4,-13,1
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
157,0,4,-11
295,0,4,-10
153,4,-15,0
157,0,4,-12
295,0,4,-10
153,4,-16,0
1448,4,-17,0
1282,4,-15,0
1282,4,-16,0
1277,5157,0,0
255,5,3,0
1448,4,-18,0
1282,4,-17,0
1277,5174,0,0
255,5,2,0
157,0,4,-18
301,0,255,0
1279,0,0,0
157,0,4,-10
318,0,4,-10
153,4,-19,0
1448,4,-20,0
1282,4,-19,0
1277,5174,0,0
255,5,2,0
1415,0,0,0
341,0,4,-20
140,1,255,0
276,1,0,0
153,4,-21,1
1448,4,-22,0
1282,4,-21,0
1277,5132,0,0
255,5,2,0
157,0,4,-22
153,4,-14,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1279,0,0,0
157,0,4,-14
646,0,24,0
1279,0,0,0
1448,4,-15,0
1282,4,-14,0
1282,4,2,0
1277,5232,0,0
255,5,3,0
1415,0,0,0
594,0,4,-15
138,1,0,0
1415,0,0,0
153,4,-2,1
1418,5,0,0
278,5,7,0
1421,5,0,0
1421,5,0,0
278,5,2,0
278,5,2,0
278,5,2,0
278,5,2,0
278,5,2,0
1421,5,0,0
1448,4,-21,0
1282,4,-9,0
1282,4,-9,0
1447,2,4,-8
1277,3106,0,0
255,5,3,0
157,0,4,-10
318,0,4,-9
153,4,-22,0
157,0,4,-10
318,0,4,-9
153,4,-23,0
1448,4,-25,0
1282,4,-22,0
1282,4,-23,0
1277,485,0,0
255,5,3,0
1448,4,-27,0
1282,4,5,0
1282,4,4,0
1282,4,-24,0
1282,4,-25,0
1277,542,0,0
255,5,5,0
1448,4,-29,0
1282,4,-11,0
1282,4,-12,0
1277,485,0,0
255,5,3,0
1448,4,-31,0
1282,4,-28,0
1282,4,-29,0
1282,4,-9,0
1277,602,0,0
255,5,4,0
1448,4,-33,0
1282,4,-26,0
1282,4,-27,0
1282,4,-30,0
1282,4,-31,0
1277,572,0,0
255,5,5,0
1448,4,-34,0
1282,4,-15,0
1282,4,-16,0
1282,4,-17,0
1282,4,-18,0
1282,4,-19,0
1282,4,-20,0
1282,4,-21,0
1282,4,-32,0
1282,4,-33,0
1447,2,4,-8
1277,2739,0,0
255,5,10,0
1418,5,0,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,2,0
255,5,2,0
1418,5,0,0
1418,5,0,0
255,5,7,0
1418,5,0,0
1418,5,0,0
1273,5350,0,0
1432,0,0,0
1418,5,0,0
1273,5341,0,0
1432,0,0,0
1418,5,0,0
157,3,4,6
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,5539,0,0
1418,5,0,0
1418,5,0,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1447,2,4,-1
1277,4440,0,0
1421,5,0,0
1421,5,0,0
1448,4,-2,0
1277,36,0,0
255,5,1,0
1448,4,-3,0
1282,4,-2,0
1277,662,0,0
255,5,2,0
157,1,4,-3
153,4,-1,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1447,2,4,-1
1277,3776,0,0
255,5,1,0
180,0,4,-2
98,5615,0,0
1421,5,0,0
157,0,4,-1
153,4,-3,0
278,5,7,0
1421,5,0,0
1448,4,-10,0
1282,4,5,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1277,5298,0,0
255,5,5,0
1448,4,-11,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1282,4,-10,0
1447,2,4,-1
1277,4282,0,0
255,5,8,0
1418,5,0,0
255,5,7,0
1421,5,0,0
157,0,4,-1
295,0,4,-3
153,4,-4,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
278,0,1,0
153,4,-5,0
1448,4,-6,0
1282,4,-5,0
1282,4,-4,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,1,4,-3
153,4,-1,1
1418,5,0,0
1418,5,0,0
1273,5615,0,0
1432,0,0,0
1418,5,0,0
278,5,7,0
1448,4,-8,0
1447,2,4,-1
1277,3949,0,0
255,5,1,0
157,3,4,6
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1417,3,0,0
1417,3,1,0
1417,3,2,0
1417,3,3,0
1417,3,4,0
1417,3,5,0
1417,3,6,0
1273,5640,0,0
255,5,7,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1447,2,4,-1
1277,4440,0,0
1421,5,0,0
1421,5,0,0
1448,4,-2,0
1277,61,0,0
255,5,1,0
1448,4,-3,0
1282,4,-2,0
1277,662,0,0
255,5,2,0
157,1,4,-3
153,4,-1,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-2,0
1447,2,4,-1
1277,3776,0,0
255,5,1,0
180,0,4,-2
98,5710,0,0
1421,5,0,0
157,0,4,-1
153,4,-3,0
278,5,2,0
1421,5,0,0
1448,4,-5,0
1282,4,3,0
1282,4,4,0
1282,4,2,0
1277,4685,0,0
255,5,4,0
1448,4,-6,0
1282,4,-4,0
1282,4,-5,0
1447,2,4,-1
1277,4205,0,0
255,5,3,0
1418,5,0,0
255,5,2,0
1421,5,0,0
157,0,4,-1
295,0,4,-3
153,4,-4,0
1421,5,0,0
1421,5,0,0
157,0,4,-3
278,0,1,0
153,4,-5,0
1448,4,-6,0
1282,4,-5,0
1282,4,-4,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,1,4,-3
153,4,-1,1
1418,5,0,0
1418,5,0,0
1273,5710,0,0
1432,0,0,0
1418,5,0,0
278,5,2,0
1448,4,-3,0
1447,2,4,-1
1277,4006,0,0
255,5,1,0
157,3,4,5
1282,4,-2,0
1282,4,-3,0
1417,3,0,0
1417,3,1,0
1273,5725,0,0
255,5,2,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
186,0,1,0
153,2,0,0
1447,2,2,1
1277,473,0,0
157,2,4,-1
1447,2,2,3
1277,2483,0,0
157,2,4,-1
1447,2,2,5
1277,3616,0,0
157,2,4,-1
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
155,4,-2,1024
1421,5,0,0
155,4,-3,0
1421,5,0,0
157,0,4,-2
301,0,2,0
153,4,-4,0
1421,5,0,0
155,4,-5,0
1273,5768,0,0
1432,0,0,0
1420,4,-5,0
1432,0,0,0
157,0,4,-5
433,0,4,-4
98,5802,0,0
1421,5,0,0
155,4,-6,0
1273,5777,0,0
1432,0,0,0
1420,4,-6,0
1432,0,0,0
157,0,4,-6
433,0,4,-4
98,5799,0,0
157,0,4,-5
318,0,4,-5
1279,0,0,0
157,0,4,-6
318,0,4,-6
1415,1,0,0
253,1,0,0
1279,1,0,0
157,0,4,-2
318,0,4,-2
1415,1,0,0
437,1,0,0
98,5796,1,0
1273,5775,0,0
1273,5796,0,0
1432,0,0,0
1420,4,-3,0
1273,5775,0,0
1432,0,0,0
1418,5,0,0
1273,5766,0,0
1432,0,0,0
1418,5,0,0
157,3,4,2
1282,4,-3,0
1417,3,0,0
1273,5812,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
155,2,1,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
155,4,-1,257
1421,5,0,0
155,4,-2,258
1421,5,0,0
155,4,-3,259
1421,5,0,0
155,4,-4,4
278,5,2,0
278,5,2,0
1448,4,-8,0
1282,4,10,0
1282,4,9,0
1282,4,8,0
1282,4,7,0
1282,4,6,0
1282,4,5,0
1282,4,4,0
1282,4,3,0
1282,4,2,0
1282,4,-4,0
1277,4463,0,0
255,5,11,0
1282,4,-7,0
1282,4,-8,0
1417,4,-6,0
1417,4,-5,0
255,5,2,0
278,5,2,0
278,5,2,0
1448,4,-10,0
1282,4,3,0
1282,4,2,0
1282,4,-4,0
1277,602,0,0
255,5,4,0
1282,4,-9,0
1282,4,-10,0
1417,4,-8,0
1417,4,-7,0
255,5,2,0
278,5,7,0
1421,5,0,0
278,5,7,0
140,0,1024,0
301,0,16,0
153,4,-16,0
1448,4,-23,0
1282,4,-16,0
1277,2495,0,0
255,5,2,0
1282,4,-17,0
1282,4,-18,0
1282,4,-19,0
1282,4,-20,0
1282,4,-21,0
1282,4,-22,0
1282,4,-23,0
1417,4,-15,0
1417,4,-14,0
1417,4,-13,0
1417,4,-12,0
1417,4,-11,0
1417,4,-10,0
1417,4,-9,0
255,5,7,0
1418,5,0,0
140,0,255,0
646,0,24,0
1279,0,0,0
140,0,128,0
646,0,8,0
1415,1,0,0
253,1,0,0
153,4,-9,1
278,5,2,0
278,5,2,0
1448,4,-19,0
1281,0,0,0
1281,0,0,0
1277,485,0,0
255,5,3,0
1282,4,-18,0
1282,4,-19,0
1417,4,-17,0
1417,4,-16,0
255,5,2,0
100,6117,0,0
278,5,7,0
1421,5,0,0
1421,5,0,0
278,5,7,0
140,0,30,0
318,0,4,-4
153,4,-25,0
140,0,30,0
318,0,4,-4
153,4,-26,0
1448,4,-33,0
1282,4,-8,0
1282,4,-7,0
1282,4,-25,0
1282,4,-26,0
1447,2,4,-15
1277,3180,0,0
255,5,5,0
1282,4,-27,0
1282,4,-28,0
1282,4,-29,0
1282,4,-30,0
1282,4,-31,0
1282,4,-32,0
1282,4,-33,0
1417,4,-24,0
1417,4,-23,0
1417,4,-22,0
1417,4,-21,0
1417,4,-20,0
1417,4,-19,0
1417,4,-18,0
255,5,7,0
1418,5,0,0
1418,5,0,0
140,0,255,0
646,0,24,0
1279,0,0,0
140,0,128,0
646,0,8,0
1415,1,0,0
253,1,0,0
1279,1,0,0
140,0,255,0
646,0,16,0
1415,1,0,0
253,1,0,0
153,4,-9,1
278,5,7,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,7,0
140,0,64,0
318,0,4,-4
157,1,4,-7
276,1,0,0
153,4,-32,1
140,0,100,0
318,0,4,-4
153,4,-33,0
140,0,10,0
318,0,4,-4
153,4,-34,0
1448,4,-41,0
1282,4,-8,0
1282,4,-32,0
1282,4,-33,0
1282,4,-34,0
1447,2,4,-15
1277,3180,0,0
255,5,5,0
1282,4,-35,0
1282,4,-36,0
1282,4,-37,0
1282,4,-38,0
1282,4,-39,0
1282,4,-40,0
1282,4,-41,0
1417,4,-31,0
1417,4,-30,0
1417,4,-29,0
1417,4,-28,0
1417,4,-27,0
1417,4,-26,0
1417,4,-25,0
255,5,7,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
278,5,7,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
278,5,7,0
140,0,200,0
318,0,4,-4
272,0,4,-8
153,4,-39,0
140,0,10,0
318,0,4,-4
153,4,-40,0
140,0,60,0
318,0,4,-4
153,4,-41,0
1448,4,-48,0
1282,4,-39,0
1282,4,-7,0
1282,4,-40,0
1282,4,-41,0
1447,2,4,-15
1277,3180,0,0
255,5,5,0
1282,4,-42,0
1282,4,-43,0
1282,4,-44,0
1282,4,-45,0
1282,4,-46,0
1282,4,-47,0
1282,4,-48,0
1417,4,-38,0
1417,4,-37,0
1417,4,-36,0
1417,4,-35,0
1417,4,-34,0
1417,4,-33,0
1417,4,-32,0
255,5,7,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-39,0
1282,4,-18,0
1282,4,-19,0
1282,4,-20,0
1282,4,-21,0
1282,4,-22,0
1282,4,-23,0
1282,4,-24,0
1447,2,4,-15
1277,2691,0,0
255,5,8,0
1418,5,0,0
1421,5,0,0
1448,4,-39,0
1282,4,-25,0
1282,4,-26,0
1282,4,-27,0
1282,4,-28,0
1282,4,-29,0
1282,4,-30,0
1282,4,-31,0
1447,2,4,-15
1277,2691,0,0
255,5,8,0
1418,5,0,0
1421,5,0,0
1448,4,-39,0
1282,4,-32,0
1282,4,-33,0
1282,4,-34,0
1282,4,-35,0
1282,4,-36,0
1282,4,-37,0
1282,4,-38,0
1447,2,4,-15
1277,2691,0,0
255,5,8,0
1418,5,0,0
278,5,7,0
1421,5,0,0
1448,4,-45,0
1282,4,-7,0
1282,4,-8,0
1282,4,-16,0
1282,4,-17,0
1282,4,-4,0
1447,2,4,-15
1277,3337,0,0
255,5,6,0
1448,4,-46,0
1282,4,-39,0
1282,4,-40,0
1282,4,-41,0
1282,4,-42,0
1282,4,-43,0
1282,4,-44,0
1282,4,-45,0
1447,2,4,-15
1277,2691,0,0
255,5,8,0
1418,5,0,0
255,5,7,0
255,5,7,0
255,5,7,0
255,5,7,0
1273,6117,0,0
1432,0,0,0
278,5,7,0
278,5,2,0
278,5,7,0
1448,4,-26,0
1281,0,0,0
1281,0,0,0
1277,485,0,0
255,5,3,0
1448,4,-33,0
1282,4,-25,0
1282,4,-26,0
1282,4,-4,0
1281,-16711936,0,0
1277,5543,0,0
255,5,5,0
1282,4,-27,0
1282,4,-28,0
1282,4,-29,0
1282,4,-30,0
1282,4,-31,0
1282,4,-32,0
1282,4,-33,0
1417,4,-24,0
1417,4,-23,0
1417,4,-22,0
1417,4,-21,0
1417,4,-20,0
1417,4,-19,0
1417,4,-18,0
255,5,7,0
255,5,2,0
278,5,2,0
278,5,2,0
278,5,2,0
1448,4,-28,0
1281,0,0,0
1281,0,0,0
1277,485,0,0
255,5,3,0
1448,4,-30,0
1282,4,-27,0
1282,4,-28,0
1282,4,-4,0
1277,5644,0,0
255,5,4,0
1282,4,-29,0
1282,4,-30,0
1417,4,-26,0
1417,4,-25,0
255,5,2,0
255,5,2,0
1421,5,0,0
1448,4,-27,0
1281,82,0,0
1447,2,4,2
1277,3692,0,0
255,5,2,0
113,6244,4,-27
1421,5,0,0
1448,4,-28,0
1281,0,0,0
1447,2,4,-26
1277,2176,0,0
255,5,2,0
157,1,4,-28
153,4,-26,1
1418,5,0,0
155,4,-25,0
1421,5,0,0
1447,2,4,-28
1277,4440,0,0
1421,5,0,0
1421,5,0,0
1448,4,-29,0
1277,61,0,0
255,5,1,0
1448,4,-30,0
1282,4,-29,0
1277,662,0,0
255,5,2,0
157,1,4,-30
153,4,-28,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-29,0
1447,2,4,-28
1277,3776,0,0
255,5,1,0
1418,5,0,0
100,6241,1,0
1421,5,0,0
157,0,4,-28
153,4,-29,0
1421,5,0,0
1448,4,-30,0
1282,4,-25,0
1282,4,-26,0
1447,2,4,-28
1277,4205,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
157,0,4,-28
295,0,4,-29
153,4,-30,0
1421,5,0,0
1421,5,0,0
157,0,4,-29
278,0,1,0
153,4,-31,0
1448,4,-32,0
1282,4,-31,0
1282,4,-30,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,1,4,-29
153,4,-28,1
1418,5,0,0
1418,5,0,0
1273,6241,0,0
1432,0,0,0
1273,6244,0,0
1418,5,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1448,4,-27,0
1282,4,-2,0
1447,2,4,2
1277,3692,0,0
255,5,2,0
113,6319,4,-27
1421,5,0,0
1448,4,-28,0
1282,4,-7,0
1282,4,-8,0
1447,2,4,-26
1277,2102,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
1447,2,4,-28
1277,4440,0,0
1421,5,0,0
1421,5,0,0
1448,4,-29,0
1277,61,0,0
255,5,1,0
1448,4,-30,0
1282,4,-29,0
1277,662,0,0
255,5,2,0
157,1,4,-30
153,4,-28,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1448,4,-29,0
1447,2,4,-28
1277,3776,0,0
255,5,1,0
1418,5,0,0
100,6316,1,0
1421,5,0,0
157,0,4,-28
153,4,-29,0
1421,5,0,0
1448,4,-30,0
1282,4,-25,0
1282,4,-26,0
1447,2,4,-28
1277,4205,0,0
255,5,3,0
1418,5,0,0
1421,5,0,0
157,0,4,-28
295,0,4,-29
153,4,-30,0
1421,5,0,0
1421,5,0,0
157,0,4,-29
278,0,1,0
153,4,-31,0
1448,4,-32,0
1282,4,-31,0
1282,4,-30,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
157,1,4,-29
153,4,-28,1
1418,5,0,0
1418,5,0,0
1273,6316,0,0
1432,0,0,0
1273,6319,0,0
1418,5,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1448,4,-27,0
1282,4,-1,0
1447,2,4,5
1277,956,0,0
255,5,2,0
113,6432,4,-27
1421,5,0,0
155,4,-28,0
1421,5,0,0
155,4,-29,0
1273,6335,0,0
1432,0,0,0
1420,4,-29,0
1432,0,0,0
157,0,4,-29
433,0,4,-25
98,6413,0,0
278,5,2,0
278,5,2,0
1448,4,-33,0
1282,4,-28,0
1447,2,4,-26
1277,2194,0,0
255,5,2,0
1282,4,-32,0
1282,4,-33,0
1417,4,-31,0
1417,4,-30,0
255,5,2,0
278,5,2,0
278,5,2,0
1448,4,-35,0
1282,4,-29,0
1447,2,4,-26
1277,2194,0,0
255,5,2,0
1282,4,-34,0
1282,4,-35,0
1417,4,-33,0
1417,4,-32,0
255,5,2,0
1421,5,0,0
278,5,2,0
1421,5,0,0
1448,4,-36,0
1282,4,-30,0
1282,4,-31,0
1282,4,-7,0
1282,4,-8,0
1277,542,0,0
255,5,5,0
1448,4,-37,0
1282,4,-35,0
1282,4,-36,0
1277,524,0,0
255,5,3,0
157,0,4,-37
153,4,-34,0
1418,5,0,0
255,5,2,0
1421,5,0,0
278,5,2,0
1421,5,0,0
1448,4,-37,0
1282,4,-32,0
1282,4,-33,0
1282,4,-7,0
1282,4,-8,0
1277,542,0,0
255,5,5,0
1448,4,-38,0
1282,4,-36,0
1282,4,-37,0
1277,524,0,0
255,5,3,0
157,0,4,-38
153,4,-35,0
1418,5,0,0
255,5,2,0
157,0,4,-35
433,0,4,-34
98,6407,0,0
157,1,4,-29
153,4,-28,1
1273,6407,0,0
1432,0,0,0
1418,5,0,0
1418,5,0,0
255,5,2,0
255,5,2,0
1273,6333,0,0
1432,0,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-29,0
1282,4,-28,0
1447,2,4,-26
1277,2176,0,0
255,5,2,0
1448,4,-30,0
1282,4,-29,0
1282,4,-7,0
1282,4,-8,0
1277,4656,0,0
255,5,4,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1273,6432,0,0
1432,0,0,0
1418,5,0,0
278,5,7,0
1421,5,0,0
1448,4,-33,0
1282,4,-25,0
1282,4,-26,0
1282,4,-4,0
1277,4973,0,0
255,5,4,0
1448,4,-34,0
1282,4,-27,0
1282,4,-28,0
1282,4,-29,0
1282,4,-30,0
1282,4,-31,0
1282,4,-32,0
1282,4,-33,0
1447,2,4,-15
1277,2691,0,0
255,5,8,0
1418,5,0,0
255,5,7,0
1421,5,0,0
155,4,-27,0
155,4,-27,16
100,6509,0,0
1421,5,0,0
140,0,128,0
301,0,1024,0
301,0,1024,0
153,4,-28,0
1421,5,0,0
155,4,-29,31456
1421,5,0,0
140,0,1024,0
301,0,1024,0
153,4,-30,0
1421,5,0,0
1421,5,0,0
1448,4,-32,0
1282,4,-30,0
1277,398,0,0
255,5,2,0
157,0,4,-32
153,4,-31,0
1418,5,0,0
157,1,4,-31
268,4,-30,1
1421,5,0,0
155,4,-32,987654321
1421,5,0,0
157,0,4,-31
153,4,-33,0
1273,6489,0,0
1432,0,0,0
1420,4,-33,0
1432,0,0,0
157,0,4,-33
433,0,4,-30
98,6501,0,0
1421,5,0,0
1448,4,-34,0
1282,4,-33,0
1282,4,-32,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1273,6487,0,0
1432,0,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1273,6509,0,0
1432,0,0,0
1421,5,0,0
1421,5,0,0
1448,4,-29,0
1282,4,-27,0
1447,2,4,5
1277,956,0,0
255,5,2,0
157,0,4,-29
153,4,-28,0
1418,5,0,0
1421,5,0,0
155,4,-29,4
1421,5,0,0
155,4,-30,0
1273,6527,0,0
1432,0,0,0
1420,4,-30,0
1432,0,0,0
157,0,4,-30
433,0,4,-25
98,6594,0,0
278,5,7,0
278,5,2,0
1421,5,0,0
278,5,7,0
1448,4,-39,0
1281,0,0,0
1281,0,0,0
1277,485,0,0
255,5,3,0
140,0,4351,0
341,0,4,-29
318,0,4,-30
140,1,-16777216,0
253,1,0,0
153,4,-40,1
1448,4,-47,0
1282,4,-38,0
1282,4,-39,0
1282,4,-4,0
1282,4,-40,0
1277,5298,0,0
255,5,5,0
1282,4,-41,0
1282,4,-42,0
1282,4,-43,0
1282,4,-44,0
1282,4,-45,0
1282,4,-46,0
1282,4,-47,0
1417,4,-37,0
1417,4,-36,0
1417,4,-35,0
1417,4,-34,0
1417,4,-33,0
1417,4,-32,0
1417,4,-31,0
255,5,7,0
1418,5,0,0
255,5,2,0
278,5,2,0
1421,5,0,0
1448,4,-39,0
1282,4,-30,0
1447,2,4,-26
1277,2194,0,0
255,5,2,0
1448,4,-40,0
1282,4,-31,0
1282,4,-32,0
1282,4,-33,0
1282,4,-34,0
1282,4,-35,0
1282,4,-36,0
1282,4,-37,0
1282,4,-38,0
1282,4,-39,0
1447,2,4,-15
1277,2856,0,0
255,5,10,0
1418,5,0,0
255,5,2,0
255,5,7,0
1273,6525,0,0
1432,0,0,0
1418,5,0,0
1418,5,0,0
278,5,2,0
1447,2,4,-30
1277,4451,0,0
1421,5,0,0
1421,5,0,0
140,0,1024,0
301,0,1024,0
153,4,-31,0
1448,4,-32,0
1282,4,-31,0
1277,398,0,0
255,5,2,0
157,1,4,-32
153,4,-30,1
1418,5,0,0
1418,5,0,0
1421,5,0,0
1447,2,4,-31
1277,4440,0,0
157,1,4,-30
153,4,-31,1
1421,5,0,0
1448,4,-32,0
1282,4,-9,0
1282,4,-10,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1282,4,-14,0
1282,4,-15,0
1447,2,4,-31
1277,4282,0,0
255,5,8,0
1418,5,0,0
1279,0,0,0
157,0,4,-31
295,0,4,-30
138,1,0,0
1415,0,0,0
153,4,-29,1
157,3,4,11
1282,4,-29,0
1282,4,-30,0
1417,3,0,0
1417,3,1,0
1273,6657,0,0
1418,5,0,0
255,5,2,0
1418,5,0,0
1418,5,0,0
255,5,2,0
255,5,7,0
255,5,2,0
255,5,7,0
255,5,2,0
255,5,2,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
1421,5,0,0
155,4,-2,1
1418,5,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
153,4,-1,2
155,2,0,0
1418,5,0,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1279,4,0,0
138,4,5,0
1421,5,0,0
1421,5,0,0
1448,4,-1,0
1277,12,0,0
255,5,1,0
1448,4,-2,0
1282,4,-1,0
1281,0,0,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-1,0
1277,36,0,0
255,5,1,0
140,0,1024,0
301,0,512,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,398,0,0
255,5,2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-3,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1421,5,0,0
1448,4,-1,0
1277,61,0,0
255,5,1,0
140,0,1024,0
301,0,16,0
153,4,-2,0
1448,4,-3,0
1282,4,-2,0
1277,398,0,0
255,5,2,0
1448,4,-4,0
1282,4,-1,0
1282,4,-3,0
1277,678,0,0
255,5,3,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
1418,5,0,0
278,5,9,0
1447,2,4,-9
1277,3756,0,0
1421,5,0,0
1447,2,4,-10
1277,4440,0,0
157,1,4,2
153,4,-10,1
278,5,2,0
1448,4,-12,0
1447,2,4,-10
1277,3802,0,0
255,5,1,0
1282,4,-11,0
1282,4,-12,0
1417,4,-9,0
1417,4,-8,0
255,5,2,0
1421,5,0,0
1448,4,-11,0
1447,2,4,-10
1277,3776,0,0
255,5,1,0
157,1,4,-11
153,4,-7,1
1418,5,0,0
278,5,3,0
1448,4,-13,0
1447,2,4,-10
1277,3848,0,0
255,5,1,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1417,4,-6,0
1417,4,-5,0
1417,4,-4,0
255,5,3,0
278,5,3,0
1448,4,-13,0
1447,2,4,-10
1277,3848,0,0
255,5,1,0
1282,4,-11,0
1282,4,-12,0
1282,4,-13,0
1417,4,-3,0
1417,4,-2,0
1417,4,-1,0
255,5,3,0
278,5,2,0
278,5,2,0
1448,4,-14,0
1282,4,-1,0
1282,4,-2,0
1282,4,-3,0
1282,4,-4,0
1282,4,-5,0
1282,4,-6,0
1282,4,-7,0
1282,4,-8,0
1282,4,-9,0
1277,5828,0,0
255,5,10,0
1282,4,-13,0
1282,4,-14,0
1417,4,-12,0
1417,4,-11,0
255,5,2,0
1421,5,0,0
1448,4,-13,0
1282,4,-11,0
1277,692,0,0
255,5,2,0
1418,5,0,0
140,2,1,0
157,3,4,3
1282,4,-12,0
1417,3,0,0
1273,6829,0,0
255,5,2,0
1418,5,0,0
255,5,9,0
1432,0,0,0
138,5,4,0
1415,4,0,0
1430,0,0,0
1432,0,0,0
1421,5,0,0
1448,4,-1,0
1279,2,0,0
1277,6685,0,0
255,5,2,0
157,0,4,-1
1418,5,0,0
140,9,1,0
*/
jmp("begin");
label("func_g_const_addr(int)");
push(ebp);
mov(ebp,esp);
mov(edx,ptr[ebp+3]);
push(ptr[ebp+2]);
pop(ptr[edx+0]);
jmp("func_g_const_addr(int)::ret");
label("func_g_const_addr(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_g_ptr_addr()");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
mov(eax,64);
add(eax,7);
mov(ebx,1024);
mul(ebx,eax);
mov(ptr[ebp-1],ebx);
pushlea(ptr[ebp-2]);
push(ptr[ebp-1]);
call("func_g_const_addr(int)");
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_g_ptr_addr()::ret");
inc(esp);
inc(esp);
label("func_g_ptr_addr()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_g_mem_addr()");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
mov(eax,64);
add(eax,7);
mov(ebx,1024);
mul(ebx,eax);
add(ebx,8);
mov(ptr[ebp-1],ebx);
pushlea(ptr[ebp-2]);
push(ptr[ebp-1]);
call("func_g_const_addr(int)");
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_g_mem_addr()::ret");
inc(esp);
inc(esp);
label("func_g_mem_addr()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_g_arr_addr()");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
mov(eax,64);
add(eax,7);
mov(ebx,1024);
mul(ebx,eax);
add(ebx,16);
mov(ptr[ebp-1],ebx);
pushlea(ptr[ebp-2]);
push(ptr[ebp-1]);
call("func_g_const_addr(int)");
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_g_arr_addr()::ret");
inc(esp);
inc(esp);
label("func_g_arr_addr()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_g_obj_addr()");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
mov(eax,64);
add(eax,7);
mov(ebx,1024);
mul(ebx,eax);
add(ebx,512);
mov(ptr[ebp-1],ebx);
pushlea(ptr[ebp-2]);
push(ptr[ebp-1]);
call("func_g_const_addr(int)");
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_g_obj_addr()::ret");
inc(esp);
inc(esp);
label("func_g_obj_addr()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_g_ram_base()");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
mov(eax,64);
add(eax,8);
mov(ebx,1024);
mul(ebx,eax);
mov(ptr[ebp-1],ebx);
pushlea(ptr[ebp-2]);
push(ptr[ebp-1]);
call("func_g_const_addr(int)");
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_g_ram_base()::ret");
inc(esp);
inc(esp);
label("func_g_ram_base()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_CatmullRomEx(int,int,int,int,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(eax,ptr[ebp+6]);
mov(ptr[ebp-1],eax);
dec(esp);
mov(eax,ptr[ebp+5]);
sub(eax,ptr[ebp+7]);
mov(ptr[ebp-2],eax);
dec(esp);
mov(eax,2);
mul(eax,ptr[ebp+7]);
push(eax);
mov(eax,5);
mul(eax,ptr[ebp+6]);
pop(ebx);
sub(ebx,eax);
push(ebx);
mov(eax,4);
mul(eax,ptr[ebp+5]);
pop(ebx);
add(ebx,eax);
sub(ebx,ptr[ebp+4]);
mov(ptr[ebp-3],ebx);
dec(esp);
mov(eax,ptr[ebp+6]);
sub(eax,ptr[ebp+5]);
mov(ebx,3);
mul(ebx,eax);
add(ebx,ptr[ebp+4]);
sub(ebx,ptr[ebp+7]);
mov(ptr[ebp-4],ebx);
push(eax);
mov(eax,ptr[ebp-4]);
mul(eax,ptr[ebp+3]);
div(eax,ptr[ebp+2]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-4],ebx);
mov(ebx,ptr[ebp-3]);
add(ptr[ebp-4],ebx);
push(eax);
mov(eax,ptr[ebp-4]);
mul(eax,ptr[ebp+3]);
div(eax,ptr[ebp+2]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-4],ebx);
mov(ebx,ptr[ebp-2]);
add(ptr[ebp-4],ebx);
push(eax);
mov(eax,ptr[ebp-4]);
mul(eax,ptr[ebp+3]);
div(eax,ptr[ebp+2]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-4],ebx);
mov(eax,ptr[ebp-4]);
div(eax,2);
mov(ebx,ptr[ebp-1]);
add(ebx,eax);
mov(edx,ptr[ebp+8]);
mov(ptr[edx+0],ebx);
jmp("func_CatmullRomEx(int,int,int,int,int,int)::ret");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_CatmullRomEx(int,int,int,int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
push(ptr[ebp+11]);
push(ptr[ebp+10]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
sub(esp,2);
push(ptr[ebp+5]);
push(ptr[ebp+4]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
dec(esp);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-7]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
push(ptr[ebp+7]);
push(ptr[ebp+6]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-8]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
call("func_hypot(vec2i)");
add(esp,3);
mov(eax,ptr[ebp-8]);
mov(ptr[ebp-5],eax);
inc(esp);
add(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-9]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
add(esp,2);
dec(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
call("func_hypot(vec2i)");
add(esp,3);
mov(eax,ptr[ebp-9]);
mov(ptr[ebp-8],eax);
inc(esp);
jz("if_1000::end",ptr[ebp-8]);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-10]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-5]);
call("func_mul(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-12]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-8]);
call("func_div(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-14]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
call("func_add(vec2i,vec2i)");
add(esp,5);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
add(esp,2);
add(esp,2);
add(esp,2);
jmp("if_1000::end");
label("if_1000::end");
inc(esp);
add(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-9]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp+7]);
push(ptr[ebp+6]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
add(esp,2);
dec(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
call("func_hypot(vec2i)");
add(esp,3);
mov(eax,ptr[ebp-9]);
mov(ptr[ebp-8],eax);
inc(esp);
jz("if_1001::end",ptr[ebp-8]);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-10]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-5]);
call("func_mul(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-12]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-8]);
call("func_div(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-14]);
push(ptr[ebp+7]);
push(ptr[ebp+6]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
call("func_add(vec2i,vec2i)");
add(esp,5);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,2);
add(esp,2);
add(esp,2);
jmp("if_1001::end");
label("if_1001::end");
inc(esp);
add(esp,2);
dec(esp);
dec(esp);
sub(esp,2);
pushlea(ptr[ebp-6]);
push(ptr[ebp-2]);
push(ptr[ebp+8]);
push(ptr[ebp+6]);
push(ptr[ebp-4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_CatmullRomEx(int,int,int,int,int,int)");
add(esp,7);
pushlea(ptr[ebp-7]);
push(ptr[ebp-1]);
push(ptr[ebp+9]);
push(ptr[ebp+7]);
push(ptr[ebp-3]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_CatmullRomEx(int,int,int,int,int,int)");
add(esp,7);
pushlea(ptr[ebp-9]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+12]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)::ret");
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
add(esp,2);
add(esp,2);
label("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_alloc(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-2]);
call("func_g_ptr_addr()");
add(esp,1);
mov(eax,ptr[ebp-2]);
mov(ptr[ebp-1],eax);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ebp-1]);
call("func_get_int(int)");
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
not(eax,ptr[ebp-2]);
jz("if_1002::end",eax);
dec(esp);
pushlea(ptr[ebp-3]);
call("func_g_ram_base()");
add(esp,1);
mov(ebx,ptr[ebp-3]);
mov(ptr[ebp-2],ebx);
inc(esp);
jmp("if_1002::end");
label("if_1002::end");
dec(esp);
dec(esp);
mov(eax,ptr[ebp-2]);
add(eax,ptr[ebp+2]);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-3]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_alloc(int)::ret");
inc(esp);
inc(esp);
label("func_alloc(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vec2i::mag()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+0]);
push(ptr[ecx+1]);
call("func_hypot(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_vec2i::mag()::ret");
inc(esp);
inc(esp);
label("func_vec2i::mag()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vec2i::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
inc(esp);
label("func_vec2i::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vec2i(int,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
lea(ecx,ptr[ebp-2]);
call("func_vec2i::`ctor()");
mov(ebx,ptr[ebp+3]);
mov(ptr[ebp-2],ebx);
mov(ebx,ptr[ebp+2]);
mov(ptr[ebp-1],ebx);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_vec2i(int,int)::ret");
add(esp,2);
label("func_vec2i(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_add(int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
pushlea(ptr[ebp-1]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
add(esp,3);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-1]);
pop(ptr[edx+0]);
jmp("func_add(int,int)::ret");
inc(esp);
label("func_add(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_hypot(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
pushlea(ptr[ebp-1]);
push(ptr[ebp+2]);
push(ptr[ebp+3]);
call("func_hypot(int,int)");
add(esp,3);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-1]);
pop(ptr[edx+0]);
jmp("func_hypot(vec2i)::ret");
inc(esp);
label("func_hypot(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_sub(vec2i,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp+4]);
sub(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
mov(eax,ptr[ebp+5]);
sub(eax,ptr[ebp+3]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+6]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_sub(vec2i,vec2i)::ret");
add(esp,2);
inc(esp);
inc(esp);
label("func_sub(vec2i,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_add(vec2i,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp+4]);
add(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
mov(eax,ptr[ebp+5]);
add(eax,ptr[ebp+3]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+6]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_add(vec2i,vec2i)::ret");
add(esp,2);
inc(esp);
inc(esp);
label("func_add(vec2i,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_mul(vec2i,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp+3]);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
mov(eax,ptr[ebp+4]);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_mul(vec2i,int)::ret");
add(esp,2);
inc(esp);
inc(esp);
label("func_mul(vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_div(vec2i,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp+3]);
div(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
mov(eax,ptr[ebp+4]);
div(eax,ptr[ebp+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_div(vec2i,int)::ret");
add(esp,2);
inc(esp);
inc(esp);
label("func_div(vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_get_int(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],0);
mov(eax,ptr[ebp+2]);
mov(ptr[ebp-1],ptr[eax]);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-1]);
pop(ptr[edx+0]);
jmp("func_get_int(int)::ret");
inc(esp);
label("func_get_int(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_set_int(int,int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+3]);
mov(ptr[eax],ptr[ebp+2]);
mov(eax,ptr[ebp+3]);
add(eax,1);
mov(edx,ptr[ebp+4]);
mov(ptr[edx+0],eax);
jmp("func_set_int(int,int)::ret");
label("func_set_int(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_setebx(int)");
push(ebp);
mov(ebp,esp);
mov(ebx,ptr[ebp+2]);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],0);
jmp("func_setebx(int)::ret");
label("func_setebx(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_hypot(int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],0);
mov(eax,ptr[ebp+3]);
mov(ebx,ptr[ebp+2]);
hypot(eax,ebx);
mov(ptr[ebp-1],eax);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-1]);
pop(ptr[edx+0]);
jmp("func_hypot(int,int)::ret");
inc(esp);
label("func_hypot(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_sqrt(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],0);
sqrt(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-1]);
pop(ptr[edx+0]);
jmp("func_sqrt(int)::ret");
inc(esp);
label("func_sqrt(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_QapAssert(int)");
push(ebp);
mov(ebp,esp);
not(eax,ptr[ebp+2]);
jz("if_1003::end",eax);
label("Run-time error!");
mov(err,-1);
jmp("if_1003::end");
label("if_1003::end");
label("func_QapAssert(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_QapAssert(int,int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+3]);
neq(eax,ptr[ebp+2]);
jz("if_1004::end",eax);
label("Run-time error!");
mov(err,-1);
jmp("if_1004::end");
label("if_1004::end");
label("func_QapAssert(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_min(int,int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+3]);
less(eax,ptr[ebp+2]);
jz("if_1005::end",eax);
mov(edx,ptr[ebp+4]);
push(ptr[ebp+3]);
pop(ptr[edx+0]);
jmp("func_min(int,int)::ret");
jmp("if_1005::end");
label("if_1005::end");
mov(edx,ptr[ebp+4]);
push(ptr[ebp+2]);
pop(ptr[edx+0]);
jmp("func_min(int,int)::ret");
label("func_min(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_max(int,int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+3]);
more(eax,ptr[ebp+2]);
jz("if_1006::end",eax);
mov(edx,ptr[ebp+4]);
push(ptr[ebp+3]);
pop(ptr[edx+0]);
jmp("func_max(int,int)::ret");
jmp("if_1006::end");
label("if_1006::end");
mov(edx,ptr[ebp+4]);
push(ptr[ebp+2]);
pop(ptr[edx+0]);
jmp("func_max(int,int)::ret");
label("func_max(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_clamp(int,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-1]);
push(ptr[ebp+4]);
push(ptr[ebp+2]);
call("func_max(int,int)");
add(esp,3);
pushlea(ptr[ebp-2]);
push(ptr[ebp-1]);
push(ptr[ebp+3]);
call("func_min(int,int)");
add(esp,3);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_clamp(int,int,int)::ret");
inc(esp);
inc(esp);
label("func_clamp(int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_qap_vertex::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
lea(ecx,ptr[ecx+1]);
call("func_vec2i::`ctor()");
mov(ecx,ptr[ebp-1]);
inc(esp);
label("func_qap_vertex::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_qap_vertex(int,vec2i)");
push(ebp);
mov(ebp,esp);
sub(esp,3);
lea(ecx,ptr[ebp-3]);
call("func_qap_vertex::`ctor()");
mov(ebx,ptr[ebp+4]);
mov(ptr[ebp-3],ebx);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_qap_vertex(int,vec2i)::ret");
add(esp,3);
label("func_qap_vertex(int,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::reserve(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,1);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_alloc(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(ebx,ptr[ebp-3]);
mov(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
mov(ptr[ecx+1],0);
mov(ebx,ptr[ebp+2]);
mov(ptr[ecx+2],ebx);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],0);
jmp("func_vector_int::reserve(int)::ret");
inc(esp);
label("func_vector_int::reserve(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::add(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
less(eax,ptr[ecx+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+0]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(ebx,ptr[ebp-2]);
mov(ptr[ecx+0],ebx);
inc(esp);
inc(ptr[ecx+1]);
mov(edx,ptr[ebp+3]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_int::add(int)::ret");
inc(esp);
label("func_vector_int::add(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::get(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_vector_int::get(int)::ret");
inc(esp);
inc(esp);
label("func_vector_int::get(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+0]);
add(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_int::get(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
jmp("func_vector_int::at(int)::ret");
inc(esp);
inc(esp);
inc(esp);
label("func_vector_int::at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::front()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
more(eax,0);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(0);
mov(ecx,ptr[ebp-1]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_vector_int::front()::ret");
inc(esp);
inc(esp);
label("func_vector_int::front()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::back()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
more(eax,0);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
sub(eax,1);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
jmp("func_vector_int::back()::ret");
inc(esp);
inc(esp);
inc(esp);
label("func_vector_int::back()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::addr_at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mul(eax,1);
mov(ebx,ptr[ecx+0]);
add(ebx,eax);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],ebx);
jmp("func_vector_int::addr_at(int)::ret");
inc(esp);
label("func_vector_int::addr_at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::add_mega_fast(vector_int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
mov(eax,ptr[ebp+3]);
sub(eax,ptr[ebp+4]);
mov(ptr[ebp-2],eax);
dec(esp);
mov(eax,ptr[ebp+4]);
mov(ptr[ebp-3],eax);
dec(esp);
mov(eax,ptr[ebp+2]);
mov(ptr[ebp-4],eax);
dec(esp);
mov(eax,ptr[ecx+0]);
mov(ptr[ebp-5],eax);
jmp("for_8000::condition");
label("for_8000::continue");
dec(ptr[ebp-3]);
label("for_8000::condition");
jz("for_8000::break",ptr[ebp-3]);
dec(esp);
mov(eax,ptr[ebp-2]);
mov(ptr[ebp-6],eax);
dec(esp);
pushlea(ptr[ebp-7]);
push(ptr[ebp-6]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(ebx,ptr[ebp-7]);
mov(ptr[ebp-6],ebx);
inc(esp);
mov(ebx,ptr[ebp-4]);
add(ptr[ebp-6],ebx);
dec(esp);
pushlea(ptr[ebp-7]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(ptr[ebp-5]);
inc(ptr[ebp-2]);
inc(esp);
jmp("for_8000::continue");
label("for_8000::break");
mov(ebx,ptr[ebp+4]);
add(ptr[ecx+1],ebx);
mov(ebx,ptr[ebp+4]);
add(ptr[ecx+0],ebx);
mov(edx,ptr[ebp+6]);
mov(ptr[edx+0],0);
jmp("func_vector_int::add_mega_fast(vector_int,int)::ret");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_int::add_mega_fast(vector_int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_int::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
mov(ptr[ecx+2],0);
inc(esp);
label("func_vector_int::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::reserve(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,3);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_alloc(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(ebx,ptr[ebp-3]);
mov(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
mov(ptr[ecx+1],0);
mov(ebx,ptr[ebp+2]);
mov(ptr[ecx+2],ebx);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],0);
jmp("func_vector_qap_vertex::reserve(int)::ret");
inc(esp);
label("func_vector_qap_vertex::reserve(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::sys_add(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+0]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(ebx,ptr[ebp-2]);
mov(ptr[ecx+0],ebx);
inc(esp);
mov(edx,ptr[ebp+3]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_qap_vertex::sys_add(int)::ret");
inc(esp);
label("func_vector_qap_vertex::sys_add(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::sys_add(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
mov(edx,ptr[ebp+4]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_qap_vertex::sys_add(vec2i)::ret");
inc(esp);
label("func_vector_qap_vertex::sys_add(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::add(int,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
less(eax,ptr[ecx+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(ptr[ecx+1]);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_qap_vertex::add(int,vec2i)::ret");
inc(esp);
label("func_vector_qap_vertex::add(int,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::add(qap_vertex)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
less(eax,ptr[ecx+2]);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::sys_add(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(ptr[ecx+1]);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_qap_vertex::add(qap_vertex)::ret");
inc(esp);
label("func_vector_qap_vertex::add(qap_vertex)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::get_vec2i(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp+2]);
add(eax,1);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-3]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-6]);
push(ptr[ebp-2]);
push(ptr[ebp-4]);
call("func_vec2i(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_vector_qap_vertex::get_vec2i(int)::ret");
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::get_vec2i(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::get(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
sub(esp,2);
sub(esp,3);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp+2]);
add(eax,1);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-5]);
push(ptr[ebp-3]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::get_vec2i(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-8]);
push(ptr[ebp-2]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
call("func_qap_vertex(int,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::get(int)::ret");
add(esp,3);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::get(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
sub(esp,3);
mov(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mul(eax,3);
mov(ebx,ptr[ecx+0]);
add(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-5]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::get(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::at(int)::ret");
add(esp,3);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::to_vector_int()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,3);
lea(ecx,ptr[ebp-4]);
call("func_vector_int::`ctor()");
mov(ecx,ptr[ebp-1]);
mov(ebx,ptr[ecx+0]);
mov(ptr[ebp-4],ebx);
push(eax);
mov(eax,ptr[ecx+1]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-3],ebx);
push(eax);
mov(eax,ptr[ecx+2]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-2],ebx);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::to_vector_int()::ret");
add(esp,3);
inc(esp);
label("func_vector_qap_vertex::to_vector_int()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::front()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
more(eax,0);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
sub(esp,3);
pushlea(ptr[ebp-4]);
push(0);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::front()::ret");
add(esp,3);
inc(esp);
label("func_vector_qap_vertex::front()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::back()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
more(eax,0);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
sub(esp,3);
mov(eax,ptr[ecx+1]);
sub(eax,1);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-5]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::back()::ret");
add(esp,3);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::back()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::clone()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,3);
lea(ecx,ptr[ebp-4]);
call("func_vector_qap_vertex::`ctor()");
mov(ecx,ptr[ebp-1]);
dec(esp);
pushlea(ptr[ebp-5]);
push(ptr[ecx+2]);
lea(ecx,ptr[ebp-4]);
call("func_vector_qap_vertex::reserve(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
mov(ptr[ebp-5],0);
jmp("for_8001::condition");
label("for_8001::continue");
inc(ptr[ebp-5]);
label("for_8001::condition");
mov(eax,ptr[ebp-5]);
less(eax,ptr[ecx+1]);
jz("for_8001::break",eax);
sub(esp,3);
dec(esp);
pushlea(ptr[ebp-8]);
push(ptr[ebp-5]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-9]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
lea(ecx,ptr[ebp-4]);
call("func_vector_qap_vertex::add(qap_vertex)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
add(esp,3);
jmp("for_8001::continue");
label("for_8001::break");
inc(esp);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_vector_qap_vertex::clone()::ret");
add(esp,3);
inc(esp);
label("func_vector_qap_vertex::clone()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::is_equal(vector_qap_vertex)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
push(ptr[ecx+1]);
call("func_QapAssert(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
dec(esp);
mov(ptr[ebp-2],0);
jmp("for_8002::condition");
label("for_8002::continue");
inc(ptr[ebp-2]);
label("for_8002::condition");
mov(eax,ptr[ebp-2]);
less(eax,ptr[ecx+1]);
jz("for_8002::break",eax);
sub(esp,3);
sub(esp,3);
pushlea(ptr[ebp-8]);
push(ptr[ebp-2]);
lea(ecx,ptr[ebp+2]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,3);
sub(esp,3);
sub(esp,3);
pushlea(ptr[ebp-11]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
add(esp,3);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-5]);
push(ptr[ebp-8]);
call("func_QapAssert(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-4]);
push(ptr[ebp-7]);
call("func_QapAssert(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-3]);
push(ptr[ebp-6]);
call("func_QapAssert(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,3);
add(esp,3);
jmp("for_8002::continue");
label("for_8002::break");
inc(esp);
inc(esp);
label("func_vector_qap_vertex::is_equal(vector_qap_vertex)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::addr_at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mul(eax,3);
mov(ebx,ptr[ecx+0]);
add(ebx,eax);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],ebx);
jmp("func_vector_qap_vertex::addr_at(int)::ret");
inc(esp);
label("func_vector_qap_vertex::addr_at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::add(vector_qap_vertex)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ecx+1]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(0);
lea(ecx,ptr[ebp+2]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+3]);
mul(eax,3);
mov(ptr[ebp-4],eax);
dec(esp);
mov(ptr[ebp-5],0);
jmp("for_8003::condition");
label("for_8003::continue");
inc(ptr[ebp-5]);
label("for_8003::condition");
mov(eax,ptr[ebp-5]);
less(eax,ptr[ebp-4]);
jz("for_8003::break",eax);
dec(esp);
dec(esp);
pushlea(ptr[ebp-6]);
push(ptr[ebp-3]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-7]);
push(ptr[ebp-2]);
push(ptr[ebp-6]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(ptr[ebp-2]);
inc(ptr[ebp-3]);
jmp("for_8003::continue");
label("for_8003::break");
inc(esp);
mov(ebx,ptr[ebp+3]);
add(ptr[ecx+1],ebx);
push(eax);
mov(eax,ptr[ebp+3]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
mov(edx,ptr[ebp+5]);
mov(ptr[edx+0],0);
jmp("func_vector_qap_vertex::add(vector_qap_vertex)::ret");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::add(vector_qap_vertex)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ecx+1]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(0);
lea(ecx,ptr[ebp+4]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+2]);
mov(ptr[ebp-4],eax);
dec(esp);
mov(eax,ptr[ebp+3]);
mov(ptr[ebp-5],eax);
dec(esp);
mov(eax,ptr[ebp+5]);
mov(ptr[ebp-6],eax);
dec(esp);
mov(ptr[ebp-7],0);
jmp("for_8004::condition");
label("for_8004::continue");
inc(ptr[ebp-7]);
label("for_8004::condition");
mov(eax,ptr[ebp-7]);
less(eax,ptr[ebp-6]);
jz("for_8004::break",eax);
dec(esp);
dec(esp);
pushlea(ptr[ebp-8]);
push(ptr[ebp-3]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-9]);
push(ptr[ebp-2]);
push(ptr[ebp-8]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(ptr[ebp-2]);
inc(ptr[ebp-3]);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-8]);
push(ptr[ebp-3]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-8]);
add(eax,ptr[ebp-4]);
mov(ptr[ebp-9],eax);
pushlea(ptr[ebp-10]);
push(ptr[ebp-2]);
push(ptr[ebp-9]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
inc(ptr[ebp-2]);
inc(ptr[ebp-3]);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-8]);
push(ptr[ebp-3]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-8]);
add(eax,ptr[ebp-5]);
mov(ptr[ebp-9],eax);
pushlea(ptr[ebp-10]);
push(ptr[ebp-2]);
push(ptr[ebp-9]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
inc(ptr[ebp-2]);
inc(ptr[ebp-3]);
jmp("for_8004::continue");
label("for_8004::break");
inc(esp);
mov(ebx,ptr[ebp+5]);
add(ptr[ecx+1],ebx);
push(eax);
mov(eax,ptr[ebp+5]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
mov(edx,ptr[ebp+7]);
mov(ptr[edx+0],0);
jmp("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)::ret");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ecx+1]);
mov(ecx,ptr[ebp-1]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(0);
lea(ecx,ptr[ebp+5]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+2]);
mov(ptr[ebp-4],eax);
dec(esp);
mov(eax,ptr[ebp+3]);
mov(ptr[ebp-5],eax);
dec(esp);
mov(eax,ptr[ebp+6]);
mov(ptr[ebp-6],eax);
dec(esp);
mov(ptr[ebp-7],0);
jmp("for_8005::condition");
label("for_8005::continue");
inc(ptr[ebp-7]);
label("for_8005::condition");
mov(eax,ptr[ebp-7]);
less(eax,ptr[ebp-6]);
jz("for_8005::break",eax);
dec(esp);
pushlea(ptr[ebp-8]);
push(ptr[ebp-2]);
push(ptr[ebp+4]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(ptr[ebp-2]);
inc(ptr[ebp-3]);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-8]);
push(ptr[ebp-3]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-8]);
add(eax,ptr[ebp-4]);
mov(ptr[ebp-9],eax);
pushlea(ptr[ebp-10]);
push(ptr[ebp-2]);
push(ptr[ebp-9]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
inc(ptr[ebp-2]);
inc(ptr[ebp-3]);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-8]);
push(ptr[ebp-3]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-8]);
add(eax,ptr[ebp-5]);
mov(ptr[ebp-9],eax);
pushlea(ptr[ebp-10]);
push(ptr[ebp-2]);
push(ptr[ebp-9]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
inc(ptr[ebp-2]);
inc(ptr[ebp-3]);
jmp("for_8005::continue");
label("for_8005::break");
inc(esp);
mov(ebx,ptr[ebp+6]);
add(ptr[ecx+1],ebx);
push(eax);
mov(eax,ptr[ebp+6]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
mov(edx,ptr[ebp+8]);
mov(ptr[edx+0],0);
jmp("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)::ret");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_qap_vertex::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
mov(ptr[ecx+2],0);
inc(esp);
label("func_vector_qap_vertex::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::sys_add(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+0]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(ebx,ptr[ebp-2]);
mov(ptr[ecx+0],ebx);
inc(esp);
mov(edx,ptr[ebp+3]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_vec2i::sys_add(int)::ret");
inc(esp);
label("func_vector_vec2i::sys_add(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::add(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_vec2i::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_vector_vec2i::sys_add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(ptr[ecx+1]);
mov(edx,ptr[ebp+4]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_vec2i::add(vec2i)::ret");
inc(esp);
label("func_vector_vec2i::add(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::get(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp+2]);
add(eax,1);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-3]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-6]);
push(ptr[ebp-2]);
push(ptr[ebp-4]);
call("func_vec2i(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_vector_vec2i::get(int)::ret");
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_vector_vec2i::get(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::addr_at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mul(eax,2);
mov(ebx,ptr[ecx+0]);
add(ebx,eax);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],ebx);
jmp("func_vector_vec2i::addr_at(int)::ret");
inc(esp);
label("func_vector_vec2i::addr_at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::at(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp+2]);
sub(eax,ptr[ecx+1]);
mul(eax,2);
mov(ebx,ptr[ecx+0]);
add(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-4]);
push(ptr[ebp-2]);
mov(ecx,ptr[ebp-1]);
call("func_vector_vec2i::get(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_vector_vec2i::at(int)::ret");
add(esp,2);
inc(esp);
inc(esp);
label("func_vector_vec2i::at(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::CatmullRom(vector_vec2i,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+4]);
nless(eax,2);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+4]);
mov(ptr[ebp-2],eax);
sub(esp,2);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp-2]);
sub(eax,1);
mov(ptr[ebp-5],eax);
mov(eax,ptr[ebp+2]);
sub(eax,1);
mov(ptr[ebp-6],eax);
pushlea(ptr[ebp-7]);
push(0);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
call("func_clamp(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-9]);
push(ptr[ebp-7]);
lea(ecx,ptr[ebp+3]);
call("func_vector_vec2i::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
sub(esp,2);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp-2]);
sub(eax,1);
mov(ptr[ebp-7],eax);
mov(eax,ptr[ebp+2]);
add(eax,0);
mov(ptr[ebp-8],eax);
pushlea(ptr[ebp-9]);
push(0);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
call("func_clamp(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-11]);
push(ptr[ebp-9]);
lea(ecx,ptr[ebp+3]);
call("func_vector_vec2i::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
sub(esp,2);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp-2]);
sub(eax,1);
mov(ptr[ebp-9],eax);
mov(eax,ptr[ebp+2]);
add(eax,1);
mov(ptr[ebp-10],eax);
pushlea(ptr[ebp-11]);
push(0);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
call("func_clamp(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
lea(ecx,ptr[ebp+3]);
call("func_vector_vec2i::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
sub(esp,2);
dec(esp);
dec(esp);
dec(esp);
sub(esp,2);
mov(eax,ptr[ebp-2]);
sub(eax,1);
mov(ptr[ebp-11],eax);
mov(eax,ptr[ebp+2]);
add(eax,2);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-13]);
push(0);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
call("func_clamp(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-15]);
push(ptr[ebp-13]);
lea(ecx,ptr[ebp+3]);
call("func_vector_vec2i::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
pop(ptr[ebp-10]);
pop(ptr[ebp-9]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-13]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
call("func_sub(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
pushlea(ptr[ebp-14]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
call("func_hypot(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(eax,ptr[ebp-14]);
div(eax,32);
mov(ptr[ebp-11],eax);
inc(esp);
add(esp,2);
dec(esp);
mov(eax,ptr[ebp-11]);
mov(ptr[ebp-12],eax);
dec(esp);
mov(ptr[ebp-13],0);
jmp("for_8006::condition");
label("for_8006::continue");
inc(ptr[ebp-13]);
label("for_8006::condition");
mov(eax,ptr[ebp-13]);
less(eax,ptr[ebp-11]);
jz("for_8006::break",eax);
dec(esp);
mov(eax,ptr[ebp-13]);
mul(eax,ptr[ebp-12]);
div(eax,ptr[ebp-11]);
mov(ptr[ebp-14],eax);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-16]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-14]);
push(ptr[ebp-12]);
call("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,11);
pushlea(ptr[ebp-17]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
mov(ecx,ptr[ebp-1]);
call("func_vector_vec2i::add(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
inc(esp);
jmp("for_8006::continue");
label("for_8006::break");
inc(esp);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-14]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-12]);
push(ptr[ebp-12]);
call("func_VCatmullRom(vec2i,vec2i,vec2i,vec2i,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,11);
pushlea(ptr[ebp-15]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
mov(ecx,ptr[ebp-1]);
call("func_vector_vec2i::add(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_vector_vec2i::CatmullRom(vector_vec2i,int)::ret");
inc(esp);
inc(esp);
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,2);
inc(esp);
inc(esp);
label("func_vector_vec2i::CatmullRom(vector_vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_vector_vec2i::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
inc(esp);
label("func_vector_vec2i::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_new_geom(int)");
push(ebp);
mov(ebp,esp);
sub(esp,7);
lea(ecx,ptr[ebp-7]);
call("func_t_out_dev::`ctor()");
push(eax);
mov(eax,255);
shl(eax,24);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-1],ebx);
dec(esp);
dec(esp);
mov(eax,4);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-8],eax);
pushlea(ptr[ebp-9]);
push(ptr[ebp-8]);
lea(ecx,ptr[ebp-7]);
call("func_vector_qap_vertex::reserve(int)");
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,6);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-8],eax);
pushlea(ptr[ebp-9]);
push(ptr[ebp-8]);
lea(ecx,ptr[ebp-4]);
call("func_vector_int::reserve(int)");
add(esp,2);
inc(esp);
inc(esp);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_new_geom(int)::ret");
add(esp,7);
label("func_new_geom(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::AddTris(int,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
mov(edx,ptr[ebp+5]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::AddTris(int,int,int)::ret");
inc(esp);
label("func_t_out_dev::AddTris(int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::AddVertex(qap_vertex)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(qap_vertex)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(edx,ptr[ebp+5]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::AddVertex(qap_vertex)::ret");
inc(esp);
label("func_t_out_dev::AddVertex(qap_vertex)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::AddVertex(int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_vec2i(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
pushlea(ptr[ebp-4]);
push(ptr[ecx+6]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(int,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
add(esp,2);
mov(edx,ptr[ebp+4]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::AddVertex(int,int)::ret");
inc(esp);
label("func_t_out_dev::AddVertex(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::AddVertex(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+6]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(int,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(edx,ptr[ebp+4]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::AddVertex(vec2i)::ret");
inc(esp);
label("func_t_out_dev::AddVertex(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::AddVertexAndRetVID(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+6]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(int,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(eax,ptr[ecx+1]);
sub(eax,1);
mov(edx,ptr[ebp+4]);
mov(ptr[edx+0],eax);
jmp("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret");
inc(esp);
label("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::add(t_out_dev)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+6]);
mod(eax,3);
mov(ebx,0);
eq(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+7]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ecx+1]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add_mega_fast(vector_int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(vector_qap_vertex)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(edx,ptr[ebp+9]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::add(t_out_dev)::ret");
inc(esp);
label("func_t_out_dev::add(t_out_dev)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::add_wo(t_out_dev,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+8]);
mod(eax,3);
mov(ebx,0);
eq(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
mov(ptr[ebp-2],eax);
dec(esp);
mov(ptr[ebp-3],0);
jmp("for_8007::condition");
label("for_8007::continue");
inc(ptr[ebp-3]);
label("for_8007::condition");
mov(eax,ptr[ebp-3]);
less(eax,ptr[ebp+5]);
jz("for_8007::break",eax);
sub(esp,3);
sub(esp,3);
pushlea(ptr[ebp-9]);
push(ptr[ebp-3]);
lea(ecx,ptr[ebp+4]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
add(esp,3);
sub(esp,2);
pushlea(ptr[ebp-8]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-7]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(qap_vertex)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
add(esp,3);
jmp("for_8007::continue");
label("for_8007::break");
inc(esp);
dec(esp);
mov(ptr[ebp-3],0);
jmp("for_8008::condition");
label("for_8008::continue");
inc(ptr[ebp-3]);
label("for_8008::condition");
mov(eax,ptr[ebp-3]);
less(eax,ptr[ebp+8]);
jz("for_8008::break",eax);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(ptr[ebp-3]);
lea(ecx,ptr[ebp+7]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-2]);
add(eax,ptr[ebp-4]);
mov(ptr[ebp-5],eax);
pushlea(ptr[ebp-6]);
push(ptr[ebp-5]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
jmp("for_8008::continue");
label("for_8008::break");
inc(esp);
mov(edx,ptr[ebp+11]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::add_wo(t_out_dev,vec2i)::ret");
inc(esp);
inc(esp);
label("func_t_out_dev::add_wo(t_out_dev,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,1024);
mul(eax,16);
mul(eax,4);
mov(ebx,ptr[ecx+1]);
less(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+8]);
mod(eax,3);
mov(ebx,0);
eq(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
push(ptr[ebp+7]);
push(ptr[ecx+1]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add_mega_fast(vector_int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add_with_offset(vector_qap_vertex,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,6);
inc(esp);
mov(edx,ptr[ebp+11]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret");
inc(esp);
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::add_with_color(t_out_dev,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,1024);
mul(eax,16);
mul(eax,4);
mov(ebx,ptr[ecx+1]);
less(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+8]);
mod(eax,3);
mov(ebx,0);
eq(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
push(ptr[ebp+7]);
push(ptr[ecx+1]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add_mega_fast(vector_int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ebp+4]);
push(ptr[ecx+6]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add_with_color(vector_qap_vertex,int,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,7);
inc(esp);
mov(edx,ptr[ebp+11]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::add_with_color(t_out_dev,vec2i)::ret");
inc(esp);
label("func_t_out_dev::add_with_color(t_out_dev,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::add_wc(t_out_dev,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+8]);
mod(eax,3);
mov(ebx,0);
eq(ebx,eax);
mov(ptr[ebp-2],ebx);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
mov(eax,ptr[ecx+1]);
mov(ptr[ebp-2],eax);
dec(esp);
mov(ptr[ebp-3],0);
jmp("for_8009::condition");
label("for_8009::continue");
inc(ptr[ebp-3]);
label("for_8009::condition");
mov(eax,ptr[ebp-3]);
less(eax,ptr[ebp+5]);
jz("for_8009::break",eax);
sub(esp,3);
sub(esp,3);
pushlea(ptr[ebp-9]);
push(ptr[ebp-3]);
lea(ecx,ptr[ebp+4]);
call("func_vector_qap_vertex::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
add(esp,3);
mov(ebx,ptr[ecx+6]);
mov(ptr[ebp-6],ebx);
sub(esp,2);
pushlea(ptr[ebp-8]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-7]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::add(qap_vertex)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
add(esp,3);
jmp("for_8009::continue");
label("for_8009::break");
inc(esp);
dec(esp);
mov(ptr[ebp-3],0);
jmp("for_8010::condition");
label("for_8010::continue");
inc(ptr[ebp-3]);
label("for_8010::condition");
mov(eax,ptr[ebp-3]);
less(eax,ptr[ebp+8]);
jz("for_8010::break",eax);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(ptr[ebp-3]);
lea(ecx,ptr[ebp+7]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-2]);
add(eax,ptr[ebp-4]);
mov(ptr[ebp-5],eax);
pushlea(ptr[ebp-6]);
push(ptr[ebp-5]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::add(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
jmp("for_8010::continue");
label("for_8010::break");
inc(esp);
mov(edx,ptr[ebp+11]);
mov(ptr[edx+0],0);
jmp("func_t_out_dev::add_wc(t_out_dev,vec2i)::ret");
inc(esp);
inc(esp);
label("func_t_out_dev::add_wc(t_out_dev,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::GenGeomQuad(int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,7);
pushlea(ptr[ebp-8]);
push(0);
push(0);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_t_out_dev::GenGeomQuad(int,int)::ret");
add(esp,7);
inc(esp);
label("func_t_out_dev::GenGeomQuad(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::GenGeomQuad(vec2i,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,7);
pushlea(ptr[ebp-8]);
push(ptr[ebp+4]);
push(ptr[ebp+5]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
mov(edx,ptr[ebp+6]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_t_out_dev::GenGeomQuad(vec2i,int,int)::ret");
add(esp,7);
inc(esp);
label("func_t_out_dev::GenGeomQuad(vec2i,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::GenGeomQuad(int,int,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,7);
sub(esp,7);
pushlea(ptr[ebp-15]);
push(1);
call("func_new_geom(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
pop(ptr[ebp-2]);
add(esp,7);
mov(ebx,ptr[ecx+6]);
mov(ptr[ebp-2],ebx);
dec(esp);
mov(eax,ptr[ebp+3]);
div(eax,2);
mov(ptr[ebp-9],eax);
dec(esp);
mov(eax,ptr[ebp+2]);
div(eax,2);
mov(ptr[ebp-10],eax);
dec(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+5]);
sub(eax,ptr[ebp-9]);
mov(ptr[ebp-11],eax);
mov(eax,ptr[ebp+4]);
sub(eax,ptr[ebp-10]);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+5]);
add(eax,ptr[ebp-9]);
mov(ptr[ebp-11],eax);
mov(eax,ptr[ebp+4]);
sub(eax,ptr[ebp-10]);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+5]);
add(eax,ptr[ebp-9]);
mov(ptr[ebp-11],eax);
mov(eax,ptr[ebp+4]);
add(eax,ptr[ebp-10]);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+5]);
sub(eax,ptr[ebp-9]);
mov(ptr[ebp-11],eax);
mov(eax,ptr[ebp+4]);
add(eax,ptr[ebp-10]);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-11]);
push(1);
push(0);
push(3);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddTris(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
dec(esp);
pushlea(ptr[ebp-11]);
push(3);
push(2);
push(1);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddTris(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(edx,ptr[ebp+6]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret");
inc(esp);
inc(esp);
add(esp,7);
inc(esp);
label("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,7);
sub(esp,7);
pushlea(ptr[ebp-15]);
push(1);
call("func_new_geom(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
pop(ptr[ebp-2]);
add(esp,7);
mov(ebx,ptr[ecx+6]);
mov(ptr[ebp-2],ebx);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-12]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
call("func_sub(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
pop(ptr[ebp-10]);
pop(ptr[ebp-9]);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-11]);
lea(ecx,ptr[ebp-10]);
call("func_vec2i::mag()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
mov(eax,ptr[ebp-11]);
eq(eax,0);
jz("if_1007::end",eax);
mov(edx,ptr[ebp+7]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)::ret");
jmp("if_1007::end");
label("if_1007::end");
inc(esp);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-14]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
call("func_ort(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
pushlea(ptr[ebp-16]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp+2]);
call("func_set_mag(vec2i,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
pop(ptr[ebp-12]);
pop(ptr[ebp-11]);
add(esp,2);
add(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-16]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
pop(ptr[ebp-14]);
pop(ptr[ebp-13]);
add(esp,2);
sub(esp,2);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-16]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(1);
call("func_mul(vec2i,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-18]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
pushlea(ptr[ebp-19]);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
add(esp,2);
dec(esp);
sub(esp,2);
sub(esp,2);
dec(esp);
inv(eax,1);
mov(ptr[ebp-15],eax);
pushlea(ptr[ebp-17]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-15]);
call("func_mul(vec2i,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-19]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
pushlea(ptr[ebp-20]);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
add(esp,2);
inc(esp);
dec(esp);
sub(esp,2);
sub(esp,2);
dec(esp);
inv(eax,1);
mov(ptr[ebp-15],eax);
pushlea(ptr[ebp-17]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-15]);
call("func_mul(vec2i,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-19]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
pushlea(ptr[ebp-20]);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
add(esp,2);
inc(esp);
sub(esp,2);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-16]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(1);
call("func_mul(vec2i,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
pushlea(ptr[ebp-18]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
mov(ecx,ptr[ebp-1]);
call("func_add(vec2i,vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,5);
pushlea(ptr[ebp-19]);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddVertex(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
add(esp,2);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-15]);
push(1);
push(0);
push(3);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddTris(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
dec(esp);
pushlea(ptr[ebp-15]);
push(3);
push(2);
push(1);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::AddTris(int,int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,4);
inc(esp);
mov(edx,ptr[ebp+7]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)::ret");
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,7);
inc(esp);
label("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_out_dev::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
lea(ecx,ptr[ecx+0]);
call("func_vector_qap_vertex::`ctor()");
mov(ecx,ptr[ebp-1]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::`ctor()");
mov(ecx,ptr[ebp-1]);
mov(ptr[ecx+6],0);
inc(esp);
label("func_t_out_dev::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_ort(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
sub(esp,2);
inv(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp+3]);
push(ptr[ebp-1]);
call("func_vec2i(int,int)");
add(esp,3);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_ort(vec2i)::ret");
add(esp,2);
inc(esp);
label("func_ort(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_set_mag(vec2i,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
dec(esp);
sub(esp,2);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-3]);
lea(ecx,ptr[ebp+3]);
call("func_vec2i::mag()");
add(esp,1);
pushlea(ptr[ebp-5]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
call("func_div(vec2i,int)");
add(esp,4);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_set_mag(vec2i,int)::ret");
add(esp,2);
inc(esp);
add(esp,2);
label("func_set_mag(vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_input::kb_on_down(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+6]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-2]);
and(eax,ptr[ebp-3]);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],eax);
jmp("func_t_input::kb_on_down(int)::ret");
inc(esp);
inc(esp);
inc(esp);
label("func_t_input::kb_on_down(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_input::kb_on_up(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
not(eax,ptr[ebp-2]);
push(eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp+2]);
lea(ecx,ptr[ecx+6]);
call("func_vector_int::at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pop(eax);
and(eax,ptr[ebp-3]);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],eax);
jmp("func_t_input::kb_on_up(int)::ret");
inc(esp);
inc(esp);
inc(esp);
label("func_t_input::kb_on_up(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_input::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
lea(ecx,ptr[ecx+0]);
call("func_vec2i::`ctor()");
mov(ecx,ptr[ebp-1]);
mov(ptr[ecx+2],0);
lea(ecx,ptr[ecx+3]);
call("func_vector_int::`ctor()");
mov(ecx,ptr[ebp-1]);
lea(ecx,ptr[ecx+6]);
call("func_vector_int::`ctor()");
mov(ecx,ptr[ebp-1]);
inc(esp);
label("func_t_input::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_int()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(ptr[ecx+0]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
inc(ptr[ecx+0]);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_t_dev::read_int()::ret");
inc(esp);
inc(esp);
label("func_t_dev::read_int()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_vec2i()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
sub(esp,2);
pushlea(ptr[ebp-5]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
call("func_vec2i(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_t_dev::read_vec2i()::ret");
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
label("func_t_dev::read_vec2i()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_vector_int()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,3);
lea(ecx,ptr[ebp-4]);
call("func_vector_int::`ctor()");
mov(ecx,ptr[ebp-1]);
dec(esp);
pushlea(ptr[ebp-5]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
mov(ebx,ptr[ebp-5]);
mov(ptr[ebp-3],ebx);
inc(esp);
mov(ebx,ptr[ebp-3]);
add(ptr[ecx+0],ebx);
mov(ebx,ptr[ecx+0]);
mov(ptr[ebp-4],ebx);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_t_dev::read_vector_int()::ret");
add(esp,3);
inc(esp);
label("func_t_dev::read_vector_int()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_IA()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,3);
pushlea(ptr[ebp-4]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_vector_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_t_dev::read_IA()::ret");
add(esp,3);
inc(esp);
label("func_t_dev::read_IA()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_VA()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,3);
lea(ecx,ptr[ebp-4]);
call("func_vector_qap_vertex::`ctor()");
mov(ecx,ptr[ebp-1]);
dec(esp);
pushlea(ptr[ebp-5]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
mov(ebx,ptr[ebp-5]);
mov(ptr[ebp-3],ebx);
inc(esp);
push(eax);
mov(eax,ptr[ebp-3]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
mov(ebx,ptr[ecx+0]);
mov(ptr[ebp-4],ebx);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
jmp("func_t_dev::read_VA()::ret");
add(esp,3);
inc(esp);
label("func_t_dev::read_VA()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_geom()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,7);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::`ctor()");
mov(ecx,ptr[ebp-1]);
sub(esp,3);
pushlea(ptr[ebp-11]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_VA()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
add(esp,3);
sub(esp,3);
pushlea(ptr[ebp-11]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_IA()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,3);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_t_dev::read_geom()::ret");
add(esp,7);
inc(esp);
label("func_t_dev::read_geom()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::read_vector_vec2i()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
sub(esp,2);
lea(ecx,ptr[ebp-3]);
call("func_vector_vec2i::`ctor()");
mov(ecx,ptr[ebp-1]);
dec(esp);
pushlea(ptr[ebp-4]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
mov(ecx,ptr[ebp-1]);
add(esp,1);
mov(ebx,ptr[ebp-4]);
mov(ptr[ebp-2],ebx);
inc(esp);
push(eax);
mov(eax,ptr[ebp-2]);
mul(eax,2);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
mov(ebx,ptr[ecx+0]);
mov(ptr[ebp-3],ebx);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_t_dev::read_vector_vec2i()::ret");
add(esp,2);
inc(esp);
label("func_t_dev::read_vector_vec2i()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ecx+0]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
mov(ebx,ptr[ebp-2]);
mov(ptr[ecx+0],ebx);
inc(esp);
mov(edx,ptr[ebp+3]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_t_dev::write(int)::ret");
inc(esp);
label("func_t_dev::write(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(int,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_t_dev::write(int,int,int)::ret");
inc(esp);
label("func_t_dev::write(int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
mov(edx,ptr[ebp+4]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_t_dev::write(vec2i)::ret");
inc(esp);
label("func_t_dev::write(vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(int,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_t_dev::write(int,vec2i)::ret");
inc(esp);
label("func_t_dev::write(int,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(qap_vertex)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+2]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(vec2i)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
mov(edx,ptr[ebp+5]);
push(ptr[ecx+0]);
pop(ptr[edx+0]);
jmp("func_t_dev::write(qap_vertex)::ret");
inc(esp);
label("func_t_dev::write(qap_vertex)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(vector_vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+3]);
mul(eax,2);
mov(ptr[ebp-2],eax);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(0);
lea(ecx,ptr[ebp+2]);
call("func_vector_vec2i::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-4],eax);
dec(esp);
mov(eax,ptr[ecx+0]);
mov(ptr[ebp-5],eax);
dec(esp);
mov(ptr[ebp-6],0);
jmp("for_8011::condition");
label("for_8011::continue");
inc(ptr[ebp-6]);
label("for_8011::condition");
mov(eax,ptr[ebp-6]);
less(eax,ptr[ebp-2]);
jz("for_8011::break",eax);
dec(esp);
dec(esp);
pushlea(ptr[ebp-7]);
push(ptr[ebp-4]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-8]);
push(ptr[ebp-5]);
push(ptr[ebp-7]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(ptr[ebp-5]);
inc(ptr[ebp-4]);
jmp("for_8011::continue");
label("for_8011::break");
inc(esp);
mov(ebx,ptr[ebp-2]);
add(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
mov(edx,ptr[ebp+4]);
mov(ptr[edx+0],0);
jmp("func_t_dev::write(vector_vec2i)::ret");
inc(esp);
label("func_t_dev::write(vector_vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::write(t_out_dev)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+3]);
mul(eax,3);
mov(ptr[ebp-2],eax);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
push(0);
lea(ecx,ptr[ebp+2]);
call("func_vector_qap_vertex::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-4],eax);
dec(esp);
mov(eax,ptr[ecx+0]);
mov(ptr[ebp-5],eax);
dec(esp);
mov(ptr[ebp-6],0);
jmp("for_8012::condition");
label("for_8012::continue");
inc(ptr[ebp-6]);
label("for_8012::condition");
mov(eax,ptr[ebp-6]);
less(eax,ptr[ebp-2]);
jz("for_8012::break",eax);
dec(esp);
dec(esp);
pushlea(ptr[ebp-7]);
push(ptr[ebp-4]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-8]);
push(ptr[ebp-5]);
push(ptr[ebp-7]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(ptr[ebp-5]);
inc(ptr[ebp-4]);
jmp("for_8012::continue");
label("for_8012::break");
inc(esp);
push(eax);
mov(eax,ptr[ebp+3]);
mul(eax,3);
mov(ebx,eax);
pop(eax);
add(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+6]);
mov(ecx,ptr[ebp-1]);
call("func_t_dev::write(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-3]);
push(0);
lea(ecx,ptr[ebp+5]);
call("func_vector_int::addr_at(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
mov(eax,ptr[ebp-3]);
mov(ptr[ebp-2],eax);
inc(esp);
dec(esp);
mov(eax,ptr[ebp+6]);
mov(ptr[ebp-3],eax);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
mod(eax,3);
mov(ebx,0);
eq(ebx,eax);
mov(ptr[ebp-4],ebx);
pushlea(ptr[ebp-5]);
push(ptr[ebp-4]);
call("func_QapAssert(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
inc(esp);
inc(esp);
dec(esp);
mov(eax,ptr[ebp-2]);
mov(ptr[ebp-4],eax);
dec(esp);
mov(eax,ptr[ecx+0]);
mov(ptr[ebp-5],eax);
dec(esp);
mov(ptr[ebp-6],0);
jmp("for_8013::condition");
label("for_8013::continue");
inc(ptr[ebp-6]);
label("for_8013::condition");
mov(eax,ptr[ebp-6]);
less(eax,ptr[ebp-3]);
jz("for_8013::break",eax);
dec(esp);
dec(esp);
pushlea(ptr[ebp-7]);
push(ptr[ebp-4]);
call("func_get_int(int)");
mov(ecx,ptr[ebp-1]);
add(esp,2);
pushlea(ptr[ebp-8]);
push(ptr[ebp-5]);
push(ptr[ebp-7]);
call("func_set_int(int,int)");
mov(ecx,ptr[ebp-1]);
add(esp,3);
inc(esp);
inc(esp);
inc(ptr[ebp-5]);
inc(ptr[ebp-4]);
jmp("for_8013::continue");
label("for_8013::break");
inc(esp);
mov(ebx,ptr[ebp+6]);
add(ptr[ecx+0],ebx);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
mov(edx,ptr[ebp+9]);
mov(ptr[edx+0],0);
jmp("func_t_dev::write(t_out_dev)::ret");
inc(esp);
label("func_t_dev::write(t_out_dev)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_dev::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
inc(esp);
label("func_t_dev::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_mem::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
inc(esp);
label("func_t_mem::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_get_obj_pos(t_input,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
dec(esp);
sub(esp,2);
sub(esp,2);
inv(eax,0);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-5]);
push(ptr[ebp-3]);
push(0);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-7]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
add(esp,2);
add(esp,2);
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-4]);
call("func_g_obj_addr()");
add(esp,1);
mov(eax,ptr[ebp-4]);
mov(ptr[ebp-3],eax);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,2);
mov(ptr[ebp-4],eax);
pushlea(ptr[ebp-5]);
push(ptr[ebp-4]);
call("func_get_int(int)");
add(esp,2);
jz("if_1008::else",ptr[ebp-5]);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,0);
mov(ptr[ebp-6],eax);
pushlea(ptr[ebp-7]);
push(ptr[ebp-6]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-7]);
mov(ptr[ebp-2],ebx);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,1);
mov(ptr[ebp-6],eax);
pushlea(ptr[ebp-7]);
push(ptr[ebp-6]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-7]);
mov(ptr[ebp-1],ebx);
inc(esp);
inc(esp);
jmp("if_1008::end");
label("if_1008::else");
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,2);
mov(ptr[ebp-6],eax);
pushlea(ptr[ebp-7]);
push(ptr[ebp-6]);
push(1);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
label("if_1008::end");
inc(esp);
inc(esp);
dec(esp);
mov(ptr[ebp-4],0);
dec(esp);
mov(ptr[ebp-5],0);
dec(esp);
mov(ptr[ebp-6],0);
dec(esp);
mov(ptr[ebp-7],0);
mov(ptr[ebp-4],37);
mov(ptr[ebp-5],39);
mov(ptr[ebp-6],38);
mov(ptr[ebp-7],40);
dec(esp);
mov(eax,2);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-8],eax);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-4]);
lea(ecx,ptr[ebp+6]);
call("func_vector_int::at(int)");
add(esp,2);
jz("if_1009::end",ptr[ebp-9]);
mov(ebx,ptr[ebp-8]);
sub(ptr[ebp-2],ebx);
jmp("if_1009::end");
label("if_1009::end");
inc(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-5]);
lea(ecx,ptr[ebp+6]);
call("func_vector_int::at(int)");
add(esp,2);
jz("if_1010::end",ptr[ebp-9]);
mov(ebx,ptr[ebp-8]);
add(ptr[ebp-2],ebx);
jmp("if_1010::end");
label("if_1010::end");
inc(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-6]);
lea(ecx,ptr[ebp+6]);
call("func_vector_int::at(int)");
add(esp,2);
jz("if_1011::end",ptr[ebp-9]);
mov(ebx,ptr[ebp-8]);
add(ptr[ebp-1],ebx);
jmp("if_1011::end");
label("if_1011::end");
inc(esp);
dec(esp);
pushlea(ptr[ebp-9]);
push(ptr[ebp-7]);
lea(ecx,ptr[ebp+6]);
call("func_vector_int::at(int)");
add(esp,2);
jz("if_1012::end",ptr[ebp-9]);
mov(ebx,ptr[ebp-8]);
sub(ptr[ebp-1],ebx);
jmp("if_1012::end");
label("if_1012::end");
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,0);
mov(ptr[ebp-9],eax);
pushlea(ptr[ebp-10]);
push(ptr[ebp-9]);
push(ptr[ebp-2]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
add(eax,1);
mov(ptr[ebp-9],eax);
pushlea(ptr[ebp-10]);
push(ptr[ebp-9]);
push(ptr[ebp-1]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(edx,ptr[ebp+12]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_get_obj_pos(t_input,int)::ret");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
add(esp,2);
label("func_get_obj_pos(t_input,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_set_vec2i(int,vec2i)");
push(ebp);
mov(ebp,esp);
dec(esp);
pushlea(ptr[ebp-1]);
push(ptr[ebp+4]);
push(ptr[ebp+2]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+4]);
add(eax,1);
mov(ptr[ebp-1],eax);
pushlea(ptr[ebp-2]);
push(ptr[ebp-1]);
push(ptr[ebp+3]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(edx,ptr[ebp+5]);
mov(ptr[edx+0],0);
jmp("func_set_vec2i(int,vec2i)::ret");
label("func_set_vec2i(int,vec2i)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_get_points(int,int,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-4]);
push(450);
push(50);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-6]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
add(esp,2);
add(esp,2);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-6]);
push(650);
push(150);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-8]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,2);
add(esp,2);
mov(ebx,ptr[ebp+4]);
mov(ptr[ebp-4],ebx);
mov(ebx,ptr[ebp+3]);
mov(ptr[ebp-3],ebx);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-8]);
push(300);
push(500);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-10]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
add(esp,2);
add(esp,2);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-10]);
push(390);
push(550);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-12]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
add(esp,2);
add(esp,2);
sub(esp,2);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::`ctor()");
dec(esp);
pushlea(ptr[ebp-11]);
push(1024);
call("func_alloc(int)");
add(esp,2);
mov(ebx,ptr[ebp-11]);
mov(ptr[ebp-10],ebx);
inc(esp);
mov(ptr[ebp-9],0);
jz("if_1013::end",1);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-12]);
push(0);
push(0);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-11]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
dec(esp);
pushlea(ptr[ebp-11]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
dec(esp);
pushlea(ptr[ebp-11]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
dec(esp);
pushlea(ptr[ebp-11]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
sub(esp,2);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-12]);
push(450);
push(550);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-14]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp+2]);
call("func_mul(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-15]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
add(esp,2);
add(esp,2);
jmp("if_1013::end");
label("if_1013::end");
sub(esp,2);
lea(ecx,ptr[ebp-12]);
call("func_vec2i::`ctor()");
dec(esp);
mov(ptr[ebp-13],0);
jmp("for_8014::condition");
label("for_8014::continue");
inc(ptr[ebp-13]);
label("for_8014::condition");
mov(eax,ptr[ebp-13]);
less(eax,ptr[ebp-9]);
jz("for_8014::break",eax);
mov(eax,ptr[ebp-13]);
neq(eax,2);
jz("if_1014::end",eax);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-15]);
push(ptr[ebp-13]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::at(int)");
add(esp,2);
pushlea(ptr[ebp-17]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
call("func_add(vec2i,vec2i)");
add(esp,5);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
pop(ptr[ebp-12]);
pop(ptr[ebp-11]);
add(esp,2);
add(esp,2);
jmp("if_1014::end");
label("if_1014::end");
jmp("for_8014::continue");
label("for_8014::break");
inc(esp);
sub(esp,2);
pushlea(ptr[ebp-14]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-9]);
call("func_div(vec2i,int)");
add(esp,4);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
pop(ptr[ebp-12]);
pop(ptr[ebp-11]);
add(esp,2);
dec(esp);
mov(ptr[ebp-13],0);
jmp("for_8015::condition");
label("for_8015::continue");
inc(ptr[ebp-13]);
label("for_8015::condition");
mov(eax,ptr[ebp-13]);
less(eax,ptr[ebp-9]);
jz("for_8015::break",eax);
mov(eax,ptr[ebp-13]);
neq(eax,2);
jz("if_1015::end",eax);
dec(esp);
sub(esp,2);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-14]);
push(ptr[ebp-13]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::addr_at(int)");
add(esp,2);
pushlea(ptr[ebp-16]);
push(ptr[ebp-13]);
lea(ecx,ptr[ebp-10]);
call("func_vector_vec2i::at(int)");
add(esp,2);
pushlea(ptr[ebp-18]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-19]);
push(ptr[ebp-14]);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
call("func_set_vec2i(int,vec2i)");
add(esp,4);
inc(esp);
add(esp,2);
add(esp,2);
inc(esp);
jmp("if_1015::end");
label("if_1015::end");
jmp("for_8015::continue");
label("for_8015::break");
inc(esp);
add(esp,2);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_get_points(int,int,int)::ret");
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,2);
label("func_get_points(int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_GenGeomCatmullRom(vector_vec2i,int)");
push(ebp);
mov(ebp,esp);
sub(esp,2);
lea(ecx,ptr[ebp-2]);
call("func_vector_vec2i::`ctor()");
dec(esp);
dec(esp);
mov(eax,1024);
mul(eax,16);
mov(ptr[ebp-3],eax);
pushlea(ptr[ebp-4]);
push(ptr[ebp-3]);
call("func_alloc(int)");
add(esp,2);
mov(ebx,ptr[ebp-4]);
mov(ptr[ebp-2],ebx);
inc(esp);
inc(esp);
mov(ptr[ebp-1],0);
dec(esp);
mov(ptr[ebp-3],0);
jmp("for_8016::condition");
label("for_8016::continue");
inc(ptr[ebp-3]);
label("for_8016::condition");
mov(eax,ptr[ebp-3]);
add(eax,1);
less(eax,ptr[ebp+4]);
jz("for_8016::break",eax);
dec(esp);
pushlea(ptr[ebp-4]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp-3]);
lea(ecx,ptr[ebp-2]);
call("func_vector_vec2i::CatmullRom(vector_vec2i,int)");
add(esp,4);
inc(esp);
jmp("for_8016::continue");
label("for_8016::break");
inc(esp);
sub(esp,7);
dec(esp);
sub(esp,7);
mov(eax,1024);
mul(eax,4);
mov(ptr[ebp-10],eax);
pushlea(ptr[ebp-17]);
push(ptr[ebp-10]);
call("func_new_geom(int)");
add(esp,2);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
pop(ptr[ebp-9]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
add(esp,7);
inc(esp);
dec(esp);
mov(eax,ptr[ebp-1]);
mov(ptr[ebp-10],eax);
dec(esp);
mov(ptr[ebp-11],1);
jmp("for_8017::condition");
label("for_8017::continue");
inc(ptr[ebp-11]);
label("for_8017::condition");
mov(eax,ptr[ebp-11]);
less(eax,ptr[ebp-10]);
jz("for_8017::break",eax);
dec(esp);
sub(esp,2);
dec(esp);
sub(esp,2);
dec(esp);
sub(esp,7);
dec(esp);
mov(eax,ptr[ebp-11]);
sub(eax,1);
mov(ptr[ebp-12],eax);
pushlea(ptr[ebp-14]);
push(ptr[ebp-12]);
lea(ecx,ptr[ebp-2]);
call("func_vector_vec2i::at(int)");
add(esp,2);
mov(eax,ptr[ebp-11]);
sub(eax,0);
mov(ptr[ebp-15],eax);
pushlea(ptr[ebp-17]);
push(ptr[ebp-15]);
lea(ecx,ptr[ebp-2]);
call("func_vector_vec2i::at(int)");
add(esp,2);
mov(eax,ptr[ebp+2]);
mul(eax,2);
mov(ptr[ebp-18],eax);
pushlea(ptr[ebp-25]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
lea(ecx,ptr[ebp-9]);
call("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)");
add(esp,6);
pushlea(ptr[ebp-26]);
push(ptr[ebp-19]);
push(ptr[ebp-20]);
push(ptr[ebp-21]);
push(ptr[ebp-22]);
push(ptr[ebp-23]);
push(ptr[ebp-24]);
push(ptr[ebp-25]);
lea(ecx,ptr[ebp-9]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
add(esp,7);
inc(esp);
add(esp,2);
inc(esp);
add(esp,2);
inc(esp);
jmp("for_8017::continue");
label("for_8017::break");
inc(esp);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_GenGeomCatmullRom(vector_vec2i,int)::ret");
inc(esp);
add(esp,7);
add(esp,2);
label("func_GenGeomCatmullRom(vector_vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_limit255(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-1]);
push(255);
push(ptr[ebp+2]);
call("func_min(int,int)");
add(esp,3);
pushlea(ptr[ebp-2]);
push(0);
push(ptr[ebp-1]);
call("func_max(int,int)");
add(esp,3);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_limit255(int)::ret");
inc(esp);
inc(esp);
label("func_limit255(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_sqrmag(int,int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+3]);
mul(eax,ptr[ebp+3]);
push(eax);
mov(eax,ptr[ebp+2]);
mul(eax,ptr[ebp+2]);
pop(ebx);
add(ebx,eax);
mov(edx,ptr[ebp+4]);
mov(ptr[edx+0],ebx);
jmp("func_sqrmag(int,int)::ret");
label("func_sqrmag(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_sqr(int)");
push(ebp);
mov(ebp,esp);
mov(eax,ptr[ebp+2]);
mul(eax,ptr[ebp+2]);
mov(edx,ptr[ebp+3]);
mov(ptr[edx+0],eax);
jmp("func_sqr(int)::ret");
label("func_sqr(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_mul_color_component(int,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(eax,8);
mul(eax,ptr[ebp+2]);
mov(ptr[ebp-1],eax);
dec(esp);
mov(eax,255);
shl(eax,ptr[ebp-1]);
mov(ptr[ebp-2],eax);
dec(esp);
mov(eax,ptr[ebp+3]);
bwand(eax,ptr[ebp-2]);
mov(ptr[ebp-3],eax);
dec(esp);
dec(esp);
mov(eax,ptr[ebp+4]);
add(eax,1);
push(eax);
mov(eax,ptr[ebp-3]);
shr(eax,ptr[ebp-1]);
add(eax,1);
pop(ebx);
mul(ebx,eax);
sub(ebx,1);
shr(ebx,8);
mov(ptr[ebp-4],ebx);
pushlea(ptr[ebp-5]);
push(ptr[ebp-4]);
call("func_limit255(int)");
add(esp,2);
mov(eax,ptr[ebp-5]);
shl(eax,ptr[ebp-1]);
mov(edx,ptr[ebp+5]);
mov(ptr[edx+0],eax);
jmp("func_mul_color_component(int,int,int)::ret");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_mul_color_component(int,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_mul_color(int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-2]);
push(ptr[ebp+3]);
call("func_limit255(int)");
add(esp,2);
mov(eax,ptr[ebp-2]);
mov(ptr[ebp-1],eax);
inc(esp);
dec(esp);
mov(ptr[ebp-2],0);
dec(esp);
push(eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-1]);
push(ptr[ebp+2]);
push(0);
call("func_mul_color_component(int,int,int)");
add(esp,4);
mov(eax,ptr[ebp-2]);
bwor(eax,ptr[ebp-3]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-2],ebx);
inc(esp);
dec(esp);
push(eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-1]);
push(ptr[ebp+2]);
push(1);
call("func_mul_color_component(int,int,int)");
add(esp,4);
mov(eax,ptr[ebp-2]);
bwor(eax,ptr[ebp-3]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-2],ebx);
inc(esp);
dec(esp);
push(eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-1]);
push(ptr[ebp+2]);
push(2);
call("func_mul_color_component(int,int,int)");
add(esp,4);
mov(eax,ptr[ebp-2]);
bwor(eax,ptr[ebp-3]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-2],ebx);
inc(esp);
mov(edx,ptr[ebp+4]);
push(ptr[ebp-2]);
pop(ptr[edx+0]);
jmp("func_mul_color(int,int)::ret");
inc(esp);
inc(esp);
label("func_mul_color(int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_gen_grid(vec2i,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],16);
sub(esp,7);
dec(esp);
sub(esp,7);
mov(eax,ptr[ebp-1]);
mul(eax,ptr[ebp-1]);
mul(eax,4);
mov(ptr[ebp-9],eax);
pushlea(ptr[ebp-16]);
push(ptr[ebp-9]);
call("func_new_geom(int)");
add(esp,2);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
pop(ptr[ebp-3]);
pop(ptr[ebp-2]);
add(esp,7);
inc(esp);
dec(esp);
mov(eax,1);
mul(eax,ptr[ebp+3]);
mov(ptr[ebp-9],eax);
dec(esp);
mov(eax,ptr[ebp-1]);
div(eax,2);
mov(ptr[ebp-10],eax);
dec(esp);
mov(ptr[ebp-11],0);
jmp("for_8018::condition");
label("for_8018::continue");
inc(ptr[ebp-11]);
label("for_8018::condition");
mov(eax,ptr[ebp-11]);
less(eax,ptr[ebp-1]);
jz("for_8018::break",eax);
dec(esp);
mov(ptr[ebp-12],0);
jmp("for_8019::condition");
label("for_8019::continue");
inc(ptr[ebp-12]);
label("for_8019::condition");
mov(eax,ptr[ebp-12]);
less(eax,ptr[ebp-1]);
jz("for_8019::break",eax);
dec(esp);
mov(eax,ptr[ebp-12]);
mul(eax,255);
div(eax,ptr[ebp-1]);
shl(eax,16);
push(eax);
mov(eax,ptr[ebp-11]);
mul(eax,255);
div(eax,ptr[ebp-1]);
shl(eax,8);
pop(ebx);
add(ebx,eax);
mov(ptr[ebp-13],ebx);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-11]);
sub(eax,ptr[ebp-10]);
mov(ptr[ebp-15],eax);
mov(eax,ptr[ebp-12]);
sub(eax,ptr[ebp-10]);
mov(ptr[ebp-16],eax);
pushlea(ptr[ebp-17]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
call("func_sqrmag(int,int)");
add(esp,3);
pushlea(ptr[ebp-18]);
push(ptr[ebp-17]);
call("func_sqr(int)");
add(esp,2);
mov(eax,ptr[ebp-18]);
mul(eax,255);
push(eax);
mov(eax,ptr[ebp-10]);
mul(eax,ptr[ebp-10]);
mov(ptr[ebp-19],eax);
pushlea(ptr[ebp-20]);
push(ptr[ebp-19]);
call("func_sqr(int)");
add(esp,2);
pop(eax);
div(eax,ptr[ebp-20]);
mov(ebx,255);
sub(ebx,eax);
mov(ptr[ebp-21],ebx);
pushlea(ptr[ebp-22]);
push(ptr[ebp-21]);
call("func_limit255(int)");
add(esp,2);
mov(eax,ptr[ebp-22]);
mov(ptr[ebp-14],eax);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
push(eax);
mov(eax,ptr[ebp-14]);
shl(eax,24);
push(eax);
pushlea(ptr[ebp-15]);
push(ptr[ebp-14]);
push(ptr[ebp+2]);
call("func_mul_color(int,int)");
add(esp,3);
pop(eax);
bwor(eax,ptr[ebp-15]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-2],ebx);
inc(esp);
sub(esp,7);
dec(esp);
dec(esp);
sub(esp,2);
sub(esp,2);
sub(esp,2);
sub(esp,2);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-21]);
push(ptr[ebp-9]);
push(ptr[ebp-9]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::GenGeomQuad(int,int)");
add(esp,3);
mov(eax,ptr[ebp-10]);
mul(eax,ptr[ebp-9]);
mov(ptr[ebp-22],eax);
mov(eax,ptr[ebp-10]);
mul(eax,ptr[ebp-9]);
mov(ptr[ebp-23],eax);
pushlea(ptr[ebp-25]);
push(ptr[ebp-22]);
push(ptr[ebp-23]);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-27]);
push(ptr[ebp+5]);
push(ptr[ebp+4]);
push(ptr[ebp-24]);
push(ptr[ebp-25]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-29]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-31]);
push(ptr[ebp-28]);
push(ptr[ebp-29]);
push(ptr[ebp-9]);
call("func_mul(vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-33]);
push(ptr[ebp-26]);
push(ptr[ebp-27]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
call("func_add(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-34]);
push(ptr[ebp-15]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
push(ptr[ebp-20]);
push(ptr[ebp-21]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
lea(ecx,ptr[ebp-8]);
call("func_t_out_dev::add_wo(t_out_dev,vec2i)");
add(esp,10);
inc(esp);
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,2);
add(esp,2);
inc(esp);
inc(esp);
add(esp,7);
inc(esp);
inc(esp);
jmp("for_8019::continue");
label("for_8019::break");
inc(esp);
jmp("for_8018::continue");
label("for_8018::break");
inc(esp);
mov(edx,ptr[ebp+6]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_gen_grid(vec2i,int,int)::ret");
inc(esp);
inc(esp);
add(esp,7);
inc(esp);
label("func_gen_grid(vec2i,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_get_grid(vec2i,int,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::`ctor()");
dec(esp);
dec(esp);
pushlea(ptr[ebp-2]);
call("func_g_mem_addr()");
add(esp,1);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-3]);
mov(ptr[ebp-1],ebx);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
add(esp,1);
not(eax,ptr[ebp-2]);
jz("if_1016::end",eax);
dec(esp);
mov(eax,ptr[ebp-1]);
mov(ptr[ebp-3],eax);
sub(esp,7);
dec(esp);
pushlea(ptr[ebp-10]);
push(ptr[ebp+5]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
call("func_gen_grid(vec2i,int,int)");
add(esp,5);
pushlea(ptr[ebp-11]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::write(t_out_dev)");
add(esp,8);
inc(esp);
add(esp,7);
dec(esp);
mov(eax,ptr[ebp-1]);
sub(eax,ptr[ebp-3]);
mov(ptr[ebp-4],eax);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
sub(eax,1);
mov(ptr[ebp-5],eax);
pushlea(ptr[ebp-6]);
push(ptr[ebp-5]);
push(ptr[ebp-4]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(ebx,ptr[ebp-3]);
mov(ptr[ebp-1],ebx);
inc(esp);
inc(esp);
jmp("if_1016::end");
label("if_1016::end");
inc(esp);
sub(esp,7);
pushlea(ptr[ebp-8]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::read_geom()");
add(esp,1);
mov(edx,ptr[ebp+6]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
pop(ptr[edx+2]);
pop(ptr[edx+3]);
pop(ptr[edx+4]);
pop(ptr[edx+5]);
pop(ptr[edx+6]);
jmp("func_get_grid(vec2i,int,int)::ret");
add(esp,7);
inc(esp);
label("func_get_grid(vec2i,int,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_get_arr(vec2i,int)");
push(ebp);
mov(ebp,esp);
dec(esp);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::`ctor()");
dec(esp);
dec(esp);
pushlea(ptr[ebp-2]);
call("func_g_arr_addr()");
add(esp,1);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-3]);
mov(ptr[ebp-1],ebx);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-2]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::read_int()");
add(esp,1);
not(eax,ptr[ebp-2]);
jz("if_1017::end",eax);
dec(esp);
mov(eax,ptr[ebp-1]);
mov(ptr[ebp-3],eax);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-5]);
push(ptr[ebp+3]);
push(ptr[ebp+4]);
push(ptr[ebp+2]);
call("func_get_points(int,int,int)");
add(esp,4);
pushlea(ptr[ebp-6]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::write(vector_vec2i)");
add(esp,3);
inc(esp);
add(esp,2);
dec(esp);
mov(eax,ptr[ebp-1]);
sub(eax,ptr[ebp-3]);
mov(ptr[ebp-4],eax);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-3]);
sub(eax,1);
mov(ptr[ebp-5],eax);
pushlea(ptr[ebp-6]);
push(ptr[ebp-5]);
push(ptr[ebp-4]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(ebx,ptr[ebp-3]);
mov(ptr[ebp-1],ebx);
inc(esp);
inc(esp);
jmp("if_1017::end");
label("if_1017::end");
inc(esp);
sub(esp,2);
pushlea(ptr[ebp-3]);
lea(ecx,ptr[ebp-1]);
call("func_t_dev::read_vector_vec2i()");
add(esp,1);
mov(edx,ptr[ebp+5]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_get_arr(vec2i,int)::ret");
add(esp,2);
inc(esp);
label("func_get_arr(vec2i,int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_app::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
inv(eax,1);
mov(ptr[ecx+0],eax);
lea(ecx,ptr[ecx+1]);
call("func_vec2i::`ctor()");
mov(ecx,ptr[ebp-1]);
lea(ecx,ptr[ecx+3]);
call("func_vector_vec2i::`ctor()");
mov(ecx,ptr[ebp-1]);
lea(ecx,ptr[ecx+5]);
call("func_t_out_dev::`ctor()");
mov(ecx,ptr[ebp-1]);
inc(esp);
label("func_t_app::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_str::test_O2()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
mov(ptr[ebp-2],1024);
dec(esp);
mov(ptr[ebp-3],0);
dec(esp);
mov(eax,ptr[ebp-2]);
mul(eax,2);
mov(ptr[ebp-4],eax);
dec(esp);
mov(ptr[ebp-5],0);
jmp("for_8020::condition");
label("for_8020::continue");
inc(ptr[ebp-5]);
label("for_8020::condition");
mov(eax,ptr[ebp-5]);
less(eax,ptr[ebp-4]);
jz("for_8020::break",eax);
dec(esp);
mov(ptr[ebp-6],0);
jmp("for_8021::condition");
label("for_8021::continue");
inc(ptr[ebp-6]);
label("for_8021::condition");
mov(eax,ptr[ebp-6]);
less(eax,ptr[ebp-4]);
jz("for_8021::break",eax);
mov(eax,ptr[ebp-5]);
mul(eax,ptr[ebp-5]);
push(eax);
mov(eax,ptr[ebp-6]);
mul(eax,ptr[ebp-6]);
pop(ebx);
add(ebx,eax);
push(ebx);
mov(eax,ptr[ebp-2]);
mul(eax,ptr[ebp-2]);
pop(ebx);
more(ebx,eax);
jz("if_1018::end",ebx);
jmp("for_8021::continue");
jmp("if_1018::end");
label("if_1018::end");
inc(ptr[ebp-3]);
jmp("for_8021::continue");
label("for_8021::break");
inc(esp);
jmp("for_8020::continue");
label("for_8020::break");
inc(esp);
mov(edx,ptr[ebp+2]);
push(ptr[ebp-3]);
pop(ptr[edx+0]);
jmp("func_t_str::test_O2()::ret");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_t_str::test_O2()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_str::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
mov(ptr[ecx+1],0);
inc(esp);
label("func_t_str::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_cr_test(t_input)");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],257);
dec(esp);
mov(ptr[ebp-2],258);
dec(esp);
mov(ptr[ebp-3],259);
dec(esp);
mov(ptr[ebp-4],4);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-8]);
push(ptr[ebp+10]);
push(ptr[ebp+9]);
push(ptr[ebp+8]);
push(ptr[ebp+7]);
push(ptr[ebp+6]);
push(ptr[ebp+5]);
push(ptr[ebp+4]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
push(ptr[ebp-4]);
call("func_get_obj_pos(t_input,int)");
add(esp,11);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
add(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-10]);
push(ptr[ebp+3]);
push(ptr[ebp+2]);
push(ptr[ebp-4]);
call("func_mul(vec2i,int)");
add(esp,4);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
pop(ptr[ebp-8]);
pop(ptr[ebp-7]);
add(esp,2);
sub(esp,7);
dec(esp);
sub(esp,7);
mov(eax,1024);
mul(eax,16);
mov(ptr[ebp-16],eax);
pushlea(ptr[ebp-23]);
push(ptr[ebp-16]);
call("func_new_geom(int)");
add(esp,2);
push(ptr[ebp-17]);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
push(ptr[ebp-20]);
push(ptr[ebp-21]);
push(ptr[ebp-22]);
push(ptr[ebp-23]);
pop(ptr[ebp-15]);
pop(ptr[ebp-14]);
pop(ptr[ebp-13]);
pop(ptr[ebp-12]);
pop(ptr[ebp-11]);
pop(ptr[ebp-10]);
pop(ptr[ebp-9]);
add(esp,7);
inc(esp);
mov(eax,255);
shl(eax,24);
push(eax);
mov(eax,128);
shl(eax,8);
pop(ebx);
add(ebx,eax);
mov(ptr[ebp-9],ebx);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-19]);
push(0);
push(0);
call("func_vec2i(int,int)");
add(esp,3);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
pop(ptr[ebp-17]);
pop(ptr[ebp-16]);
add(esp,2);
jz("if_1019::end",0);
sub(esp,7);
dec(esp);
dec(esp);
sub(esp,7);
mov(eax,30);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-25],eax);
mov(eax,30);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-26],eax);
pushlea(ptr[ebp-33]);
push(ptr[ebp-8]);
push(ptr[ebp-7]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
add(esp,5);
push(ptr[ebp-27]);
push(ptr[ebp-28]);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
pop(ptr[ebp-24]);
pop(ptr[ebp-23]);
pop(ptr[ebp-22]);
pop(ptr[ebp-21]);
pop(ptr[ebp-20]);
pop(ptr[ebp-19]);
pop(ptr[ebp-18]);
add(esp,7);
inc(esp);
inc(esp);
mov(eax,255);
shl(eax,24);
push(eax);
mov(eax,128);
shl(eax,8);
pop(ebx);
add(ebx,eax);
push(ebx);
mov(eax,255);
shl(eax,16);
pop(ebx);
add(ebx,eax);
mov(ptr[ebp-9],ebx);
sub(esp,7);
dec(esp);
dec(esp);
dec(esp);
sub(esp,7);
mov(eax,64);
mul(eax,ptr[ebp-4]);
mov(ebx,ptr[ebp-7]);
sub(ebx,eax);
mov(ptr[ebp-32],ebx);
mov(eax,100);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-33],eax);
mov(eax,10);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-34],eax);
pushlea(ptr[ebp-41]);
push(ptr[ebp-8]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
push(ptr[ebp-34]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
add(esp,5);
push(ptr[ebp-35]);
push(ptr[ebp-36]);
push(ptr[ebp-37]);
push(ptr[ebp-38]);
push(ptr[ebp-39]);
push(ptr[ebp-40]);
push(ptr[ebp-41]);
pop(ptr[ebp-31]);
pop(ptr[ebp-30]);
pop(ptr[ebp-29]);
pop(ptr[ebp-28]);
pop(ptr[ebp-27]);
pop(ptr[ebp-26]);
pop(ptr[ebp-25]);
add(esp,7);
inc(esp);
inc(esp);
inc(esp);
sub(esp,7);
dec(esp);
dec(esp);
dec(esp);
sub(esp,7);
mov(eax,200);
mul(eax,ptr[ebp-4]);
add(eax,ptr[ebp-8]);
mov(ptr[ebp-39],eax);
mov(eax,10);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-40],eax);
mov(eax,60);
mul(eax,ptr[ebp-4]);
mov(ptr[ebp-41],eax);
pushlea(ptr[ebp-48]);
push(ptr[ebp-39]);
push(ptr[ebp-7]);
push(ptr[ebp-40]);
push(ptr[ebp-41]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::GenGeomQuad(int,int,int,int)");
add(esp,5);
push(ptr[ebp-42]);
push(ptr[ebp-43]);
push(ptr[ebp-44]);
push(ptr[ebp-45]);
push(ptr[ebp-46]);
push(ptr[ebp-47]);
push(ptr[ebp-48]);
pop(ptr[ebp-38]);
pop(ptr[ebp-37]);
pop(ptr[ebp-36]);
pop(ptr[ebp-35]);
pop(ptr[ebp-34]);
pop(ptr[ebp-33]);
pop(ptr[ebp-32]);
add(esp,7);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-39]);
push(ptr[ebp-18]);
push(ptr[ebp-19]);
push(ptr[ebp-20]);
push(ptr[ebp-21]);
push(ptr[ebp-22]);
push(ptr[ebp-23]);
push(ptr[ebp-24]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
dec(esp);
pushlea(ptr[ebp-39]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
push(ptr[ebp-27]);
push(ptr[ebp-28]);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
dec(esp);
pushlea(ptr[ebp-39]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
push(ptr[ebp-34]);
push(ptr[ebp-35]);
push(ptr[ebp-36]);
push(ptr[ebp-37]);
push(ptr[ebp-38]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
sub(esp,7);
dec(esp);
pushlea(ptr[ebp-45]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-16]);
push(ptr[ebp-17]);
push(ptr[ebp-4]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::GenGeomLine(vec2i,vec2i,int)");
add(esp,6);
pushlea(ptr[ebp-46]);
push(ptr[ebp-39]);
push(ptr[ebp-40]);
push(ptr[ebp-41]);
push(ptr[ebp-42]);
push(ptr[ebp-43]);
push(ptr[ebp-44]);
push(ptr[ebp-45]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
add(esp,7);
add(esp,7);
add(esp,7);
add(esp,7);
jmp("if_1019::end");
label("if_1019::end");
sub(esp,7);
sub(esp,2);
sub(esp,7);
pushlea(ptr[ebp-26]);
push(0);
push(0);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-33]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
push(ptr[ebp-4]);
push(-16711936);
call("func_get_grid(vec2i,int,int)");
add(esp,5);
push(ptr[ebp-27]);
push(ptr[ebp-28]);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
pop(ptr[ebp-24]);
pop(ptr[ebp-23]);
pop(ptr[ebp-22]);
pop(ptr[ebp-21]);
pop(ptr[ebp-20]);
pop(ptr[ebp-19]);
pop(ptr[ebp-18]);
add(esp,7);
add(esp,2);
sub(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-28]);
push(0);
push(0);
call("func_vec2i(int,int)");
add(esp,3);
pushlea(ptr[ebp-30]);
push(ptr[ebp-27]);
push(ptr[ebp-28]);
push(ptr[ebp-4]);
call("func_get_arr(vec2i,int)");
add(esp,4);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
pop(ptr[ebp-26]);
pop(ptr[ebp-25]);
add(esp,2);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-27]);
push(82);
lea(ecx,ptr[ebp+2]);
call("func_t_input::kb_on_down(int)");
add(esp,2);
jz("if_1020::end",ptr[ebp-27]);
dec(esp);
pushlea(ptr[ebp-28]);
push(0);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::addr_at(int)");
add(esp,2);
mov(ebx,ptr[ebp-28]);
mov(ptr[ebp-26],ebx);
inc(esp);
mov(ptr[ebp-25],0);
dec(esp);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::`ctor()");
dec(esp);
dec(esp);
pushlea(ptr[ebp-29]);
call("func_g_arr_addr()");
add(esp,1);
pushlea(ptr[ebp-30]);
push(ptr[ebp-29]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-30]);
mov(ptr[ebp-28],ebx);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-29]);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::read_int()");
add(esp,1);
inc(esp);
jz("if_1021::end",1);
dec(esp);
mov(eax,ptr[ebp-28]);
mov(ptr[ebp-29],eax);
dec(esp);
pushlea(ptr[ebp-30]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::write(vector_vec2i)");
add(esp,3);
inc(esp);
dec(esp);
mov(eax,ptr[ebp-28]);
sub(eax,ptr[ebp-29]);
mov(ptr[ebp-30],eax);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-29]);
sub(eax,1);
mov(ptr[ebp-31],eax);
pushlea(ptr[ebp-32]);
push(ptr[ebp-31]);
push(ptr[ebp-30]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(ebx,ptr[ebp-29]);
mov(ptr[ebp-28],ebx);
inc(esp);
inc(esp);
jmp("if_1021::end");
label("if_1021::end");
jmp("if_1020::end");
inc(esp);
label("if_1020::end");
inc(esp);
dec(esp);
pushlea(ptr[ebp-27]);
push(ptr[ebp-2]);
lea(ecx,ptr[ebp+2]);
call("func_t_input::kb_on_down(int)");
add(esp,2);
jz("if_1022::end",ptr[ebp-27]);
dec(esp);
pushlea(ptr[ebp-28]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::add(vec2i)");
add(esp,3);
inc(esp);
dec(esp);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::`ctor()");
dec(esp);
dec(esp);
pushlea(ptr[ebp-29]);
call("func_g_arr_addr()");
add(esp,1);
pushlea(ptr[ebp-30]);
push(ptr[ebp-29]);
call("func_get_int(int)");
add(esp,2);
mov(ebx,ptr[ebp-30]);
mov(ptr[ebp-28],ebx);
inc(esp);
inc(esp);
dec(esp);
pushlea(ptr[ebp-29]);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::read_int()");
add(esp,1);
inc(esp);
jz("if_1023::end",1);
dec(esp);
mov(eax,ptr[ebp-28]);
mov(ptr[ebp-29],eax);
dec(esp);
pushlea(ptr[ebp-30]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
lea(ecx,ptr[ebp-28]);
call("func_t_dev::write(vector_vec2i)");
add(esp,3);
inc(esp);
dec(esp);
mov(eax,ptr[ebp-28]);
sub(eax,ptr[ebp-29]);
mov(ptr[ebp-30],eax);
dec(esp);
dec(esp);
mov(eax,ptr[ebp-29]);
sub(eax,1);
mov(ptr[ebp-31],eax);
pushlea(ptr[ebp-32]);
push(ptr[ebp-31]);
push(ptr[ebp-30]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
mov(ebx,ptr[ebp-29]);
mov(ptr[ebp-28],ebx);
inc(esp);
inc(esp);
jmp("if_1023::end");
label("if_1023::end");
jmp("if_1022::end");
inc(esp);
label("if_1022::end");
inc(esp);
dec(esp);
pushlea(ptr[ebp-27]);
push(ptr[ebp-1]);
lea(ecx,ptr[ebp+5]);
call("func_vector_int::at(int)");
add(esp,2);
jz("if_1024::end",ptr[ebp-27]);
dec(esp);
mov(ptr[ebp-28],0);
dec(esp);
mov(ptr[ebp-29],0);
jmp("for_8022::condition");
label("for_8022::continue");
inc(ptr[ebp-29]);
label("for_8022::condition");
mov(eax,ptr[ebp-29]);
less(eax,ptr[ebp-25]);
jz("for_8022::break",eax);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-33]);
push(ptr[ebp-28]);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::at(int)");
add(esp,2);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
pop(ptr[ebp-31]);
pop(ptr[ebp-30]);
add(esp,2);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-35]);
push(ptr[ebp-29]);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::at(int)");
add(esp,2);
push(ptr[ebp-34]);
push(ptr[ebp-35]);
pop(ptr[ebp-33]);
pop(ptr[ebp-32]);
add(esp,2);
dec(esp);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-36]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-37]);
push(ptr[ebp-35]);
push(ptr[ebp-36]);
call("func_hypot(vec2i)");
add(esp,3);
mov(eax,ptr[ebp-37]);
mov(ptr[ebp-34],eax);
inc(esp);
add(esp,2);
dec(esp);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-37]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
call("func_sub(vec2i,vec2i)");
add(esp,5);
pushlea(ptr[ebp-38]);
push(ptr[ebp-36]);
push(ptr[ebp-37]);
call("func_hypot(vec2i)");
add(esp,3);
mov(eax,ptr[ebp-38]);
mov(ptr[ebp-35],eax);
inc(esp);
add(esp,2);
mov(eax,ptr[ebp-35]);
less(eax,ptr[ebp-34]);
jz("if_1025::end",eax);
mov(ebx,ptr[ebp-29]);
mov(ptr[ebp-28],ebx);
jmp("if_1025::end");
label("if_1025::end");
inc(esp);
inc(esp);
add(esp,2);
add(esp,2);
jmp("for_8022::continue");
label("for_8022::break");
inc(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-29]);
push(ptr[ebp-28]);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::addr_at(int)");
add(esp,2);
pushlea(ptr[ebp-30]);
push(ptr[ebp-29]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
call("func_set_vec2i(int,vec2i)");
add(esp,4);
inc(esp);
inc(esp);
inc(esp);
jmp("if_1024::end");
label("if_1024::end");
inc(esp);
sub(esp,7);
dec(esp);
pushlea(ptr[ebp-33]);
push(ptr[ebp-25]);
push(ptr[ebp-26]);
push(ptr[ebp-4]);
call("func_GenGeomCatmullRom(vector_vec2i,int)");
add(esp,4);
pushlea(ptr[ebp-34]);
push(ptr[ebp-27]);
push(ptr[ebp-28]);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
push(ptr[ebp-31]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add(t_out_dev)");
add(esp,8);
inc(esp);
add(esp,7);
dec(esp);
mov(ptr[ebp-27],0);
mov(ptr[ebp-27],16);
jz("if_1026::end",0);
dec(esp);
mov(eax,128);
mul(eax,1024);
mul(eax,1024);
mov(ptr[ebp-28],eax);
dec(esp);
mov(ptr[ebp-29],31456);
dec(esp);
mov(eax,1024);
mul(eax,1024);
mov(ptr[ebp-30],eax);
dec(esp);
dec(esp);
pushlea(ptr[ebp-32]);
push(ptr[ebp-30]);
call("func_alloc(int)");
add(esp,2);
mov(eax,ptr[ebp-32]);
mov(ptr[ebp-31],eax);
inc(esp);
mov(ebx,ptr[ebp-31]);
add(ptr[ebp-30],ebx);
dec(esp);
mov(ptr[ebp-32],987654321);
dec(esp);
mov(eax,ptr[ebp-31]);
mov(ptr[ebp-33],eax);
jmp("for_8023::condition");
label("for_8023::continue");
inc(ptr[ebp-33]);
label("for_8023::condition");
mov(eax,ptr[ebp-33]);
less(eax,ptr[ebp-30]);
jz("for_8023::break",eax);
dec(esp);
pushlea(ptr[ebp-34]);
push(ptr[ebp-33]);
push(ptr[ebp-32]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
jmp("for_8023::continue");
label("for_8023::break");
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
jmp("if_1026::end");
label("if_1026::end");
dec(esp);
dec(esp);
pushlea(ptr[ebp-29]);
push(ptr[ebp-27]);
lea(ecx,ptr[ebp+5]);
call("func_vector_int::at(int)");
add(esp,2);
mov(eax,ptr[ebp-29]);
mov(ptr[ebp-28],eax);
inc(esp);
dec(esp);
mov(ptr[ebp-29],4);
dec(esp);
mov(ptr[ebp-30],0);
jmp("for_8024::condition");
label("for_8024::continue");
inc(ptr[ebp-30]);
label("for_8024::condition");
mov(eax,ptr[ebp-30]);
less(eax,ptr[ebp-25]);
jz("for_8024::break",eax);
sub(esp,7);
sub(esp,2);
dec(esp);
sub(esp,7);
pushlea(ptr[ebp-39]);
push(0);
push(0);
call("func_vec2i(int,int)");
add(esp,3);
mov(eax,4351);
div(eax,ptr[ebp-29]);
mul(eax,ptr[ebp-30]);
mov(ebx,-16777216);
add(ebx,eax);
mov(ptr[ebp-40],ebx);
pushlea(ptr[ebp-47]);
push(ptr[ebp-38]);
push(ptr[ebp-39]);
push(ptr[ebp-4]);
push(ptr[ebp-40]);
call("func_gen_grid(vec2i,int,int)");
add(esp,5);
push(ptr[ebp-41]);
push(ptr[ebp-42]);
push(ptr[ebp-43]);
push(ptr[ebp-44]);
push(ptr[ebp-45]);
push(ptr[ebp-46]);
push(ptr[ebp-47]);
pop(ptr[ebp-37]);
pop(ptr[ebp-36]);
pop(ptr[ebp-35]);
pop(ptr[ebp-34]);
pop(ptr[ebp-33]);
pop(ptr[ebp-32]);
pop(ptr[ebp-31]);
add(esp,7);
inc(esp);
add(esp,2);
sub(esp,2);
dec(esp);
pushlea(ptr[ebp-39]);
push(ptr[ebp-30]);
lea(ecx,ptr[ebp-26]);
call("func_vector_vec2i::at(int)");
add(esp,2);
pushlea(ptr[ebp-40]);
push(ptr[ebp-31]);
push(ptr[ebp-32]);
push(ptr[ebp-33]);
push(ptr[ebp-34]);
push(ptr[ebp-35]);
push(ptr[ebp-36]);
push(ptr[ebp-37]);
push(ptr[ebp-38]);
push(ptr[ebp-39]);
lea(ecx,ptr[ebp-15]);
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)");
add(esp,10);
inc(esp);
add(esp,2);
add(esp,7);
jmp("for_8024::continue");
label("for_8024::break");
inc(esp);
inc(esp);
sub(esp,2);
lea(ecx,ptr[ebp-30]);
call("func_t_mem::`ctor()");
dec(esp);
dec(esp);
mov(eax,1024);
mul(eax,1024);
mov(ptr[ebp-31],eax);
pushlea(ptr[ebp-32]);
push(ptr[ebp-31]);
call("func_alloc(int)");
add(esp,2);
mov(ebx,ptr[ebp-32]);
mov(ptr[ebp-30],ebx);
inc(esp);
inc(esp);
dec(esp);
lea(ecx,ptr[ebp-31]);
call("func_t_dev::`ctor()");
mov(ebx,ptr[ebp-30]);
mov(ptr[ebp-31],ebx);
dec(esp);
pushlea(ptr[ebp-32]);
push(ptr[ebp-9]);
push(ptr[ebp-10]);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
push(ptr[ebp-15]);
lea(ecx,ptr[ebp-31]);
call("func_t_dev::write(t_out_dev)");
add(esp,8);
inc(esp);
push(eax);
mov(eax,ptr[ebp-31]);
sub(eax,ptr[ebp-30]);
mov(ebx,eax);
pop(eax);
mov(ptr[ebp-29],ebx);
mov(edx,ptr[ebp+11]);
push(ptr[ebp-29]);
push(ptr[ebp-30]);
pop(ptr[edx+0]);
pop(ptr[edx+1]);
jmp("func_cr_test(t_input)::ret");
inc(esp);
add(esp,2);
inc(esp);
inc(esp);
add(esp,2);
add(esp,7);
add(esp,2);
add(esp,7);
add(esp,2);
add(esp,2);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
label("func_cr_test(t_input)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_ctors_test::ok()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
dec(esp);
mov(ptr[ebp-2],1);
inc(esp);
inc(esp);
label("func_t_ctors_test::ok()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_t_ctors_test::`ctor()");
push(ebp);
mov(ebp,esp);
dec(esp);
mov(ptr[ebp-1],ecx);
mov(ptr[ecx+0],0);
inc(esp);
label("func_t_ctors_test::`ctor()::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("func_main(int)");
push(ebp);
mov(ebp,esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-1]);
call("func_g_ptr_addr()");
add(esp,1);
pushlea(ptr[ebp-2]);
push(ptr[ebp-1]);
push(0);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-1]);
call("func_g_mem_addr()");
add(esp,1);
mov(eax,1024);
mul(eax,512);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_alloc(int)");
add(esp,2);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-3]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
dec(esp);
dec(esp);
dec(esp);
dec(esp);
pushlea(ptr[ebp-1]);
call("func_g_arr_addr()");
add(esp,1);
mov(eax,1024);
mul(eax,16);
mov(ptr[ebp-2],eax);
pushlea(ptr[ebp-3]);
push(ptr[ebp-2]);
call("func_alloc(int)");
add(esp,2);
pushlea(ptr[ebp-4]);
push(ptr[ebp-1]);
push(ptr[ebp-3]);
call("func_set_int(int,int)");
add(esp,3);
inc(esp);
inc(esp);
inc(esp);
inc(esp);
sub(esp,9);
lea(ecx,ptr[ebp-9]);
call("func_t_input::`ctor()");
dec(esp);
lea(ecx,ptr[ebp-10]);
call("func_t_dev::`ctor()");
mov(ebx,ptr[ebp+2]);
mov(ptr[ebp-10],ebx);
sub(esp,2);
pushlea(ptr[ebp-12]);
lea(ecx,ptr[ebp-10]);
call("func_t_dev::read_vec2i()");
add(esp,1);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
pop(ptr[ebp-9]);
pop(ptr[ebp-8]);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-11]);
lea(ecx,ptr[ebp-10]);
call("func_t_dev::read_int()");
add(esp,1);
mov(ebx,ptr[ebp-11]);
mov(ptr[ebp-7],ebx);
inc(esp);
sub(esp,3);
pushlea(ptr[ebp-13]);
lea(ecx,ptr[ebp-10]);
call("func_t_dev::read_vector_int()");
add(esp,1);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
pop(ptr[ebp-6]);
pop(ptr[ebp-5]);
pop(ptr[ebp-4]);
add(esp,3);
sub(esp,3);
pushlea(ptr[ebp-13]);
lea(ecx,ptr[ebp-10]);
call("func_t_dev::read_vector_int()");
add(esp,1);
push(ptr[ebp-11]);
push(ptr[ebp-12]);
push(ptr[ebp-13]);
pop(ptr[ebp-3]);
pop(ptr[ebp-2]);
pop(ptr[ebp-1]);
add(esp,3);
sub(esp,2);
sub(esp,2);
pushlea(ptr[ebp-14]);
push(ptr[ebp-1]);
push(ptr[ebp-2]);
push(ptr[ebp-3]);
push(ptr[ebp-4]);
push(ptr[ebp-5]);
push(ptr[ebp-6]);
push(ptr[ebp-7]);
push(ptr[ebp-8]);
push(ptr[ebp-9]);
call("func_cr_test(t_input)");
add(esp,10);
push(ptr[ebp-13]);
push(ptr[ebp-14]);
pop(ptr[ebp-12]);
pop(ptr[ebp-11]);
add(esp,2);
dec(esp);
pushlea(ptr[ebp-13]);
push(ptr[ebp-11]);
call("func_setebx(int)");
add(esp,2);
inc(esp);
mov(ecx,1);
mov(edx,ptr[ebp+3]);
push(ptr[ebp-12]);
pop(ptr[edx+0]);
jmp("func_main(int)::ret");
add(esp,2);
inc(esp);
add(esp,9);
label("func_main(int)::ret");
mov(esp,ebp);
pop(ebp);
ret();
label("begin");
dec(esp);
pushlea(ptr[ebp-1]);
push(ecx);
call("func_main(int)");
add(esp,2);
mov(eax,ptr[ebp-1]);
inc(esp);
mov(err,1);