jmp("begin")
label("func_g_ptr_addr()")  //1
push(ebp)
mov(ebp,esp)
mov(eax,1024)
push(eax)
mov(eax,64)
add(eax,7)
mov(ebx,eax)
pop(eax)
mul(eax,ebx)
mov(edx,ptr[ebp+2])
mov(ptr[edx+0],eax)
jmp("func_g_ptr_addr()::ret")
label("func_g_ptr_addr()::ret")  //14
mov(esp,ebp)
pop(ebp)
ret()
label("func_alloc(int)")  //18
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-2])
call("func_g_ptr_addr()")
add(esp,1)
mov(eax,ptr[ebp-2])
mov(ptr[ebp-1],eax)
inc(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ebp-1])
call("func_get_int(int)")
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
not(eax,ptr[ebp-2])
jz("if_1000::end",eax)
dec(esp)
mov(eax,1024)
mul(eax,128)
mov(ptr[ebp-3],eax)
mov(ebx,ptr[ebp-3])
mov(ptr[ebp-2],ebx)
inc(esp)
jmp("if_1000::end")
label("if_1000::end")  //48
dec(esp)
dec(esp)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp+2])
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-3])
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_alloc(int)::ret")
inc(esp)
inc(esp)
label("func_alloc(int)::ret")  //67
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i::mag()")  //71
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ecx+1])
call("func_hypot(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vec2i::mag()::ret")
inc(esp)
inc(esp)
label("func_vec2i::mag()::ret")  //89
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i::`ctor()")  //93
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
inc(esp)
label("func_vec2i::`ctor()::ret")  //101
mov(esp,ebp)
pop(ebp)
ret()
label("func_vec2i(int,int)")  //105
push(ebp)
mov(ebp,esp)
sub(esp,2)
lea(ecx,ptr[ebp-2])
call("func_vec2i::`ctor()")
mov(ebx,ptr[ebp+3])
mov(ptr[ebp-2],ebx)
mov(ebx,ptr[ebp+2])
mov(ptr[ebp-1],ebx)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
push(ptr[ebp-2])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_vec2i(int,int)::ret")
add(esp,2)
label("func_vec2i(int,int)::ret")  //122
mov(esp,ebp)
pop(ebp)
ret()
label("func_add(int,int)")  //126
push(ebp)
mov(ebp,esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_set_int(int,int)")
add(esp,3)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_add(int,int)::ret")
inc(esp)
label("func_add(int,int)::ret")  //140
mov(esp,ebp)
pop(ebp)
ret()
label("func_hypot(vec2i)")  //144
push(ebp)
mov(ebp,esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+2])
push(ptr[ebp+3])
call("func_hypot(int,int)")
add(esp,3)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_hypot(vec2i)::ret")
inc(esp)
label("func_hypot(vec2i)::ret")  //158
mov(esp,ebp)
pop(ebp)
ret()
label("func_sub(vec2i,vec2i)")  //162
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp+3])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+6])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_sub(vec2i,vec2i)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_sub(vec2i,vec2i)::ret")  //188
mov(esp,ebp)
pop(ebp)
ret()
label("func_add(vec2i,vec2i)")  //192
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp+3])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+6])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_add(vec2i,vec2i)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_add(vec2i,vec2i)::ret")  //218
mov(esp,ebp)
pop(ebp)
ret()
label("func_mul(vec2i,int)")  //222
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+3])
mul(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+4])
mul(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_mul(vec2i,int)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_mul(vec2i,int)::ret")  //248
mov(esp,ebp)
pop(ebp)
ret()
label("func_div(vec2i,int)")  //252
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
sub(esp,2)
mov(eax,ptr[ebp+3])
div(eax,ptr[ebp+2])
mov(ptr[ebp-1],eax)
mov(eax,ptr[ebp+4])
div(eax,ptr[ebp+2])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-1])
push(ptr[ebp-2])
call("func_vec2i(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-3])
push(ptr[ebp-4])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_div(vec2i,int)::ret")
add(esp,2)
inc(esp)
inc(esp)
label("func_div(vec2i,int)::ret")  //278
mov(esp,ebp)
pop(ebp)
ret()
label("func_get_int(int)")  //282
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],0)
mov(eax,ptr[ebp+2])
mov(ptr[ebp-1],ptr[eax])
mov(edx,ptr[ebp+3])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_get_int(int)::ret")
inc(esp)
label("func_get_int(int)::ret")  //294
mov(esp,ebp)
pop(ebp)
ret()
label("func_set_int(int,int)")  //298
push(ebp)
mov(ebp,esp)
push(ebx)
mov(eax,ptr[ebp+3])
mov(ebx,ptr[ebp+2])
mov(ptr[eax],ebx)
pop(ebx)
mov(eax,ptr[ebp+3])
add(eax,1)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],eax)
jmp("func_set_int(int,int)::ret")
label("func_set_int(int,int)::ret")  //311
mov(esp,ebp)
pop(ebp)
ret()
label("func_setebx(int)")  //315
push(ebp)
mov(ebp,esp)
mov(ebx,ptr[ebp+2])
mov(edx,ptr[ebp+3])
mov(ptr[edx+0],0)
jmp("func_setebx(int)::ret")
label("func_setebx(int)::ret")  //322
mov(esp,ebp)
pop(ebp)
ret()
label("func_hypot(int,int)")  //326
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],0)
mov(eax,ptr[ebp+3])
mov(ebx,ptr[ebp+2])
hypot(eax,ebx)
mov(ptr[ebp-1],eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp-1])
pop(ptr[edx+0])
jmp("func_hypot(int,int)::ret")
inc(esp)
label("func_hypot(int,int)::ret")  //340
mov(esp,ebp)
pop(ebp)
ret()
label("func_QapAssert(int)")  //344
push(ebp)
mov(ebp,esp)
not(eax,ptr[ebp+2])
jz("if_1001::end",eax)
label("Run-time error!")  //349
mov(err,-1)
jmp("if_1001::end")
label("if_1001::end")  //352
label("func_QapAssert(int)::ret")  //353
mov(esp,ebp)
pop(ebp)
ret()
label("func_min(int,int)")  //357
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
less(eax,ptr[ebp+2])
jz("if_1002::end",eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp+3])
pop(ptr[edx+0])
jmp("func_min(int,int)::ret")
jmp("if_1002::end")
label("if_1002::end")  //368
mov(edx,ptr[ebp+4])
push(ptr[ebp+2])
pop(ptr[edx+0])
jmp("func_min(int,int)::ret")
label("func_min(int,int)::ret")  //373
mov(esp,ebp)
pop(ebp)
ret()
label("func_max(int,int)")  //377
push(ebp)
mov(ebp,esp)
mov(eax,ptr[ebp+3])
more(eax,ptr[ebp+2])
jz("if_1003::end",eax)
mov(edx,ptr[ebp+4])
push(ptr[ebp+3])
pop(ptr[edx+0])
jmp("func_max(int,int)::ret")
jmp("if_1003::end")
label("if_1003::end")  //388
mov(edx,ptr[ebp+4])
push(ptr[ebp+2])
pop(ptr[edx+0])
jmp("func_max(int,int)::ret")
label("func_max(int,int)::ret")  //393
mov(esp,ebp)
pop(ebp)
ret()
label("func_clamp(int,int,int)")  //397
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-1])
push(ptr[ebp+4])
push(ptr[ebp+2])
call("func_max(int,int)")
add(esp,3)
pushlea(ptr[ebp-2])
push(ptr[ebp-1])
push(ptr[ebp+3])
call("func_min(int,int)")
add(esp,3)
mov(edx,ptr[ebp+5])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_clamp(int,int,int)::ret")
inc(esp)
inc(esp)
label("func_clamp(int,int,int)::ret")  //418
mov(esp,ebp)
pop(ebp)
ret()
label("func_qap_vertex::`ctor()")  //422
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
lea(ecx,ptr[ecx+1])
call("func_vec2i::`ctor()")
mov(ecx,ptr[ebp-1])
inc(esp)
label("func_qap_vertex::`ctor()::ret")  //432
mov(esp,ebp)
pop(ebp)
ret()
label("func_qap_vertex(int,vec2i)")  //436
push(ebp)
mov(ebp,esp)
sub(esp,3)
lea(ecx,ptr[ebp-3])
call("func_qap_vertex::`ctor()")
mov(ebx,ptr[ebp+4])
mov(ptr[ebp-3],ebx)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
mov(edx,ptr[ebp+5])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_qap_vertex(int,vec2i)::ret")
add(esp,3)
label("func_qap_vertex(int,vec2i)::ret")  //457
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::sys_add(int)")  //461
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::sys_add(int)::ret")
inc(esp)
label("func_vector_qap_vertex::sys_add(int)::ret")  //481
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::sys_add(vec2i)")  //485
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+4])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::sys_add(vec2i)::ret")
inc(esp)
label("func_vector_qap_vertex::sys_add(vec2i)::ret")  //511
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add(int,vec2i)")  //515
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::add(int,vec2i)::ret")
inc(esp)
label("func_vector_qap_vertex::add(int,vec2i)::ret")  //543
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::add(qap_vertex)")  //547
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::sys_add(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_qap_vertex::add(qap_vertex)::ret")
inc(esp)
label("func_vector_qap_vertex::add(qap_vertex)::ret")  //575
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::get_vec2i(int)")  //579
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
dec(esp)
sub(esp,2)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp+2])
add(eax,1)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-6])
push(ptr[ebp-2])
push(ptr[ebp-4])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+3])
push(ptr[ebp-5])
push(ptr[ebp-6])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_vector_qap_vertex::get_vec2i(int)::ret")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::get_vec2i(int)::ret")  //618
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::get(int)")  //622
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
sub(esp,2)
sub(esp,3)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp+2])
add(eax,1)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-3])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::get_vec2i(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-8])
push(ptr[ebp-2])
push(ptr[ebp-4])
push(ptr[ebp-5])
call("func_qap_vertex(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
mov(edx,ptr[ebp+3])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::get(int)::ret")
add(esp,3)
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::get(int)::ret")  //665
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::at(int)")  //669
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
sub(esp,3)
mov(eax,ptr[ecx+0])
push(eax)
mov(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mov(eax,eax)
mul(eax,3)
mov(ebx,eax)
pop(eax)
add(eax,ebx)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_qap_vertex::get(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
jmp("func_vector_qap_vertex::at(int)::ret")
add(esp,3)
inc(esp)
inc(esp)
label("func_vector_qap_vertex::at(int)::ret")  //703
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_qap_vertex::`ctor()")  //707
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
inc(esp)
label("func_vector_qap_vertex::`ctor()::ret")  //715
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::add(int)")  //719
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
inc(ptr[ecx+1])
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_vector_int::add(int)::ret")
inc(esp)
label("func_vector_int::add(int)::ret")  //740
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::get(int)")  //744
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vector_int::get(int)::ret")
inc(esp)
inc(esp)
label("func_vector_int::get(int)::ret")  //761
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::at(int)")  //765
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+0])
add(eax,ptr[ebp+2])
sub(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_int::get(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+3])
push(ptr[ebp-3])
pop(ptr[edx+0])
jmp("func_vector_int::at(int)::ret")
inc(esp)
inc(esp)
inc(esp)
label("func_vector_int::at(int)::ret")  //789
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::front()")  //793
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(0)
mov(ecx,ptr[ebp-1])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_vector_int::front()::ret")
inc(esp)
inc(esp)
label("func_vector_int::front()::ret")  //823
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::back()")  //827
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
more(eax,0)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ecx+1])
sub(eax,1)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(edx,ptr[ebp+2])
push(ptr[ebp-3])
pop(ptr[edx+0])
jmp("func_vector_int::back()::ret")
inc(esp)
inc(esp)
inc(esp)
label("func_vector_int::back()::ret")  //862
mov(esp,ebp)
pop(ebp)
ret()
label("func_vector_int::`ctor()")  //866
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
inc(esp)
label("func_vector_int::`ctor()::ret")  //874
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddTris(int,int,int)")  //878
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
lea(ecx,ptr[ecx+2])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
lea(ecx,ptr[ecx+2])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+2])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddTris(int,int,int)::ret")
inc(esp)
label("func_t_out_dev::AddTris(int,int,int)::ret")  //911
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(qap_vertex)")  //915
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+5])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(qap_vertex)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(qap_vertex)::ret")  //934
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(int,int)")  //938
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ebp+3])
push(ptr[ebp+2])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-4])
push(ptr[ecx+4])
push(ptr[ebp-2])
push(ptr[ebp-3])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(int,int)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(int,int)::ret")  //965
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertex(vec2i)")  //969
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+4])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::AddVertex(vec2i)::ret")
inc(esp)
label("func_t_out_dev::AddVertex(vec2i)::ret")  //988
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::AddVertexAndRetVID(vec2i)")  //992
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+4])
push(ptr[ebp+3])
push(ptr[ebp+2])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(eax,ptr[ecx+1])
sub(eax,1)
mov(edx,ptr[ebp+4])
mov(ptr[edx+0],eax)
jmp("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret")
inc(esp)
label("func_t_out_dev::AddVertexAndRetVID(vec2i)::ret")  //1013
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add(t_out_dev)")  //1017
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
mov(eax,0)
push(eax)
mov(eax,ptr[ebp+5])
mod(eax,3)
mov(ebx,eax)
pop(eax)
eq(eax,ebx)
mov(ptr[ebp-2],eax)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8000::condition")
label("for_8000::continue")  //1045
inc(ptr[ebp-3])
label("for_8000::condition")  //1047
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+3])
jz("for_8000::break",eax)
sub(esp,3)
dec(esp)
pushlea(ptr[ebp-6])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+2])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-7])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::add(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8000::continue")
label("for_8000::break")  //1070
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8001::condition")
label("for_8001::continue")  //1075
inc(ptr[ebp-3])
label("for_8001::condition")  //1077
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+5])
jz("for_8001::break",eax)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-2])
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+4])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
add(eax,ptr[ebp-4])
mov(ptr[ebp-5],eax)
pushlea(ptr[ebp-6])
push(ptr[ebp-5])
lea(ecx,ptr[ecx+2])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
jmp("for_8001::continue")
label("for_8001::break")  //1103
inc(esp)
mov(edx,ptr[ebp+7])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add(t_out_dev)::ret")
inc(esp)
inc(esp)
label("func_t_out_dev::add(t_out_dev)::ret")  //1110
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")  //1114
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
mov(eax,ptr[ecx+1])
mov(ptr[ebp-2],eax)
dec(esp)
dec(esp)
mov(eax,ptr[ebp-2])
push(eax)
mov(eax,1024)
mul(eax,16)
mov(ebx,eax)
pop(eax)
less(eax,ebx)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8002::condition")
label("for_8002::continue")  //1142
inc(ptr[ebp-3])
label("for_8002::condition")  //1144
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+5])
jz("for_8002::break",eax)
sub(esp,3)
sub(esp,3)
pushlea(ptr[ebp-9])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+4])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,3)
sub(esp,2)
pushlea(ptr[ebp-8])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp+3])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
push(ptr[ebp-7])
push(ptr[ebp-8])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-7])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
mov(ecx,ptr[ebp-1])
call("func_t_out_dev::AddVertex(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8002::continue")
label("for_8002::break")  //1190
inc(esp)
dec(esp)
dec(esp)
mov(eax,0)
push(eax)
mov(eax,ptr[ebp+7])
mod(eax,3)
mov(ebx,eax)
pop(eax)
eq(eax,ebx)
mov(ptr[ebp-3],eax)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
call("func_QapAssert(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
dec(esp)
mov(ptr[ebp-3],0)
jmp("for_8003::condition")
label("for_8003::continue")  //1212
inc(ptr[ebp-3])
label("for_8003::condition")  //1214
mov(eax,ptr[ebp-3])
less(eax,ptr[ebp+7])
jz("for_8003::break",eax)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
lea(ecx,ptr[ebp+6])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-2])
add(eax,ptr[ebp-4])
mov(ptr[ebp-5],eax)
pushlea(ptr[ebp-6])
push(ptr[ebp-5])
lea(ecx,ptr[ecx+2])
call("func_vector_int::add(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
jmp("for_8003::continue")
label("for_8003::break")  //1240
inc(esp)
mov(edx,ptr[ebp+9])
mov(ptr[edx+0],0)
jmp("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret")
inc(esp)
inc(esp)
label("func_t_out_dev::add_with_offset(t_out_dev,vec2i)::ret")  //1247
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::GenGeomQuad(int,int,int,int)")  //1251
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,5)
sub(esp,5)
pushlea(ptr[ebp-11])
push(1)
call("func_new_geom(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
pop(ptr[ebp-2])
add(esp,5)
mov(ebx,ptr[ecx+4])
mov(ptr[ebp-2],ebx)
dec(esp)
mov(eax,ptr[ebp+3])
div(eax,2)
mov(ptr[ebp-7],eax)
dec(esp)
mov(eax,ptr[ebp+2])
div(eax,2)
mov(ptr[ebp-8],eax)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp-7])
mov(ptr[ebp-9],eax)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp-8])
mov(ptr[ebp-10],eax)
pushlea(ptr[ebp-11])
push(ptr[ebp-9])
push(ptr[ebp-10])
lea(ecx,ptr[ebp-6])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp-7])
mov(ptr[ebp-9],eax)
mov(eax,ptr[ebp+4])
sub(eax,ptr[ebp-8])
mov(ptr[ebp-10],eax)
pushlea(ptr[ebp-11])
push(ptr[ebp-9])
push(ptr[ebp-10])
lea(ecx,ptr[ebp-6])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
add(eax,ptr[ebp-7])
mov(ptr[ebp-9],eax)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp-8])
mov(ptr[ebp-10],eax)
pushlea(ptr[ebp-11])
push(ptr[ebp-9])
push(ptr[ebp-10])
lea(ecx,ptr[ebp-6])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
mov(eax,ptr[ebp+5])
sub(eax,ptr[ebp-7])
mov(ptr[ebp-9],eax)
mov(eax,ptr[ebp+4])
add(eax,ptr[ebp-8])
mov(ptr[ebp-10],eax)
pushlea(ptr[ebp-11])
push(ptr[ebp-9])
push(ptr[ebp-10])
lea(ecx,ptr[ebp-6])
call("func_t_out_dev::AddVertex(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(1)
push(0)
push(3)
lea(ecx,ptr[ebp-6])
call("func_t_out_dev::AddTris(int,int,int)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
dec(esp)
pushlea(ptr[ebp-9])
push(3)
push(2)
push(1)
lea(ecx,ptr[ebp-6])
call("func_t_out_dev::AddTris(int,int,int)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
mov(edx,ptr[ebp+6])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
jmp("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret")
inc(esp)
inc(esp)
add(esp,5)
inc(esp)
label("func_t_out_dev::GenGeomQuad(int,int,int,int)::ret")  //1396
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_out_dev::`ctor()")  //1400
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
lea(ecx,ptr[ecx+0])
call("func_vector_qap_vertex::`ctor()")
mov(ecx,ptr[ebp-1])
lea(ecx,ptr[ecx+2])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
mov(ptr[ecx+4],0)
inc(esp)
label("func_t_out_dev::`ctor()::ret")  //1413
mov(esp,ebp)
pop(ebp)
ret()
label("func_new_geom(int)")  //1417
push(ebp)
mov(ebp,esp)
sub(esp,5)
lea(ecx,ptr[ebp-5])
call("func_t_out_dev::`ctor()")
dec(esp)
dec(esp)
mov(eax,3)
mul(eax,4)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-6],eax)
pushlea(ptr[ebp-7])
push(ptr[ebp-6])
call("func_alloc(int)")
add(esp,2)
mov(ebx,ptr[ebp-7])
mov(ptr[ebp-5],ebx)
inc(esp)
inc(esp)
mov(ptr[ebp-4],0)
dec(esp)
dec(esp)
mov(eax,1)
mul(eax,6)
mul(eax,ptr[ebp+2])
mov(ptr[ebp-6],eax)
pushlea(ptr[ebp-7])
push(ptr[ebp-6])
call("func_alloc(int)")
add(esp,2)
mov(ebx,ptr[ebp-7])
mov(ptr[ebp-3],ebx)
inc(esp)
inc(esp)
mov(ptr[ebp-2],0)
mov(edx,ptr[ebp+3])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[edx+0])
pop(ptr[edx+1])
pop(ptr[edx+2])
pop(ptr[edx+3])
pop(ptr[edx+4])
jmp("func_new_geom(int)::ret")
add(esp,5)
label("func_new_geom(int)::ret")  //1466
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_input::`ctor()")  //1470
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
lea(ecx,ptr[ecx+0])
call("func_vec2i::`ctor()")
mov(ecx,ptr[ebp-1])
mov(ptr[ecx+2],0)
lea(ecx,ptr[ecx+3])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
lea(ecx,ptr[ecx+5])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
inc(esp)
label("func_t_input::`ctor()::ret")  //1486
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_int()")  //1490
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ecx+0])
call("func_get_int(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
mov(eax,ptr[ebp-3])
mov(ptr[ebp-2],eax)
inc(esp)
inc(ptr[ecx+0])
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
pop(ptr[edx+0])
jmp("func_t_dev::read_int()::ret")
inc(esp)
inc(esp)
label("func_t_dev::read_int()::ret")  //1512
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_vec2i()")  //1516
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
dec(esp)
sub(esp,2)
pushlea(ptr[ebp-2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
pushlea(ptr[ebp-3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
push(ptr[ebp-3])
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(edx,ptr[ebp+2])
push(ptr[ebp-4])
push(ptr[ebp-5])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_t_dev::read_vec2i()::ret")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
label("func_t_dev::read_vec2i()::ret")  //1550
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::read_vector_int()")  //1554
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
sub(esp,2)
lea(ecx,ptr[ebp-3])
call("func_vector_int::`ctor()")
mov(ecx,ptr[ebp-1])
dec(esp)
pushlea(ptr[ebp-4])
mov(ecx,ptr[ebp-1])
call("func_t_dev::read_int()")
mov(ecx,ptr[ebp-1])
add(esp,1)
mov(ebx,ptr[ebp-4])
mov(ptr[ebp-2],ebx)
inc(esp)
mov(ebx,ptr[ebp-2])
add(ptr[ecx+0],ebx)
mov(ebx,ptr[ecx+0])
mov(ptr[ebp-3],ebx)
mov(edx,ptr[ebp+2])
push(ptr[ebp-2])
push(ptr[ebp-3])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_t_dev::read_vector_int()::ret")
add(esp,2)
inc(esp)
label("func_t_dev::read_vector_int()::ret")  //1584
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int)")  //1588
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ecx+0])
push(ptr[ebp+2])
call("func_set_int(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
mov(ebx,ptr[ebp-2])
mov(ptr[ecx+0],ebx)
inc(esp)
mov(edx,ptr[ebp+3])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int)::ret")
inc(esp)
label("func_t_dev::write(int)::ret")  //1608
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int,int,int)")  //1612
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int,int,int)::ret")
inc(esp)
label("func_t_dev::write(int,int,int)::ret")  //1646
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(vec2i)")  //1650
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+4])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(vec2i)::ret")
inc(esp)
label("func_t_dev::write(vec2i)::ret")  //1676
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(int,vec2i)")  //1680
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(int,vec2i)::ret")
inc(esp)
label("func_t_dev::write(int,vec2i)::ret")  //1714
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(qap_vertex)")  //1718
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+2])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+4])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,3)
inc(esp)
mov(edx,ptr[ebp+5])
push(ptr[ecx+0])
pop(ptr[edx+0])
jmp("func_t_dev::write(qap_vertex)::ret")
inc(esp)
label("func_t_dev::write(qap_vertex)::ret")  //1745
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write(t_out_dev)")  //1749
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-2],0)
jmp("for_8004::condition")
label("for_8004::continue")  //1765
inc(ptr[ebp-2])
label("for_8004::condition")  //1767
mov(eax,ptr[ebp-2])
less(eax,ptr[ebp+3])
jz("for_8004::break",eax)
sub(esp,3)
dec(esp)
pushlea(ptr[ebp-5])
push(ptr[ebp-2])
lea(ecx,ptr[ebp+2])
call("func_vector_qap_vertex::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-6])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(qap_vertex)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,3)
jmp("for_8004::continue")
label("for_8004::break")  //1790
inc(esp)
dec(esp)
pushlea(ptr[ebp-2])
push(ptr[ebp+5])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-2],0)
jmp("for_8005::condition")
label("for_8005::continue")  //1803
inc(ptr[ebp-2])
label("for_8005::condition")  //1805
mov(eax,ptr[ebp-2])
less(eax,ptr[ebp+5])
jz("for_8005::break",eax)
dec(esp)
dec(esp)
pushlea(ptr[ebp-3])
push(ptr[ebp-2])
lea(ecx,ptr[ebp+4])
call("func_vector_int::at(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
pushlea(ptr[ebp-4])
push(ptr[ebp-3])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
inc(esp)
jmp("for_8005::continue")
label("for_8005::break")  //1826
inc(esp)
inc(esp)
label("func_t_dev::write(t_out_dev)::ret")  //1829
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::write_def(vec2i)")  //1833
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
dec(esp)
pushlea(ptr[ebp-2])
push(6)
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(eax,255)
push(eax)
mov(eax,8)
mul(eax,3)
mov(ebx,eax)
pop(eax)
shl(eax,ebx)
mov(ptr[ebp-2],eax)
dec(esp)
inv(eax,1)
mov(ptr[ebp-3],eax)
dec(esp)
mov(eax,ptr[ebp-2])
push(eax)
mov(eax,255)
push(eax)
mov(eax,8)
mul(eax,2)
mov(ebx,eax)
pop(eax)
shl(eax,ebx)
mov(ebx,eax)
pop(eax)
add(eax,ebx)
mov(ptr[ebp-4],eax)
dec(esp)
mov(eax,ptr[ebp-2])
push(eax)
mov(eax,255)
push(eax)
mov(eax,8)
mul(eax,1)
mov(ebx,eax)
pop(eax)
shl(eax,ebx)
mov(ebx,eax)
pop(eax)
add(eax,ebx)
mov(ptr[ebp-5],eax)
dec(esp)
mov(eax,ptr[ebp-2])
push(eax)
mov(eax,255)
push(eax)
mov(eax,8)
mul(eax,0)
mov(ebx,eax)
pop(eax)
shl(eax,ebx)
mov(ebx,eax)
pop(eax)
add(eax,ebx)
mov(ptr[ebp-6],eax)
dec(esp)
mov(eax,ptr[ebp-2])
mov(ptr[ebp-7],eax)
dec(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
inv(eax,30)
mov(ptr[ebp-8],eax)
pushlea(ptr[ebp-10])
push(ptr[ebp-8])
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-12])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-9])
push(ptr[ebp-10])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-13])
push(ptr[ebp-7])
push(ptr[ebp-11])
push(ptr[ebp-12])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
inc(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-9])
push(0)
push(30)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-11])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-8])
push(ptr[ebp-9])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-12])
push(ptr[ebp-7])
push(ptr[ebp-10])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-9])
push(30)
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-11])
push(ptr[ebp+3])
push(ptr[ebp+2])
push(ptr[ebp-8])
push(ptr[ebp-9])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-12])
push(ptr[ebp-7])
push(ptr[ebp-10])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
add(ptr[ebp-9],60)
dec(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
inv(eax,30)
mov(ptr[ebp-10],eax)
pushlea(ptr[ebp-12])
push(ptr[ebp-10])
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-14])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-11])
push(ptr[ebp-12])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-15])
push(ptr[ebp-7])
push(ptr[ebp-13])
push(ptr[ebp-14])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
inc(esp)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
push(0)
push(30)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-13])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-14])
push(ptr[ebp-7])
push(ptr[ebp-12])
push(ptr[ebp-13])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
sub(esp,2)
sub(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
push(30)
push(0)
call("func_vec2i(int,int)")
mov(ecx,ptr[ebp-1])
add(esp,3)
pushlea(ptr[ebp-13])
push(ptr[ebp-8])
push(ptr[ebp-9])
push(ptr[ebp-10])
push(ptr[ebp-11])
call("func_add(vec2i,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,5)
pushlea(ptr[ebp-14])
push(ptr[ebp-5])
push(ptr[ebp-12])
push(ptr[ebp-13])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int,vec2i)")
mov(ecx,ptr[ebp-1])
add(esp,4)
inc(esp)
add(esp,2)
add(esp,2)
dec(esp)
mov(eax,2)
mul(eax,3)
mov(ptr[ebp-10],eax)
dec(esp)
pushlea(ptr[ebp-11])
push(ptr[ebp-10])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
dec(esp)
mov(ptr[ebp-11],0)
jmp("for_8006::condition")
label("for_8006::continue")  //2100
inc(ptr[ebp-11])
label("for_8006::condition")  //2102
mov(eax,ptr[ebp-11])
less(eax,ptr[ebp-10])
jz("for_8006::break",eax)
dec(esp)
pushlea(ptr[ebp-12])
push(ptr[ebp-11])
mov(ecx,ptr[ebp-1])
call("func_t_dev::write(int)")
mov(ecx,ptr[ebp-1])
add(esp,2)
inc(esp)
jmp("for_8006::continue")
label("for_8006::break")  //2115
inc(esp)
inc(esp)
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
inc(esp)
label("func_t_dev::write_def(vec2i)::ret")  //2126
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_dev::`ctor()")  //2130
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
inc(esp)
label("func_t_dev::`ctor()::ret")  //2137
mov(esp,ebp)
pop(ebp)
ret()
label("func_t_mem::`ctor()")  //2141
push(ebp)
mov(ebp,esp)
dec(esp)
mov(ptr[ebp-1],ecx)
mov(ptr[ecx+0],0)
mov(ptr[ecx+1],0)
inc(esp)
label("func_t_mem::`ctor()::ret")  //2149
mov(esp,ebp)
pop(ebp)
ret()
label("func_cr_test(t_input)")  //2153
push(ebp)
mov(ebp,esp)
dec(esp)
mov(eax,1024)
push(eax)
mov(eax,64)
add(eax,8)
mov(ebx,eax)
pop(eax)
mul(eax,ebx)
mov(ptr[ebp-1],eax)
dec(esp)
lea(ecx,ptr[ebp-2])
call("func_t_dev::`ctor()")
mov(ebx,ptr[ebp-1])
mov(ptr[ebp-2],ebx)
sub(esp,2)
push(ptr[ebp+3])
push(ptr[ebp+2])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
sub(esp,5)
sub(esp,5)
pushlea(ptr[ebp-14])
push(16)
call("func_new_geom(int)")
add(esp,2)
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
add(esp,5)
push(eax)
mov(eax,255)
shl(eax,24)
mov(eax,eax)
push(eax)
mov(eax,128)
shl(eax,8)
mov(ebx,eax)
pop(eax)
add(eax,ebx)
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-5],ebx)
jz("if_1004::else",1)
sub(esp,5)
sub(esp,5)
pushlea(ptr[ebp-19])
push(ptr[ebp-4])
push(ptr[ebp-3])
push(30)
push(30)
lea(ecx,ptr[ebp-9])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
pop(ptr[ebp-14])
pop(ptr[ebp-13])
pop(ptr[ebp-12])
pop(ptr[ebp-11])
pop(ptr[ebp-10])
add(esp,5)
push(eax)
mov(eax,255)
shl(eax,24)
mov(eax,eax)
push(eax)
mov(eax,128)
shl(eax,8)
mov(ebx,eax)
pop(eax)
add(eax,ebx)
push(eax)
mov(eax,255)
shl(eax,16)
mov(ebx,eax)
pop(eax)
add(eax,ebx)
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-5],ebx)
sub(esp,5)
dec(esp)
sub(esp,5)
mov(eax,ptr[ebp-3])
sub(eax,64)
mov(ptr[ebp-20],eax)
pushlea(ptr[ebp-25])
push(ptr[ebp-4])
push(ptr[ebp-20])
push(100)
push(10)
lea(ecx,ptr[ebp-9])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-21])
push(ptr[ebp-22])
push(ptr[ebp-23])
push(ptr[ebp-24])
push(ptr[ebp-25])
pop(ptr[ebp-19])
pop(ptr[ebp-18])
pop(ptr[ebp-17])
pop(ptr[ebp-16])
pop(ptr[ebp-15])
add(esp,5)
inc(esp)
sub(esp,5)
dec(esp)
sub(esp,5)
mov(eax,200)
add(eax,ptr[ebp-4])
mov(ptr[ebp-25],eax)
pushlea(ptr[ebp-30])
push(ptr[ebp-25])
push(ptr[ebp-3])
push(10)
push(60)
lea(ecx,ptr[ebp-9])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-26])
push(ptr[ebp-27])
push(ptr[ebp-28])
push(ptr[ebp-29])
push(ptr[ebp-30])
pop(ptr[ebp-24])
pop(ptr[ebp-23])
pop(ptr[ebp-22])
pop(ptr[ebp-21])
pop(ptr[ebp-20])
add(esp,5)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-25])
lea(ecx,ptr[ebp-12])
call("func_vector_int::back()")
add(esp,1)
mov(eax,ptr[ebp-25])
less(eax,1024)
mov(ptr[ebp-26],eax)
pushlea(ptr[ebp-27])
push(ptr[ebp-26])
call("func_QapAssert(int)")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-25])
lea(ecx,ptr[ebp-17])
call("func_vector_int::back()")
add(esp,1)
mov(eax,ptr[ebp-25])
less(eax,1024)
mov(ptr[ebp-26],eax)
pushlea(ptr[ebp-27])
push(ptr[ebp-26])
call("func_QapAssert(int)")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-25])
lea(ecx,ptr[ebp-22])
call("func_vector_int::back()")
add(esp,1)
mov(eax,ptr[ebp-25])
less(eax,1024)
mov(ptr[ebp-26],eax)
pushlea(ptr[ebp-27])
push(ptr[ebp-26])
call("func_QapAssert(int)")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
sub(esp,2)
sub(esp,2)
pushlea(ptr[ebp-28])
push(0)
push(0)
call("func_vec2i(int,int)")
add(esp,3)
push(ptr[ebp-27])
push(ptr[ebp-28])
pop(ptr[ebp-26])
pop(ptr[ebp-25])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-27])
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
push(ptr[ebp-25])
push(ptr[ebp-26])
lea(ecx,ptr[ebp-9])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,8)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-27])
lea(ecx,ptr[ebp-7])
call("func_vector_int::back()")
add(esp,1)
mov(eax,ptr[ebp-27])
less(eax,1024)
mov(ptr[ebp-28],eax)
pushlea(ptr[ebp-29])
push(ptr[ebp-28])
call("func_QapAssert(int)")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-27])
push(ptr[ebp-15])
push(ptr[ebp-16])
push(ptr[ebp-17])
push(ptr[ebp-18])
push(ptr[ebp-19])
push(ptr[ebp-25])
push(ptr[ebp-26])
lea(ecx,ptr[ebp-9])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,8)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-27])
lea(ecx,ptr[ebp-7])
call("func_vector_int::back()")
add(esp,1)
mov(eax,ptr[ebp-27])
less(eax,1024)
mov(ptr[ebp-28],eax)
pushlea(ptr[ebp-29])
push(ptr[ebp-28])
call("func_QapAssert(int)")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-27])
push(ptr[ebp-20])
push(ptr[ebp-21])
push(ptr[ebp-22])
push(ptr[ebp-23])
push(ptr[ebp-24])
push(ptr[ebp-25])
push(ptr[ebp-26])
lea(ecx,ptr[ebp-9])
call("func_t_out_dev::add_with_offset(t_out_dev,vec2i)")
add(esp,8)
inc(esp)
dec(esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-27])
lea(ecx,ptr[ebp-7])
call("func_vector_int::back()")
add(esp,1)
mov(eax,ptr[ebp-27])
less(eax,1024)
mov(ptr[ebp-28],eax)
pushlea(ptr[ebp-29])
push(ptr[ebp-28])
call("func_QapAssert(int)")
add(esp,2)
inc(esp)
inc(esp)
inc(esp)
dec(esp)
pushlea(ptr[ebp-27])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
lea(ecx,ptr[ebp-2])
call("func_t_dev::write(t_out_dev)")
add(esp,6)
inc(esp)
add(esp,2)
add(esp,5)
add(esp,5)
add(esp,5)
jmp("if_1004::end")
label("if_1004::else")  //2467
sub(esp,5)
pushlea(ptr[ebp-14])
push(ptr[ebp-4])
push(ptr[ebp-3])
push(30)
push(30)
lea(ecx,ptr[ebp-9])
call("func_t_out_dev::GenGeomQuad(int,int,int,int)")
add(esp,5)
push(ptr[ebp-10])
push(ptr[ebp-11])
push(ptr[ebp-12])
push(ptr[ebp-13])
push(ptr[ebp-14])
pop(ptr[ebp-9])
pop(ptr[ebp-8])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
pop(ptr[ebp-5])
add(esp,5)
dec(esp)
pushlea(ptr[ebp-10])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
push(ptr[ebp-8])
push(ptr[ebp-9])
lea(ecx,ptr[ebp-2])
call("func_t_dev::write(t_out_dev)")
add(esp,6)
inc(esp)
label("if_1004::end")  //2499
sub(esp,2)
lea(ecx,ptr[ebp-11])
call("func_t_mem::`ctor()")
mov(ebx,ptr[ebp-1])
mov(ptr[ebp-11],ebx)
push(eax)
mov(eax,ptr[ebp-2])
sub(eax,ptr[ebp-11])
mov(ebx,eax)
pop(eax)
mov(ptr[ebp-10],ebx)
mov(edx,ptr[ebp+9])
push(ptr[ebp-10])
push(ptr[ebp-11])
pop(ptr[edx+0])
pop(ptr[edx+1])
jmp("func_cr_test(t_input)::ret")
add(esp,2)
add(esp,5)
add(esp,2)
inc(esp)
inc(esp)
label("func_cr_test(t_input)::ret")  //2522
mov(esp,ebp)
pop(ebp)
ret()
label("func_main(int)")  //2526
push(ebp)
mov(ebp,esp)
dec(esp)
dec(esp)
pushlea(ptr[ebp-1])
call("func_g_ptr_addr()")
add(esp,1)
pushlea(ptr[ebp-2])
push(ptr[ebp-1])
push(0)
call("func_set_int(int,int)")
add(esp,3)
inc(esp)
inc(esp)
sub(esp,7)
lea(ecx,ptr[ebp-7])
call("func_t_input::`ctor()")
dec(esp)
lea(ecx,ptr[ebp-8])
call("func_t_dev::`ctor()")
mov(ebx,ptr[ebp+2])
mov(ptr[ebp-8],ebx)
sub(esp,2)
pushlea(ptr[ebp-10])
lea(ecx,ptr[ebp-8])
call("func_t_dev::read_vec2i()")
add(esp,1)
push(ptr[ebp-9])
push(ptr[ebp-10])
pop(ptr[ebp-7])
pop(ptr[ebp-6])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-9])
lea(ecx,ptr[ebp-8])
call("func_t_dev::read_int()")
add(esp,1)
mov(ebx,ptr[ebp-9])
mov(ptr[ebp-5],ebx)
inc(esp)
sub(esp,2)
pushlea(ptr[ebp-10])
lea(ecx,ptr[ebp-8])
call("func_t_dev::read_vector_int()")
add(esp,1)
push(ptr[ebp-9])
push(ptr[ebp-10])
pop(ptr[ebp-4])
pop(ptr[ebp-3])
add(esp,2)
sub(esp,2)
pushlea(ptr[ebp-10])
lea(ecx,ptr[ebp-8])
call("func_t_dev::read_vector_int()")
add(esp,1)
push(ptr[ebp-9])
push(ptr[ebp-10])
pop(ptr[ebp-2])
pop(ptr[ebp-1])
add(esp,2)
sub(esp,2)
sub(esp,2)
pushlea(ptr[ebp-12])
push(ptr[ebp-1])
push(ptr[ebp-2])
push(ptr[ebp-3])
push(ptr[ebp-4])
push(ptr[ebp-5])
push(ptr[ebp-6])
push(ptr[ebp-7])
call("func_cr_test(t_input)")
add(esp,8)
push(ptr[ebp-11])
push(ptr[ebp-12])
pop(ptr[ebp-10])
pop(ptr[ebp-9])
add(esp,2)
dec(esp)
pushlea(ptr[ebp-11])
push(ptr[ebp-9])
call("func_setebx(int)")
add(esp,2)
inc(esp)
mov(ecx,1)
mov(edx,ptr[ebp+3])
push(ptr[ebp-10])
pop(ptr[edx+0])
jmp("func_main(int)::ret")
add(esp,2)
inc(esp)
add(esp,7)
label("func_main(int)::ret")  //2618
mov(esp,ebp)
pop(ebp)
ret()
label("begin")  //2622
dec(esp)
pushlea(ptr[ebp-1])
push(ecx)
call("func_main(int)")
add(esp,2)
mov(eax,ptr[ebp-1])
inc(esp)
mov(err,1)
